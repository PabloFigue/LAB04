

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 08 01:03:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0008                     	;# 
   171     0009                     	;# 
   172     000A                     	;# 
   173     000B                     	;# 
   174     000C                     	;# 
   175     000D                     	;# 
   176     000E                     	;# 
   177     000E                     	;# 
   178     000F                     	;# 
   179     0010                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0013                     	;# 
   183     0014                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001B                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     0081                     	;# 
   198     0085                     	;# 
   199     0086                     	;# 
   200     0087                     	;# 
   201     0088                     	;# 
   202     0089                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     008F                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0097                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009A                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     0105                     	;# 
   226     0107                     	;# 
   227     0108                     	;# 
   228     0109                     	;# 
   229     010C                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0185                     	;# 
   235     0187                     	;# 
   236     0188                     	;# 
   237     0189                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240     0000                     	;# 
   241     0001                     	;# 
   242     0002                     	;# 
   243     0003                     	;# 
   244     0004                     	;# 
   245     0005                     	;# 
   246     0006                     	;# 
   247     0007                     	;# 
   248     0008                     	;# 
   249     0009                     	;# 
   250     000A                     	;# 
   251     000B                     	;# 
   252     000C                     	;# 
   253     000D                     	;# 
   254     000E                     	;# 
   255     000E                     	;# 
   256     000F                     	;# 
   257     0010                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0015                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001B                     	;# 
   271     001C                     	;# 
   272     001D                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     0081                     	;# 
   276     0085                     	;# 
   277     0086                     	;# 
   278     0087                     	;# 
   279     0088                     	;# 
   280     0089                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0091                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     0105                     	;# 
   304     0107                     	;# 
   305     0108                     	;# 
   306     0109                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     0185                     	;# 
   313     0187                     	;# 
   314     0188                     	;# 
   315     0189                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     008F                     	;# 
   363     0090                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0095                     	;# 
   371     0096                     	;# 
   372     0097                     	;# 
   373     0098                     	;# 
   374     0099                     	;# 
   375     009A                     	;# 
   376     009B                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     0105                     	;# 
   382     0107                     	;# 
   383     0108                     	;# 
   384     0109                     	;# 
   385     010C                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     010F                     	;# 
   390     0185                     	;# 
   391     0187                     	;# 
   392     0188                     	;# 
   393     0189                     	;# 
   394     018C                     	;# 
   395     018D                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000D                     	;# 
   410     000E                     	;# 
   411     000E                     	;# 
   412     000F                     	;# 
   413     0010                     	;# 
   414     0011                     	;# 
   415     0012                     	;# 
   416     0013                     	;# 
   417     0014                     	;# 
   418     0015                     	;# 
   419     0015                     	;# 
   420     0016                     	;# 
   421     0017                     	;# 
   422     0018                     	;# 
   423     0019                     	;# 
   424     001A                     	;# 
   425     001B                     	;# 
   426     001B                     	;# 
   427     001C                     	;# 
   428     001D                     	;# 
   429     001E                     	;# 
   430     001F                     	;# 
   431     0081                     	;# 
   432     0085                     	;# 
   433     0086                     	;# 
   434     0087                     	;# 
   435     0088                     	;# 
   436     0089                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     008F                     	;# 
   441     0090                     	;# 
   442     0091                     	;# 
   443     0092                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0093                     	;# 
   447     0094                     	;# 
   448     0095                     	;# 
   449     0096                     	;# 
   450     0097                     	;# 
   451     0098                     	;# 
   452     0099                     	;# 
   453     009A                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     009F                     	;# 
   459     0105                     	;# 
   460     0107                     	;# 
   461     0108                     	;# 
   462     0109                     	;# 
   463     010C                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     010E                     	;# 
   467     010F                     	;# 
   468     0185                     	;# 
   469     0187                     	;# 
   470     0188                     	;# 
   471     0189                     	;# 
   472     018C                     	;# 
   473     018D                     	;# 
   474     0000                     	;# 
   475     0001                     	;# 
   476     0002                     	;# 
   477     0003                     	;# 
   478     0004                     	;# 
   479     0005                     	;# 
   480     0006                     	;# 
   481     0007                     	;# 
   482     0008                     	;# 
   483     0009                     	;# 
   484     000A                     	;# 
   485     000B                     	;# 
   486     000C                     	;# 
   487     000D                     	;# 
   488     000E                     	;# 
   489     000E                     	;# 
   490     000F                     	;# 
   491     0010                     	;# 
   492     0011                     	;# 
   493     0012                     	;# 
   494     0013                     	;# 
   495     0014                     	;# 
   496     0015                     	;# 
   497     0015                     	;# 
   498     0016                     	;# 
   499     0017                     	;# 
   500     0018                     	;# 
   501     0019                     	;# 
   502     001A                     	;# 
   503     001B                     	;# 
   504     001B                     	;# 
   505     001C                     	;# 
   506     001D                     	;# 
   507     001E                     	;# 
   508     001F                     	;# 
   509     0081                     	;# 
   510     0085                     	;# 
   511     0086                     	;# 
   512     0087                     	;# 
   513     0088                     	;# 
   514     0089                     	;# 
   515     008C                     	;# 
   516     008D                     	;# 
   517     008E                     	;# 
   518     008F                     	;# 
   519     0090                     	;# 
   520     0091                     	;# 
   521     0092                     	;# 
   522     0093                     	;# 
   523     0093                     	;# 
   524     0093                     	;# 
   525     0094                     	;# 
   526     0095                     	;# 
   527     0096                     	;# 
   528     0097                     	;# 
   529     0098                     	;# 
   530     0099                     	;# 
   531     009A                     	;# 
   532     009B                     	;# 
   533     009C                     	;# 
   534     009D                     	;# 
   535     009E                     	;# 
   536     009F                     	;# 
   537     0105                     	;# 
   538     0107                     	;# 
   539     0108                     	;# 
   540     0109                     	;# 
   541     010C                     	;# 
   542     010C                     	;# 
   543     010D                     	;# 
   544     010E                     	;# 
   545     010F                     	;# 
   546     0185                     	;# 
   547     0187                     	;# 
   548     0188                     	;# 
   549     0189                     	;# 
   550     018C                     	;# 
   551     018D                     	;# 
   552                           
   553                           	psect	idataBANK1
   554     0E1A                     __pidataBANK1:
   555                           
   556                           ;initializer for _dw
   557     0E1A  3444               	retlw	68
   558     0E1B  346F               	retlw	111
   559     0E1C  346D               	retlw	109
   560     0E1D  3469               	retlw	105
   561     0E1E  346E               	retlw	110
   562     0E1F  3467               	retlw	103
   563     0E20  346F               	retlw	111
   564     0E21  3400               	retlw	0
   565     0E22  3400               	retlw	0
   566     0E23  3400               	retlw	0
   567     0E24  3400               	retlw	0
   568     0E25  344C               	retlw	76
   569     0E26  3475               	retlw	117
   570     0E27  346E               	retlw	110
   571     0E28  3465               	retlw	101
   572     0E29  3473               	retlw	115
   573     0E2A  3400               	retlw	0
   574     0E2B  3400               	retlw	0
   575     0E2C  3400               	retlw	0
   576     0E2D  3400               	retlw	0
   577     0E2E  3400               	retlw	0
   578     0E2F  3400               	retlw	0
   579     0E30  344D               	retlw	77
   580     0E31  3461               	retlw	97
   581     0E32  3472               	retlw	114
   582     0E33  3474               	retlw	116
   583     0E34  3465               	retlw	101
   584     0E35  3473               	retlw	115
   585     0E36  3400               	retlw	0
   586     0E37  3400               	retlw	0
   587     0E38  3400               	retlw	0
   588     0E39  3400               	retlw	0
   589     0E3A  3400               	retlw	0
   590     0E3B  344D               	retlw	77
   591     0E3C  3469               	retlw	105
   592     0E3D  3465               	retlw	101
   593     0E3E  3472               	retlw	114
   594     0E3F  3463               	retlw	99
   595     0E40  346F               	retlw	111
   596     0E41  346C               	retlw	108
   597     0E42  3465               	retlw	101
   598     0E43  3473               	retlw	115
   599     0E44  3400               	retlw	0
   600     0E45  3400               	retlw	0
   601     0E46  344A               	retlw	74
   602     0E47  3475               	retlw	117
   603     0E48  3465               	retlw	101
   604     0E49  3476               	retlw	118
   605     0E4A  3465               	retlw	101
   606     0E4B  3473               	retlw	115
   607     0E4C  3400               	retlw	0
   608     0E4D  3400               	retlw	0
   609     0E4E  3400               	retlw	0
   610     0E4F  3400               	retlw	0
   611     0E50  3400               	retlw	0
   612     0E51  3456               	retlw	86
   613     0E52  3469               	retlw	105
   614     0E53  3465               	retlw	101
   615     0E54  3472               	retlw	114
   616     0E55  346E               	retlw	110
   617     0E56  3465               	retlw	101
   618     0E57  3473               	retlw	115
   619     0E58  3400               	retlw	0
   620     0E59  3400               	retlw	0
   621     0E5A  3400               	retlw	0
   622     0E5B  3400               	retlw	0
   623     0E5C  3453               	retlw	83
   624     0E5D  3461               	retlw	97
   625     0E5E  3462               	retlw	98
   626     0E5F  3461               	retlw	97
   627     0E60  3464               	retlw	100
   628     0E61  346F               	retlw	111
   629     0E62  3400               	retlw	0
   630     0E63  3400               	retlw	0
   631     0E64  3400               	retlw	0
   632     0E65  3400               	retlw	0
   633     0E66  3400               	retlw	0
   634                           
   635                           	psect	strings
   636     0712                     __pstrings:
   637     0712                     stringtab:
   638     0712                     __stringtab:
   639                           
   640                           ;	String table - string pointers are 1 byte each
   641     0712  1BFF               	btfsc	btemp+1,7
   642     0713  2F1C               	ljmp	stringcode
   643     0714  1383               	bcf	3,7
   644     0715  187F               	btfsc	btemp+1,0
   645     0716  1783               	bsf	3,7
   646     0717  0800               	movf	0,w
   647     0718  0A84               	incf	4,f
   648     0719  1903               	skipnz
   649     071A  0AFF               	incf	btemp+1,f
   650     071B  0008               	return
   651     071C                     stringcode:
   652     071C                     stringdir:
   653     071C  3007               	movlw	high stringdir
   654     071D  008A               	movwf	10
   655     071E  0804               	movf	4,w
   656     071F  0A84               	incf	4,f
   657     0720  0782               	addwf	2,f
   658     0721                     __stringbase:
   659     0721  3400               	retlw	0
   660     0722                     __end_of__stringtab:
   661     0722                     _dpowers:
   662     0722  3401               	retlw	1
   663     0723  3400               	retlw	0
   664     0724  340A               	retlw	10
   665     0725  3400               	retlw	0
   666     0726  3464               	retlw	100
   667     0727  3400               	retlw	0
   668     0728  34E8               	retlw	232
   669     0729  3403               	retlw	3
   670     072A  3410               	retlw	16
   671     072B  3427               	retlw	39
   672     072C                     __end_of_dpowers:
   673     072C                     _letra:
   674     072C  340E               	retlw	14
   675     072D  3400               	retlw	0
   676     072E  3416               	retlw	22
   677     072F  3419               	retlw	25
   678     0730  3411               	retlw	17
   679     0731  3411               	retlw	17
   680     0732  3411               	retlw	17
   681     0733  3400               	retlw	0
   682     0734                     __end_of_letra:
   683     0009                     _PORTEbits	set	9
   684     0005                     _PORTAbits	set	5
   685     0013                     _SSPBUF	set	19
   686     0014                     _SSPCON	set	20
   687     0009                     _PORTE	set	9
   688     0005                     _PORTA	set	5
   689     0006                     _PORTB	set	6
   690     0008                     _PORTD	set	8
   691     0006                     _PORTBbits	set	6
   692     000B                     _INTCONbits	set	11
   693     005B                     _RBIE	set	91
   694     0063                     _SSPIF	set	99
   695     005E                     _PEIE	set	94
   696     005F                     _GIE	set	95
   697     0096                     _IOCBbits	set	150
   698     0095                     _WPUBbits	set	149
   699     0086                     _TRISBbits	set	134
   700     0081                     _OPTION_REGbits	set	129
   701     0091                     _SSPCON2bits	set	145
   702     0087                     _TRISCbits	set	135
   703     0094                     _SSPSTAT	set	148
   704     0093                     _SSPADD	set	147
   705     0091                     _SSPCON2	set	145
   706     008F                     _OSCCONbits	set	143
   707     0088                     _TRISD	set	136
   708     0086                     _TRISB	set	134
   709     0085                     _TRISA	set	133
   710     0089                     _TRISE	set	137
   711     0463                     _SSPIE	set	1123
   712     043C                     _TRISC4	set	1084
   713     043B                     _TRISC3	set	1083
   714     0189                     _ANSELH	set	393
   715     0188                     _ANSEL	set	392
   716     0734                     STR_1:
   717     0734  3453               	retlw	83	;'S'
   718     0735  3431               	retlw	49	;'1'
   719     0736  343A               	retlw	58	;':'
   720     0737  3420               	retlw	32	;' '
   721     0738  3420               	retlw	32	;' '
   722     0739  3420               	retlw	32	;' '
   723     073A  3425               	retlw	37	;'%'
   724     073B  3430               	retlw	48	;'0'
   725     073C  3432               	retlw	50	;'2'
   726     073D  3475               	retlw	117	;'u'
   727     073E  342F               	retlw	47	;'/'
   728     073F  3425               	retlw	37	;'%'
   729     0740  3430               	retlw	48	;'0'
   730     0741  3432               	retlw	50	;'2'
   731     0742  3475               	retlw	117	;'u'
   732     0743  342F               	retlw	47	;'/'
   733     0744  3432               	retlw	50	;'2'
   734     0745  3430               	retlw	48	;'0'
   735     0746  3425               	retlw	37	;'%'
   736     0747  3430               	retlw	48	;'0'
   737     0748  3432               	retlw	50	;'2'
   738     0749  3475               	retlw	117	;'u'
   739     074A  3400               	retlw	0
   740     074B                     STR_2:
   741     074B  3425               	retlw	37	;'%'
   742     074C  3430               	retlw	48	;'0'
   743     074D  3433               	retlw	51	;'3'
   744     074E  3475               	retlw	117	;'u'
   745     074F  3420               	retlw	32	;' '
   746     0750  3420               	retlw	32	;' '
   747     0751  3420               	retlw	32	;' '
   748     0752  3420               	retlw	32	;' '
   749     0753  3425               	retlw	37	;'%'
   750     0754  3430               	retlw	48	;'0'
   751     0755  3432               	retlw	50	;'2'
   752     0756  3475               	retlw	117	;'u'
   753     0757  343A               	retlw	58	;':'
   754     0758  3425               	retlw	37	;'%'
   755     0759  3430               	retlw	48	;'0'
   756     075A  3432               	retlw	50	;'2'
   757     075B  3475               	retlw	117	;'u'
   758     075C  343A               	retlw	58	;':'
   759     075D  3425               	retlw	37	;'%'
   760     075E  3430               	retlw	48	;'0'
   761     075F  3432               	retlw	50	;'2'
   762     0760  3475               	retlw	117	;'u'
   763     0761  3400               	retlw	0
   764     0762                     STR_6:
   765     0762  3444               	retlw	68	;'D'
   766     0763  3469               	retlw	105	;'i'
   767     0764  3461               	retlw	97	;'a'
   768     0765  3420               	retlw	32	;' '
   769     0766  3473               	retlw	115	;'s'
   770     0767  3465               	retlw	101	;'e'
   771     0768  346D               	retlw	109	;'m'
   772     0769  3461               	retlw	97	;'a'
   773     076A  346E               	retlw	110	;'n'
   774     076B  3461               	retlw	97	;'a'
   775     076C  343A               	retlw	58	;':'
   776     076D  3420               	retlw	32	;' '
   777     076E  3425               	retlw	37	;'%'
   778     076F  3475               	retlw	117	;'u'
   779     0770  3400               	retlw	0
   780     0771                     STR_10:
   781     0771  3453               	retlw	83	;'S'
   782     0772  3465               	retlw	101	;'e'
   783     0773  3467               	retlw	103	;'g'
   784     0774  3475               	retlw	117	;'u'
   785     0775  346E               	retlw	110	;'n'
   786     0776  3464               	retlw	100	;'d'
   787     0777  346F               	retlw	111	;'o'
   788     0778  343A               	retlw	58	;':'
   789     0779  3420               	retlw	32	;' '
   790     077A  3425               	retlw	37	;'%'
   791     077B  3430               	retlw	48	;'0'
   792     077C  3432               	retlw	50	;'2'
   793     077D  3475               	retlw	117	;'u'
   794     077E  3400               	retlw	0
   795     077F                     STR_9:
   796     077F  344D               	retlw	77	;'M'
   797     0780  3469               	retlw	105	;'i'
   798     0781  346E               	retlw	110	;'n'
   799     0782  3475               	retlw	117	;'u'
   800     0783  3474               	retlw	116	;'t'
   801     0784  346F               	retlw	111	;'o'
   802     0785  343A               	retlw	58	;':'
   803     0786  3420               	retlw	32	;' '
   804     0787  3425               	retlw	37	;'%'
   805     0788  3430               	retlw	48	;'0'
   806     0789  3432               	retlw	50	;'2'
   807     078A  3475               	retlw	117	;'u'
   808     078B  3400               	retlw	0
   809     078C                     STR_8:
   810     078C  3448               	retlw	72	;'H'
   811     078D  346F               	retlw	111	;'o'
   812     078E  3472               	retlw	114	;'r'
   813     078F  3461               	retlw	97	;'a'
   814     0790  343A               	retlw	58	;':'
   815     0791  3420               	retlw	32	;' '
   816     0792  3425               	retlw	37	;'%'
   817     0793  3430               	retlw	48	;'0'
   818     0794  3432               	retlw	50	;'2'
   819     0795  3475               	retlw	117	;'u'
   820     0796  3400               	retlw	0
   821     0797                     STR_3:
   822     0797  3444               	retlw	68	;'D'
   823     0798  3469               	retlw	105	;'i'
   824     0799  3461               	retlw	97	;'a'
   825     079A  343A               	retlw	58	;':'
   826     079B  3420               	retlw	32	;' '
   827     079C  3425               	retlw	37	;'%'
   828     079D  3430               	retlw	48	;'0'
   829     079E  3432               	retlw	50	;'2'
   830     079F  3475               	retlw	117	;'u'
   831     07A0  3400               	retlw	0
   832     07A1                     STR_4:
   833     07A1  344D               	retlw	77	;'M'
   834     07A2  3465               	retlw	101	;'e'
   835     07A3  3473               	retlw	115	;'s'
   836     07A4  343A               	retlw	58	;':'
   837     07A5  3420               	retlw	32	;' '
   838     07A6  3425               	retlw	37	;'%'
   839     07A7  3430               	retlw	48	;'0'
   840     07A8  3432               	retlw	50	;'2'
   841     07A9  3475               	retlw	117	;'u'
   842     07AA  3400               	retlw	0
   843     07AB                     STR_12:
   844     07AB  3428               	retlw	40	;'('
   845     07AC  346E               	retlw	110	;'n'
   846     07AD  3475               	retlw	117	;'u'
   847     07AE  346C               	retlw	108	;'l'
   848     07AF  346C               	retlw	108	;'l'
   849     07B0  3429               	retlw	41	;')'
   850     07B1  3400               	retlw	0
   851     07B2                     STR_7:
   852     07B2  3425               	retlw	37	;'%'
   853     07B3  3473               	retlw	115	;'s'
   854     07B4  3420               	retlw	32	;' '
   855     07B5  3420               	retlw	32	;' '
   856     07B6  3420               	retlw	32	;' '
   857     07B7  3420               	retlw	32	;' '
   858     07B8  3400               	retlw	0
   859     07B9                     STR_11:
   860     07B9  3425               	retlw	37	;'%'
   861     07BA  3473               	retlw	115	;'s'
   862     07BB  3400               	retlw	0
   863     079A                     
   864                           	psect	cinit
   865     000F                     start_initialization:	
   866                           ; #config settings
   867                           
   868     000F                     __initialization:
   869                           
   870                           ; Initialize objects allocated to BANK1
   871     000F  1383               	bcf	3,7	;select IRP bank0
   872     0010  30ED               	movlw	low (__pdataBANK1+77)
   873     0011  00FD               	movwf	btemp+-1
   874     0012  300E               	movlw	high __pidataBANK1
   875     0013  00FE               	movwf	btemp
   876     0014  301A               	movlw	low __pidataBANK1
   877     0015  00FF               	movwf	btemp+1
   878     0016  30A0               	movlw	low __pdataBANK1
   879     0017  0084               	movwf	4
   880     0018  120A  158A  2376  120A  118A  	fcall	init_ram0
   881                           
   882                           ; Clear objects allocated to BANK0
   883     001D  3042               	movlw	low __pbssBANK0
   884     001E  0084               	movwf	4
   885     001F  3060               	movlw	low (__pbssBANK0+30)
   886     0020  120A  158A  2316  120A  118A  	fcall	clear_ram0
   887     0025                     end_of_initialization:	
   888                           ;End of C runtime variable initialization code
   889                           
   890     0025                     __end_of__initialization:
   891     0025  0183               	clrf	3
   892     0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   893                           
   894                           	psect	bssBANK0
   895     0042                     __pbssBANK0:
   896     0042                     _ADC:
   897     0042                     	ds	2
   898     0044                     _sec:
   899     0044                     	ds	1
   900     0045                     _min:
   901     0045                     	ds	1
   902     0046                     _hr:
   903     0046                     	ds	1
   904     0047                     _dow:
   905     0047                     	ds	1
   906     0048                     _year:
   907     0048                     	ds	1
   908     0049                     _mth:
   909     0049                     	ds	1
   910     004A                     _day:
   911     004A                     	ds	1
   912     004B                     _estado:
   913     004B                     	ds	1
   914     004C                     _buffer:
   915     004C                     	ds	20
   916                           
   917                           	psect	dataBANK1
   918     00A0                     __pdataBANK1:
   919     00A0                     _dw:
   920     00A0                     	ds	77
   921                           
   922                           	psect	inittext
   923     0B72                     init_fetch0:	
   924                           ;	Called with low address in FSR and high address in W
   925                           
   926     0B72  087E               	movf	btemp,w
   927     0B73  008A               	movwf	10
   928     0B74  087F               	movf	btemp+1,w
   929     0B75  0082               	movwf	2
   930     0B76                     init_ram0:	
   931                           ;Called with:
   932                           ;	high address of idata address in btemp 
   933                           ;	low address of idata address in btemp+1 
   934                           ;	low address of data in FSR
   935                           ;	high address + 1 of data in btemp-1
   936                           
   937     0B76  120A  158A  2372  120A  158A  	fcall	init_fetch0
   938     0B7B  0080               	movwf	0
   939     0B7C  0A84               	incf	4,f
   940     0B7D  0804               	movf	4,w
   941     0B7E  067D               	xorwf	btemp+-1,w
   942     0B7F  1903               	btfsc	3,2
   943     0B80  3400               	retlw	0
   944     0B81  0AFF               	incf	btemp+1,f
   945     0B82  1903               	btfsc	3,2
   946     0B83  0AFE               	incf	btemp,f
   947     0B84  2B76               	goto	init_ram0
   948                           
   949                           	psect	clrtext
   950     0B16                     clear_ram0:	
   951                           ;	Called with FSR containing the base address, and
   952                           ;	W with the last address+1
   953                           
   954     0B16  0064               	clrwdt	;clear the watchdog before getting into this loop
   955     0B17                     clrloop0:
   956     0B17  0180               	clrf	0	;clear RAM location pointed to by FSR
   957     0B18  0A84               	incf	4,f	;increment pointer
   958     0B19  0604               	xorwf	4,w	;XOR with final address
   959     0B1A  1903               	btfsc	3,2	;have we reached the end yet?
   960     0B1B  3400               	retlw	0	;all done for this memory range, return
   961     0B1C  0604               	xorwf	4,w	;XOR again to restore value
   962     0B1D  2B17               	goto	clrloop0	;do the next byte
   963                           
   964                           	psect	cstackCOMMON
   965     0070                     __pcstackCOMMON:
   966     0070                     ?_isdigit:
   967     0070                     ?_setup:	
   968                           ; 1 bit 
   969                           
   970     0070                     ?_LcdALL_Init:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0070                     ?_I2C_Master_Start:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0070                     ?_I2C_Master_Stop:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0070                     ?_LcdALL_Write_String:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0070                     ?_LcdALL_Clear:	
   983                           ; 1 bytes @ 0x0
   984                           
   985     0070                     ?_LcdALL_Write_Char:	
   986                           ; 1 bytes @ 0x0
   987                           
   988     0070                     ?_ioc_init:	
   989                           ; 1 bytes @ 0x0
   990                           
   991     0070                     ?_DS3231_Bin_Bcd:	
   992                           ; 1 bytes @ 0x0
   993                           
   994     0070                     ?_DS3231_Bcd_Bin:	
   995                           ; 1 bytes @ 0x0
   996                           
   997     0070                     ?_DS3231_Read:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000     0070                     ?_isr:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003     0070                     ??_isr:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006     0070                     ?_main:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009     0070                     ?_I2C_Master_Wait:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012     0070                     ?_I2C_Master_RepeatedStart:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015     0070                     ?_LcdALL_Port:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018     0070                     ?_LcdALL_Cmd:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x0
  1023     0070                     	ds	3
  1024     0073                     ??_I2C_Master_Start:
  1025     0073                     ??_I2C_Master_Stop:	
  1026                           ; 1 bytes @ 0x3
  1027                           
  1028     0073                     ??_ioc_init:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031     0073                     ??_DS3231_Bin_Bcd:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034     0073                     ??_DS3231_Bcd_Bin:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037     0073                     ??_isdigit:	
  1038                           ; 1 bytes @ 0x3
  1039                           
  1040     0073                     ??_I2C_Master_Wait:	
  1041                           ; 1 bytes @ 0x3
  1042                           
  1043     0073                     ??_I2C_Master_RepeatedStart:	
  1044                           ; 1 bytes @ 0x3
  1045                           
  1046     0073                     ??_LcdALL_Port:	
  1047                           ; 1 bytes @ 0x3
  1048                           
  1049     0073                     ?___bmul:	
  1050                           ; 1 bytes @ 0x3
  1051                           
  1052     0073                     ?_I2C_Master_Read:	
  1053                           ; 1 bytes @ 0x3
  1054                           
  1055     0073                     ?___wmul:	
  1056                           ; 2 bytes @ 0x3
  1057                           
  1058     0073                     ?___lwdiv:	
  1059                           ; 2 bytes @ 0x3
  1060                           
  1061     0073                     ?___lldiv:	
  1062                           ; 2 bytes @ 0x3
  1063                           
  1064     0073                     ioc_init@pin:	
  1065                           ; 4 bytes @ 0x3
  1066                           
  1067     0073                     ___bmul@multiplicand:	
  1068                           ; 1 bytes @ 0x3
  1069                           
  1070     0073                     _isdigit$1087:	
  1071                           ; 1 bytes @ 0x3
  1072                           
  1073     0073                     I2C_Master_Read@a:	
  1074                           ; 1 bytes @ 0x3
  1075                           
  1076     0073                     ___wmul@multiplier:	
  1077                           ; 2 bytes @ 0x3
  1078                           
  1079     0073                     ___lwdiv@divisor:	
  1080                           ; 2 bytes @ 0x3
  1081                           
  1082     0073                     ___lldiv@divisor:	
  1083                           ; 2 bytes @ 0x3
  1084                           
  1085                           
  1086                           ; 4 bytes @ 0x3
  1087     0073                     	ds	1
  1088     0074                     ??___bmul:
  1089     0074                     DS3231_Bin_Bcd@binary_value:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092     0074                     isdigit@c:	
  1093                           ; 1 bytes @ 0x4
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0x4
  1097     0074                     	ds	1
  1098     0075                     ??_I2C_Master_Read:
  1099     0075                     LcdALL_Port@a:	
  1100                           ; 1 bytes @ 0x5
  1101                           
  1102     0075                     DS3231_Bin_Bcd@retval:	
  1103                           ; 1 bytes @ 0x5
  1104                           
  1105     0075                     DS3231_Bcd_Bin@bcd_value:	
  1106                           ; 1 bytes @ 0x5
  1107                           
  1108     0075                     ___bmul@product:	
  1109                           ; 1 bytes @ 0x5
  1110                           
  1111     0075                     ___wmul@multiplicand:	
  1112                           ; 1 bytes @ 0x5
  1113                           
  1114     0075                     ___lwdiv@dividend:	
  1115                           ; 2 bytes @ 0x5
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x5
  1119     0075                     	ds	1
  1120     0076                     ??_LcdALL_Write_Char:
  1121     0076                     ??_LcdALL_Cmd:	
  1122                           ; 1 bytes @ 0x6
  1123                           
  1124     0076                     DS3231_Bin_Bcd@temp:	
  1125                           ; 1 bytes @ 0x6
  1126                           
  1127     0076                     DS3231_Bcd_Bin@temp:	
  1128                           ; 1 bytes @ 0x6
  1129                           
  1130     0076                     ___bmul@multiplier:	
  1131                           ; 1 bytes @ 0x6
  1132                           
  1133                           
  1134                           ; 1 bytes @ 0x6
  1135     0076                     	ds	1
  1136     0077                     ?_I2C_Master_Write:
  1137     0077                     ??___wmul:	
  1138                           ; 1 bytes @ 0x7
  1139                           
  1140     0077                     ??___lwdiv:	
  1141                           ; 1 bytes @ 0x7
  1142                           
  1143     0077                     LcdALL_Write_Char@a:	
  1144                           ; 1 bytes @ 0x7
  1145                           
  1146     0077                     I2C_Master_Write@d:	
  1147                           ; 1 bytes @ 0x7
  1148                           
  1149     0077                     I2C_Master_Read@temp:	
  1150                           ; 2 bytes @ 0x7
  1151                           
  1152     0077                     ___wmul@product:	
  1153                           ; 2 bytes @ 0x7
  1154                           
  1155     0077                     ___lldiv@dividend:	
  1156                           ; 2 bytes @ 0x7
  1157                           
  1158                           
  1159                           ; 4 bytes @ 0x7
  1160     0077                     	ds	1
  1161     0078                     ??_LcdALL_Write_String:
  1162     0078                     LcdALL_Cmd@a:	
  1163                           ; 1 bytes @ 0x8
  1164                           
  1165     0078                     ___lwdiv@quotient:	
  1166                           ; 1 bytes @ 0x8
  1167                           
  1168                           
  1169                           ; 2 bytes @ 0x8
  1170     0078                     	ds	1
  1171     0079                     ??_LcdALL_Init:
  1172     0079                     ??_I2C_Master_Write:	
  1173                           ; 1 bytes @ 0x9
  1174                           
  1175     0079                     ?_LcdALL_Set_Cursor:	
  1176                           ; 1 bytes @ 0x9
  1177                           
  1178     0079                     ??_LcdALL_Clear:	
  1179                           ; 1 bytes @ 0x9
  1180                           
  1181     0079                     ??_DS3231_Set_Date_Time:	
  1182                           ; 1 bytes @ 0x9
  1183                           
  1184     0079                     ??_DS3231_Read:	
  1185                           ; 1 bytes @ 0x9
  1186                           
  1187     0079                     LcdALL_Set_Cursor@b:	
  1188                           ; 1 bytes @ 0x9
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x9
  1192     0079                     	ds	1
  1193     007A                     ??_LcdALL_Set_Cursor:
  1194     007A                     ___lwdiv@counter:	
  1195                           ; 1 bytes @ 0xA
  1196                           
  1197                           
  1198                           ; 1 bytes @ 0xA
  1199     007A                     	ds	1
  1200     007B                     ??_setup:
  1201     007B                     ??_DS3231_Get_Date:	
  1202                           ; 1 bytes @ 0xB
  1203                           
  1204     007B                     ??_DS3231_Get_Time:	
  1205                           ; 1 bytes @ 0xB
  1206                           
  1207                           
  1208                           	psect	cstackBANK0
  1209     0020                     __pcstackBANK0:	
  1210                           ; 1 bytes @ 0xB
  1211                           
  1212     0020                     ?_DS3231_Set_Date_Time:
  1213     0020                     ??___lldiv:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216     0020                     ?___lwmod:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0020                     LcdALL_Set_Cursor@a:	
  1220                           ; 2 bytes @ 0x0
  1221                           
  1222     0020                     DS3231_Set_Date_Time@mth:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0020                     DS3231_Read@reg:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228     0020                     LcdALL_Write_String@i:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231     0020                     ___lwmod@divisor:	
  1232                           ; 2 bytes @ 0x0
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0x0
  1236     0020                     	ds	1
  1237     0021                     LcdALL_Set_Cursor@temp:
  1238     0021                     DS3231_Set_Date_Time@yr:	
  1239                           ; 1 bytes @ 0x1
  1240                           
  1241     0021                     DS3231_Read@data:	
  1242                           ; 1 bytes @ 0x1
  1243                           
  1244     0021                     ___lldiv@quotient:	
  1245                           ; 1 bytes @ 0x1
  1246                           
  1247                           
  1248                           ; 4 bytes @ 0x1
  1249     0021                     	ds	1
  1250     0022                     ?_DS3231_Get_Date:
  1251     0022                     ?_DS3231_Get_Time:	
  1252                           ; 1 bytes @ 0x2
  1253                           
  1254     0022                     LcdALL_Write_String@a:	
  1255                           ; 1 bytes @ 0x2
  1256                           
  1257     0022                     DS3231_Set_Date_Time@dw:	
  1258                           ; 1 bytes @ 0x2
  1259                           
  1260     0022                     DS3231_Get_Date@day:	
  1261                           ; 1 bytes @ 0x2
  1262                           
  1263     0022                     DS3231_Get_Time@hr:	
  1264                           ; 2 bytes @ 0x2
  1265                           
  1266     0022                     ___lwmod@dividend:	
  1267                           ; 2 bytes @ 0x2
  1268                           
  1269                           
  1270                           ; 2 bytes @ 0x2
  1271     0022                     	ds	1
  1272     0023                     DS3231_Set_Date_Time@hr:
  1273                           
  1274                           ; 1 bytes @ 0x3
  1275     0023                     	ds	1
  1276     0024                     ??___lwmod:
  1277     0024                     DS3231_Set_Date_Time@mn:	
  1278                           ; 1 bytes @ 0x4
  1279                           
  1280     0024                     DS3231_Get_Date@mth:	
  1281                           ; 1 bytes @ 0x4
  1282                           
  1283     0024                     DS3231_Get_Time@min:	
  1284                           ; 2 bytes @ 0x4
  1285                           
  1286                           
  1287                           ; 2 bytes @ 0x4
  1288     0024                     	ds	1
  1289     0025                     DS3231_Set_Date_Time@sc:
  1290     0025                     ___lldiv@counter:	
  1291                           ; 1 bytes @ 0x5
  1292                           
  1293     0025                     ___lwmod@counter:	
  1294                           ; 1 bytes @ 0x5
  1295                           
  1296                           
  1297                           ; 1 bytes @ 0x5
  1298     0025                     	ds	1
  1299     0026                     ?_I2C_Master_Init:
  1300     0026                     ?_sprintf:	
  1301                           ; 1 bytes @ 0x6
  1302                           
  1303     0026                     DS3231_Set_Date_Time@dy:	
  1304                           ; 2 bytes @ 0x6
  1305                           
  1306     0026                     sprintf@f:	
  1307                           ; 1 bytes @ 0x6
  1308                           
  1309     0026                     DS3231_Get_Date@year:	
  1310                           ; 1 bytes @ 0x6
  1311                           
  1312     0026                     DS3231_Get_Time@sec:	
  1313                           ; 2 bytes @ 0x6
  1314                           
  1315     0026                     I2C_Master_Init@c:	
  1316                           ; 2 bytes @ 0x6
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0x6
  1320     0026                     	ds	2
  1321     0028                     DS3231_Get_Date@dow:
  1322                           
  1323                           ; 2 bytes @ 0x8
  1324     0028                     	ds	2
  1325     002A                     ??_I2C_Master_Init:
  1326                           
  1327                           ; 1 bytes @ 0xA
  1328     002A                     	ds	5
  1329     002F                     ??_sprintf:
  1330                           
  1331                           ; 1 bytes @ 0xF
  1332     002F                     	ds	3
  1333     0032                     sprintf@flag:
  1334                           
  1335                           ; 1 bytes @ 0x12
  1336     0032                     	ds	1
  1337     0033                     sprintf@val:
  1338                           
  1339                           ; 2 bytes @ 0x13
  1340     0033                     	ds	2
  1341     0035                     sprintf@prec:
  1342                           
  1343                           ; 1 bytes @ 0x15
  1344     0035                     	ds	1
  1345     0036                     sprintf@ap:
  1346                           
  1347                           ; 1 bytes @ 0x16
  1348     0036                     	ds	1
  1349     0037                     sprintf@cp:
  1350                           
  1351                           ; 2 bytes @ 0x17
  1352     0037                     	ds	2
  1353     0039                     sprintf@len:
  1354                           
  1355                           ; 2 bytes @ 0x19
  1356     0039                     	ds	2
  1357     003B                     sprintf@width:
  1358                           
  1359                           ; 2 bytes @ 0x1B
  1360     003B                     	ds	2
  1361     003D                     sprintf@c:
  1362                           
  1363                           ; 1 bytes @ 0x1D
  1364     003D                     	ds	1
  1365     003E                     sprintf@sp:
  1366                           
  1367                           ; 1 bytes @ 0x1E
  1368     003E                     	ds	1
  1369     003F                     ??_main:
  1370                           
  1371                           ; 1 bytes @ 0x1F
  1372     003F                     	ds	3
  1373                           
  1374                           	psect	maintext
  1375     0029                     __pmaintext:	
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 75 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : B00/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          0       3       0       0       0
  1398 ;;      Totals:         0       3       0       0       0
  1399 ;;Total ram usage:        3 bytes
  1400 ;; Hardware stack levels required when called: 5
  1401 ;; This function calls:
  1402 ;;		_DS3231_Get_Date
  1403 ;;		_DS3231_Get_Time
  1404 ;;		_DS3231_Set_Date_Time
  1405 ;;		_I2C_Master_Read
  1406 ;;		_I2C_Master_Start
  1407 ;;		_I2C_Master_Stop
  1408 ;;		_I2C_Master_Write
  1409 ;;		_LcdALL_Clear
  1410 ;;		_LcdALL_Init
  1411 ;;		_LcdALL_Set_Cursor
  1412 ;;		_LcdALL_Write_Char
  1413 ;;		_LcdALL_Write_String
  1414 ;;		___bmul
  1415 ;;		_setup
  1416 ;;		_sprintf
  1417 ;; This function is called by:
  1418 ;;		Startup code after reset
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422     0029                     _main:	
  1423                           ;psect for function _main
  1424                           
  1425     0029                     l2355:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1428                           
  1429                           
  1430                           ;main.c: 76:     setup();
  1431     0029  120A  158A  24E5  120A  118A  	fcall	_setup
  1432                           
  1433                           ;main.c: 77:     LcdALL_Init();
  1434     002E  120A  158A  25D8  120A  118A  	fcall	_LcdALL_Init
  1435     0033                     l99:	
  1436                           ;main.c: 78:     while(1){
  1437                           
  1438                           
  1439                           ;main.c: 79:         I2C_Master_Start();
  1440     0033  120A  158A  2327  120A  118A  	fcall	_I2C_Master_Start
  1441                           
  1442                           ;main.c: 80:         I2C_Master_Write(0x50);
  1443     0038  3050               	movlw	80
  1444     0039  00F7               	movwf	I2C_Master_Write@d
  1445     003A  3000               	movlw	0
  1446     003B  00F8               	movwf	I2C_Master_Write@d+1
  1447     003C  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  1448                           
  1449                           ;main.c: 81:         I2C_Master_Write(PORTD);
  1450     0041  1283               	bcf	3,5	;RP0=0, select bank0
  1451     0042  1303               	bcf	3,6	;RP1=0, select bank0
  1452     0043  0808               	movf	8,w	;volatile
  1453     0044  00BF               	movwf	??_main
  1454     0045  01C0               	clrf	??_main+1
  1455     0046  083F               	movf	??_main,w
  1456     0047  00F7               	movwf	I2C_Master_Write@d
  1457     0048  0840               	movf	??_main+1,w
  1458     0049  00F8               	movwf	I2C_Master_Write@d+1
  1459     004A  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  1460                           
  1461                           ;main.c: 82:         I2C_Master_Stop();
  1462     004F  120A  158A  2330  120A  118A  	fcall	_I2C_Master_Stop
  1463     0054                     l2357:
  1464                           
  1465                           ;main.c: 83:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1466     0054  3003               	movlw	3
  1467     0055  1283               	bcf	3,5	;RP0=0, select bank0
  1468     0056  1303               	bcf	3,6	;RP1=0, select bank0
  1469     0057  00C1               	movwf	??_main+2
  1470     0058  3008               	movlw	8
  1471     0059  00C0               	movwf	??_main+1
  1472     005A  3076               	movlw	118
  1473     005B  00BF               	movwf	??_main
  1474     005C                     u2317:
  1475     005C  0BBF               	decfsz	??_main,f
  1476     005D  285C               	goto	u2317
  1477     005E  0BC0               	decfsz	??_main+1,f
  1478     005F  285C               	goto	u2317
  1479     0060  0BC1               	decfsz	??_main+2,f
  1480     0061  285C               	goto	u2317
  1481     0062  0000               	nop
  1482     0063                     l2359:
  1483                           
  1484                           ;main.c: 85:         I2C_Master_Start();
  1485     0063  120A  158A  2327  120A  118A  	fcall	_I2C_Master_Start
  1486     0068                     l2361:
  1487                           
  1488                           ;main.c: 86:         I2C_Master_Write(0x51);
  1489     0068  3051               	movlw	81
  1490     0069  00F7               	movwf	I2C_Master_Write@d
  1491     006A  3000               	movlw	0
  1492     006B  00F8               	movwf	I2C_Master_Write@d+1
  1493     006C  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  1494     0071                     l2363:
  1495                           
  1496                           ;main.c: 87:         ADC = I2C_Master_Read(0);
  1497     0071  3000               	movlw	0
  1498     0072  00F3               	movwf	I2C_Master_Read@a
  1499     0073  00F4               	movwf	I2C_Master_Read@a+1
  1500     0074  120A  158A  247F  120A  118A  	fcall	_I2C_Master_Read
  1501     0079  0874               	movf	?_I2C_Master_Read+1,w
  1502     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1503     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1504     007C  00C3               	movwf	_ADC+1
  1505     007D  0873               	movf	?_I2C_Master_Read,w
  1506     007E  00C2               	movwf	_ADC
  1507     007F                     l2365:
  1508                           
  1509                           ;main.c: 88:         I2C_Master_Stop();
  1510     007F  120A  158A  2330  120A  118A  	fcall	_I2C_Master_Stop
  1511     0084                     l2367:
  1512                           
  1513                           ;main.c: 89:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1514     0084  3003               	movlw	3
  1515     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1517     0087  00C1               	movwf	??_main+2
  1518     0088  3008               	movlw	8
  1519     0089  00C0               	movwf	??_main+1
  1520     008A  3076               	movlw	118
  1521     008B  00BF               	movwf	??_main
  1522     008C                     u2327:
  1523     008C  0BBF               	decfsz	??_main,f
  1524     008D  288C               	goto	u2327
  1525     008E  0BC0               	decfsz	??_main+1,f
  1526     008F  288C               	goto	u2327
  1527     0090  0BC1               	decfsz	??_main+2,f
  1528     0091  288C               	goto	u2327
  1529     0092  0000               	nop
  1530     0093                     l2369:
  1531                           
  1532                           ;main.c: 91:         PORTD++;
  1533     0093  3001               	movlw	1
  1534     0094  1283               	bcf	3,5	;RP0=0, select bank0
  1535     0095  1303               	bcf	3,6	;RP1=0, select bank0
  1536     0096  00BF               	movwf	??_main
  1537     0097  083F               	movf	??_main,w
  1538     0098  0788               	addwf	8,f	;volatile
  1539                           
  1540                           ;main.c: 92:         switch(estado)
  1541     0099  2C32               	goto	l2605
  1542     009A                     l2371:
  1543                           
  1544                           ;main.c: 95:                 DS3231_Get_Date((uint8_t)&day, (uint8_t)&mth, (uint8_t)&yea
      +                          r, (uint8_t)&dow);
  1545     009A  304A               	movlw	low _day
  1546     009B  00A2               	movwf	DS3231_Get_Date@day
  1547     009C  3000               	movlw	high _day
  1548     009D  00A3               	movwf	DS3231_Get_Date@day+1
  1549     009E  3049               	movlw	low _mth
  1550     009F  00A4               	movwf	DS3231_Get_Date@mth
  1551     00A0  3000               	movlw	high _mth
  1552     00A1  00A5               	movwf	DS3231_Get_Date@mth+1
  1553     00A2  3048               	movlw	low _year
  1554     00A3  00A6               	movwf	DS3231_Get_Date@year
  1555     00A4  3000               	movlw	high _year
  1556     00A5  00A7               	movwf	DS3231_Get_Date@year+1
  1557     00A6  3047               	movlw	low _dow
  1558     00A7  00A8               	movwf	DS3231_Get_Date@dow
  1559     00A8  3000               	movlw	high _dow
  1560     00A9  00A9               	movwf	DS3231_Get_Date@dow+1
  1561     00AA  120A  158A  2667  120A  118A  	fcall	_DS3231_Get_Date
  1562                           
  1563                           ;main.c: 96:                 DS3231_Get_Time((uint8_t)&hr, (uint8_t)&min, (uint8_t)&sec)
      +                          ;
  1564     00AF  3046               	movlw	low _hr
  1565     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1566     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1567     00B2  00A2               	movwf	DS3231_Get_Time@hr
  1568     00B3  3000               	movlw	high _hr
  1569     00B4  00A3               	movwf	DS3231_Get_Time@hr+1
  1570     00B5  3045               	movlw	low _min
  1571     00B6  00A4               	movwf	DS3231_Get_Time@min
  1572     00B7  3000               	movlw	high _min
  1573     00B8  00A5               	movwf	DS3231_Get_Time@min+1
  1574     00B9  3044               	movlw	low _sec
  1575     00BA  00A6               	movwf	DS3231_Get_Time@sec
  1576     00BB  3000               	movlw	high _sec
  1577     00BC  00A7               	movwf	DS3231_Get_Time@sec+1
  1578     00BD  120A  158A  2559  120A  118A  	fcall	_DS3231_Get_Time
  1579     00C2                     l2373:
  1580                           
  1581                           ;main.c: 98:                 sprintf(buffer, "S1:   %02u/%02u/20%02u", day, mth, year);
  1582     00C2  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1583     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1584     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1585     00C5  00A6               	movwf	sprintf@f
  1586     00C6  084A               	movf	_day,w
  1587     00C7  00A7               	movwf	?_sprintf+1
  1588     00C8  01A8               	clrf	?_sprintf+2
  1589     00C9  1BA7               	btfsc	?_sprintf+1,7
  1590     00CA  03A8               	decf	?_sprintf+2,f
  1591     00CB  0849               	movf	_mth,w
  1592     00CC  00A9               	movwf	?_sprintf+3
  1593     00CD  01AA               	clrf	?_sprintf+4
  1594     00CE  1BA9               	btfsc	?_sprintf+3,7
  1595     00CF  03AA               	decf	?_sprintf+4,f
  1596     00D0  0848               	movf	_year,w
  1597     00D1  00AB               	movwf	?_sprintf+5
  1598     00D2  01AC               	clrf	?_sprintf+6
  1599     00D3  1BAB               	btfsc	?_sprintf+5,7
  1600     00D4  03AC               	decf	?_sprintf+6,f
  1601     00D5  304C               	movlw	(low (_buffer| 0))& (0+255)
  1602     00D6  120A  118A  245A  120A  118A  	fcall	_sprintf
  1603     00DB                     l2375:
  1604                           
  1605                           ;main.c: 99:                 LcdALL_Set_Cursor(1,1);
  1606     00DB  01F9               	clrf	LcdALL_Set_Cursor@b
  1607     00DC  0AF9               	incf	LcdALL_Set_Cursor@b,f
  1608     00DD  3001               	movlw	1
  1609     00DE  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  1610     00E3                     l2377:
  1611                           
  1612                           ;main.c: 100:                 LcdALL_Write_String(buffer);
  1613     00E3  304C               	movlw	(low (_buffer| 0))& (0+255)
  1614     00E4  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  1615     00E9                     l2379:
  1616                           
  1617                           ;main.c: 101:                 sprintf(buffer, "%03u    %02u:%02u:%02u",ADC, hr, min, sec
      +                          );
  1618     00E9  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1619     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1620     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1621     00EC  00A6               	movwf	sprintf@f
  1622     00ED  0843               	movf	_ADC+1,w
  1623     00EE  00A8               	movwf	?_sprintf+2
  1624     00EF  0842               	movf	_ADC,w
  1625     00F0  00A7               	movwf	?_sprintf+1
  1626     00F1  0846               	movf	_hr,w
  1627     00F2  00A9               	movwf	?_sprintf+3
  1628     00F3  01AA               	clrf	?_sprintf+4
  1629     00F4  1BA9               	btfsc	?_sprintf+3,7
  1630     00F5  03AA               	decf	?_sprintf+4,f
  1631     00F6  0845               	movf	_min,w
  1632     00F7  00AB               	movwf	?_sprintf+5
  1633     00F8  01AC               	clrf	?_sprintf+6
  1634     00F9  1BAB               	btfsc	?_sprintf+5,7
  1635     00FA  03AC               	decf	?_sprintf+6,f
  1636     00FB  0844               	movf	_sec,w
  1637     00FC  00AD               	movwf	?_sprintf+7
  1638     00FD  01AE               	clrf	?_sprintf+8
  1639     00FE  1BAD               	btfsc	?_sprintf+7,7
  1640     00FF  03AE               	decf	?_sprintf+8,f
  1641     0100  304C               	movlw	(low (_buffer| 0))& (0+255)
  1642     0101  120A  118A  245A  120A  118A  	fcall	_sprintf
  1643                           
  1644                           ;main.c: 102:                 LcdALL_Set_Cursor(2,1);
  1645     0106  01F9               	clrf	LcdALL_Set_Cursor@b
  1646     0107  0AF9               	incf	LcdALL_Set_Cursor@b,f
  1647     0108  3002               	movlw	2
  1648     0109  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  1649     010E                     l2381:
  1650                           
  1651                           ;main.c: 103:                 LcdALL_Write_String(buffer);
  1652     010E  304C               	movlw	(low (_buffer| 0))& (0+255)
  1653     010F  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  1654     0114                     l2383:
  1655                           
  1656                           ;main.c: 104:                 _delay((unsigned long)((200)*(8000000/4000.0)));
  1657     0114  3003               	movlw	3
  1658     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1659     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1660     0117  00C1               	movwf	??_main+2
  1661     0118  3008               	movlw	8
  1662     0119  00C0               	movwf	??_main+1
  1663     011A  3076               	movlw	118
  1664     011B  00BF               	movwf	??_main
  1665     011C                     u2337:
  1666     011C  0BBF               	decfsz	??_main,f
  1667     011D  291C               	goto	u2337
  1668     011E  0BC0               	decfsz	??_main+1,f
  1669     011F  291C               	goto	u2337
  1670     0120  0BC1               	decfsz	??_main+2,f
  1671     0121  291C               	goto	u2337
  1672     0122  0000               	nop
  1673                           
  1674                           ;main.c: 105:                 break;
  1675     0123  2833               	goto	l99
  1676     0124                     l2385:
  1677                           
  1678                           ;main.c: 108:                 LcdALL_Clear();
  1679     0124  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  1680                           
  1681                           ;main.c: 109:                 LcdALL_Set_Cursor(1,1);
  1682     0129  01F9               	clrf	LcdALL_Set_Cursor@b
  1683     012A  0AF9               	incf	LcdALL_Set_Cursor@b,f
  1684     012B  3001               	movlw	1
  1685     012C  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  1686     0131                     l2387:
  1687                           
  1688                           ;main.c: 110:                 sprintf(buffer, "Dia: %02u", day);
  1689     0131  3076               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1690     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1691     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1692     0134  00A6               	movwf	sprintf@f
  1693     0135  084A               	movf	_day,w
  1694     0136  00A7               	movwf	?_sprintf+1
  1695     0137  01A8               	clrf	?_sprintf+2
  1696     0138  1BA7               	btfsc	?_sprintf+1,7
  1697     0139  03A8               	decf	?_sprintf+2,f
  1698     013A  304C               	movlw	(low (_buffer| 0))& (0+255)
  1699     013B  120A  118A  245A  120A  118A  	fcall	_sprintf
  1700     0140                     l2389:
  1701                           
  1702                           ;main.c: 111:                 LcdALL_Write_String(buffer);
  1703     0140  304C               	movlw	(low (_buffer| 0))& (0+255)
  1704     0141  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  1705     0146                     l2391:
  1706                           
  1707                           ;main.c: 112:                 if(PORTBbits.RB1 == 0)
  1708     0146  1283               	bcf	3,5	;RP0=0, select bank0
  1709     0147  1303               	bcf	3,6	;RP1=0, select bank0
  1710     0148  1886               	btfsc	6,1	;volatile
  1711     0149  294B               	goto	u1891
  1712     014A  294C               	goto	u1890
  1713     014B                     u1891:
  1714     014B  2969               	goto	l2403
  1715     014C                     u1890:
  1716     014C                     l105:
  1717     014C  1C86               	btfss	6,1	;volatile
  1718     014D  294F               	goto	u1901
  1719     014E  2950               	goto	u1900
  1720     014F                     u1901:
  1721     014F  294C               	goto	l105
  1722     0150                     u1900:
  1723     0150                     l2395:
  1724                           
  1725                           ;main.c: 115:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1726     0150  3034               	movlw	52
  1727     0151  1283               	bcf	3,5	;RP0=0, select bank0
  1728     0152  1303               	bcf	3,6	;RP1=0, select bank0
  1729     0153  00C0               	movwf	??_main+1
  1730     0154  30F1               	movlw	241
  1731     0155  00BF               	movwf	??_main
  1732     0156                     u2347:
  1733     0156  0BBF               	decfsz	??_main,f
  1734     0157  2956               	goto	u2347
  1735     0158  0BC0               	decfsz	??_main+1,f
  1736     0159  2956               	goto	u2347
  1737     015A                     l2397:
  1738                           
  1739                           ;main.c: 116:                     day++;
  1740     015A  3001               	movlw	1
  1741     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1742     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1743     015D  00BF               	movwf	??_main
  1744     015E  083F               	movf	??_main,w
  1745     015F  07CA               	addwf	_day,f
  1746     0160                     l2399:
  1747                           
  1748                           ;main.c: 117:                     if(day > 31){
  1749     0160  084A               	movf	_day,w
  1750     0161  3A80               	xorlw	128
  1751     0162  3E60               	addlw	-160
  1752     0163  1C03               	skipc
  1753     0164  2966               	goto	u1911
  1754     0165  2967               	goto	u1910
  1755     0166                     u1911:
  1756     0166  2969               	goto	l2403
  1757     0167                     u1910:
  1758     0167                     l2401:
  1759                           
  1760                           ;main.c: 118:                         day = 31;
  1761     0167  301F               	movlw	31
  1762     0168  00CA               	movwf	_day
  1763     0169                     l2403:
  1764                           
  1765                           ;main.c: 121:                 if(PORTBbits.RB2 == 0)
  1766     0169  1906               	btfsc	6,2	;volatile
  1767     016A  296C               	goto	u1921
  1768     016B  296D               	goto	u1920
  1769     016C                     u1921:
  1770     016C  2833               	goto	l99
  1771     016D                     u1920:
  1772     016D                     l110:
  1773     016D  1D06               	btfss	6,2	;volatile
  1774     016E  2970               	goto	u1931
  1775     016F  2971               	goto	u1930
  1776     0170                     u1931:
  1777     0170  296D               	goto	l110
  1778     0171                     u1930:
  1779     0171                     l2407:
  1780                           
  1781                           ;main.c: 124:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1782     0171  3034               	movlw	52
  1783     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1784     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1785     0174  00C0               	movwf	??_main+1
  1786     0175  30F1               	movlw	241
  1787     0176  00BF               	movwf	??_main
  1788     0177                     u2357:
  1789     0177  0BBF               	decfsz	??_main,f
  1790     0178  2977               	goto	u2357
  1791     0179  0BC0               	decfsz	??_main+1,f
  1792     017A  2977               	goto	u2357
  1793     017B                     l2409:
  1794                           
  1795                           ;main.c: 125:                     day--;
  1796     017B  30FF               	movlw	255
  1797     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1798     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1799     017E  00BF               	movwf	??_main
  1800     017F  083F               	movf	??_main,w
  1801     0180  07CA               	addwf	_day,f
  1802     0181                     l2411:
  1803                           
  1804                           ;main.c: 126:                     if(day < 1){
  1805     0181  084A               	movf	_day,w
  1806     0182  3A80               	xorlw	128
  1807     0183  3E7F               	addlw	-129
  1808     0184  1803               	skipnc
  1809     0185  2987               	goto	u1941
  1810     0186  2988               	goto	u1940
  1811     0187                     u1941:
  1812     0187  2C56               	goto	l102
  1813     0188                     u1940:
  1814     0188                     l2413:
  1815                           
  1816                           ;main.c: 127:                         day = 1;
  1817     0188  01CA               	clrf	_day
  1818     0189  0ACA               	incf	_day,f
  1819     018A  2833               	goto	l99
  1820     018B                     l2415:
  1821                           
  1822                           ;main.c: 133:                 LcdALL_Clear();
  1823     018B  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  1824                           
  1825                           ;main.c: 134:                 LcdALL_Set_Cursor(1,1);
  1826     0190  01F9               	clrf	LcdALL_Set_Cursor@b
  1827     0191  0AF9               	incf	LcdALL_Set_Cursor@b,f
  1828     0192  3001               	movlw	1
  1829     0193  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  1830     0198                     l2417:
  1831                           
  1832                           ;main.c: 135:                 sprintf(buffer, "Mes: %02u", mth);
  1833     0198  3080               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1834     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1835     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1836     019B  00A6               	movwf	sprintf@f
  1837     019C  0849               	movf	_mth,w
  1838     019D  00A7               	movwf	?_sprintf+1
  1839     019E  01A8               	clrf	?_sprintf+2
  1840     019F  1BA7               	btfsc	?_sprintf+1,7
  1841     01A0  03A8               	decf	?_sprintf+2,f
  1842     01A1  304C               	movlw	(low (_buffer| 0))& (0+255)
  1843     01A2  120A  118A  245A  120A  118A  	fcall	_sprintf
  1844     01A7                     l2419:
  1845                           
  1846                           ;main.c: 136:                 LcdALL_Write_String(buffer);
  1847     01A7  304C               	movlw	(low (_buffer| 0))& (0+255)
  1848     01A8  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  1849     01AD                     l2421:
  1850                           
  1851                           ;main.c: 137:                 if(PORTBbits.RB1 == 0)
  1852     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1853     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1854     01AF  1886               	btfsc	6,1	;volatile
  1855     01B0  29B2               	goto	u1951
  1856     01B1  29B3               	goto	u1950
  1857     01B2                     u1951:
  1858     01B2  29D0               	goto	l2433
  1859     01B3                     u1950:
  1860     01B3                     l116:
  1861     01B3  1C86               	btfss	6,1	;volatile
  1862     01B4  29B6               	goto	u1961
  1863     01B5  29B7               	goto	u1960
  1864     01B6                     u1961:
  1865     01B6  29B3               	goto	l116
  1866     01B7                     u1960:
  1867     01B7                     l2425:
  1868                           
  1869                           ;main.c: 140:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1870     01B7  3034               	movlw	52
  1871     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1872     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1873     01BA  00C0               	movwf	??_main+1
  1874     01BB  30F1               	movlw	241
  1875     01BC  00BF               	movwf	??_main
  1876     01BD                     u2367:
  1877     01BD  0BBF               	decfsz	??_main,f
  1878     01BE  29BD               	goto	u2367
  1879     01BF  0BC0               	decfsz	??_main+1,f
  1880     01C0  29BD               	goto	u2367
  1881     01C1                     l2427:
  1882                           
  1883                           ;main.c: 141:                     mth++;
  1884     01C1  3001               	movlw	1
  1885     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1886     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1887     01C4  00BF               	movwf	??_main
  1888     01C5  083F               	movf	??_main,w
  1889     01C6  07C9               	addwf	_mth,f
  1890     01C7                     l2429:
  1891                           
  1892                           ;main.c: 142:                     if(mth > 12){
  1893     01C7  0849               	movf	_mth,w
  1894     01C8  3A80               	xorlw	128
  1895     01C9  3E73               	addlw	-141
  1896     01CA  1C03               	skipc
  1897     01CB  29CD               	goto	u1971
  1898     01CC  29CE               	goto	u1970
  1899     01CD                     u1971:
  1900     01CD  29D0               	goto	l2433
  1901     01CE                     u1970:
  1902     01CE                     l2431:
  1903                           
  1904                           ;main.c: 143:                         mth = 12;
  1905     01CE  300C               	movlw	12
  1906     01CF  00C9               	movwf	_mth
  1907     01D0                     l2433:
  1908                           
  1909                           ;main.c: 146:                 if(PORTBbits.RB2 == 0)
  1910     01D0  1906               	btfsc	6,2	;volatile
  1911     01D1  29D3               	goto	u1981
  1912     01D2  29D4               	goto	u1980
  1913     01D3                     u1981:
  1914     01D3  2833               	goto	l99
  1915     01D4                     u1980:
  1916     01D4                     l121:
  1917     01D4  1D06               	btfss	6,2	;volatile
  1918     01D5  29D7               	goto	u1991
  1919     01D6  29D8               	goto	u1990
  1920     01D7                     u1991:
  1921     01D7  29D4               	goto	l121
  1922     01D8                     u1990:
  1923     01D8                     l2437:
  1924                           
  1925                           ;main.c: 149:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  1926     01D8  3034               	movlw	52
  1927     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1928     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1929     01DB  00C0               	movwf	??_main+1
  1930     01DC  30F1               	movlw	241
  1931     01DD  00BF               	movwf	??_main
  1932     01DE                     u2377:
  1933     01DE  0BBF               	decfsz	??_main,f
  1934     01DF  29DE               	goto	u2377
  1935     01E0  0BC0               	decfsz	??_main+1,f
  1936     01E1  29DE               	goto	u2377
  1937     01E2                     l2439:
  1938                           
  1939                           ;main.c: 150:                     mth--;
  1940     01E2  30FF               	movlw	255
  1941     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1942     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1943     01E5  00BF               	movwf	??_main
  1944     01E6  083F               	movf	??_main,w
  1945     01E7  07C9               	addwf	_mth,f
  1946     01E8                     l2441:
  1947                           
  1948                           ;main.c: 151:                     if(mth < 1){
  1949     01E8  0849               	movf	_mth,w
  1950     01E9  3A80               	xorlw	128
  1951     01EA  3E7F               	addlw	-129
  1952     01EB  1803               	skipnc
  1953     01EC  29EE               	goto	u2001
  1954     01ED  29EF               	goto	u2000
  1955     01EE                     u2001:
  1956     01EE  2C56               	goto	l102
  1957     01EF                     u2000:
  1958     01EF                     l2443:
  1959                           
  1960                           ;main.c: 152:                         mth = 1;
  1961     01EF  01C9               	clrf	_mth
  1962     01F0  0AC9               	incf	_mth,f
  1963     01F1  2833               	goto	l99
  1964     01F2                     l2445:
  1965                           
  1966                           ;main.c: 158:                 LcdALL_Clear();
  1967     01F2  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  1968                           
  1969                           ;main.c: 159:                 LcdALL_Set_Cursor(1,1);
  1970     01F7  01F9               	clrf	LcdALL_Set_Cursor@b
  1971     01F8  0AF9               	incf	LcdALL_Set_Cursor@b,f
  1972     01F9  3001               	movlw	1
  1973     01FA  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  1974                           
  1975                           ;main.c: 160:                 LcdALL_Write_Char('A');
  1976     01FF  3041               	movlw	65
  1977     0200  120A  158A  239A  120A  118A  	fcall	_LcdALL_Write_Char
  1978                           
  1979                           ;main.c: 161:                 LcdALL_Write_Char(0);
  1980     0205  3000               	movlw	0
  1981     0206  120A  158A  239A  120A  118A  	fcall	_LcdALL_Write_Char
  1982                           
  1983                           ;main.c: 162:                 LcdALL_Write_Char('o');
  1984     020B  306F               	movlw	111
  1985     020C  120A  158A  239A  120A  118A  	fcall	_LcdALL_Write_Char
  1986     0211                     l2447:
  1987                           
  1988                           ;main.c: 163:                 sprintf(buffer, ": %02u", year);
  1989     0211  3079               	movlw	(low (((STR_3+3)-__stringbase)| (0+32768)))& (0+255)
  1990     0212  1283               	bcf	3,5	;RP0=0, select bank0
  1991     0213  1303               	bcf	3,6	;RP1=0, select bank0
  1992     0214  00A6               	movwf	sprintf@f
  1993     0215  0848               	movf	_year,w
  1994     0216  00A7               	movwf	?_sprintf+1
  1995     0217  01A8               	clrf	?_sprintf+2
  1996     0218  1BA7               	btfsc	?_sprintf+1,7
  1997     0219  03A8               	decf	?_sprintf+2,f
  1998     021A  304C               	movlw	(low (_buffer| 0))& (0+255)
  1999     021B  120A  118A  245A  120A  118A  	fcall	_sprintf
  2000     0220                     l2449:
  2001                           
  2002                           ;main.c: 164:                 LcdALL_Write_String(buffer);
  2003     0220  304C               	movlw	(low (_buffer| 0))& (0+255)
  2004     0221  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  2005     0226                     l2451:
  2006                           
  2007                           ;main.c: 165:                 if(PORTBbits.RB1 == 0)
  2008     0226  1283               	bcf	3,5	;RP0=0, select bank0
  2009     0227  1303               	bcf	3,6	;RP1=0, select bank0
  2010     0228  1886               	btfsc	6,1	;volatile
  2011     0229  2A2B               	goto	u2011
  2012     022A  2A2C               	goto	u2010
  2013     022B                     u2011:
  2014     022B  2A49               	goto	l2463
  2015     022C                     u2010:
  2016     022C                     l127:
  2017     022C  1C86               	btfss	6,1	;volatile
  2018     022D  2A2F               	goto	u2021
  2019     022E  2A30               	goto	u2020
  2020     022F                     u2021:
  2021     022F  2A2C               	goto	l127
  2022     0230                     u2020:
  2023     0230                     l2455:
  2024                           
  2025                           ;main.c: 168:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2026     0230  3034               	movlw	52
  2027     0231  1283               	bcf	3,5	;RP0=0, select bank0
  2028     0232  1303               	bcf	3,6	;RP1=0, select bank0
  2029     0233  00C0               	movwf	??_main+1
  2030     0234  30F1               	movlw	241
  2031     0235  00BF               	movwf	??_main
  2032     0236                     u2387:
  2033     0236  0BBF               	decfsz	??_main,f
  2034     0237  2A36               	goto	u2387
  2035     0238  0BC0               	decfsz	??_main+1,f
  2036     0239  2A36               	goto	u2387
  2037     023A                     l2457:
  2038                           
  2039                           ;main.c: 169:                     year++;
  2040     023A  3001               	movlw	1
  2041     023B  1283               	bcf	3,5	;RP0=0, select bank0
  2042     023C  1303               	bcf	3,6	;RP1=0, select bank0
  2043     023D  00BF               	movwf	??_main
  2044     023E  083F               	movf	??_main,w
  2045     023F  07C8               	addwf	_year,f
  2046     0240                     l2459:
  2047                           
  2048                           ;main.c: 170:                     if(year > 99){
  2049     0240  0848               	movf	_year,w
  2050     0241  3A80               	xorlw	128
  2051     0242  3E1C               	addlw	-228
  2052     0243  1C03               	skipc
  2053     0244  2A46               	goto	u2031
  2054     0245  2A47               	goto	u2030
  2055     0246                     u2031:
  2056     0246  2A49               	goto	l2463
  2057     0247                     u2030:
  2058     0247                     l2461:
  2059                           
  2060                           ;main.c: 171:                         year = 99;
  2061     0247  3063               	movlw	99
  2062     0248  00C8               	movwf	_year
  2063     0249                     l2463:
  2064                           
  2065                           ;main.c: 174:                 if(PORTBbits.RB2 == 0)
  2066     0249  1906               	btfsc	6,2	;volatile
  2067     024A  2A4C               	goto	u2041
  2068     024B  2A4D               	goto	u2040
  2069     024C                     u2041:
  2070     024C  2833               	goto	l99
  2071     024D                     u2040:
  2072     024D                     l132:
  2073     024D  1D06               	btfss	6,2	;volatile
  2074     024E  2A50               	goto	u2051
  2075     024F  2A51               	goto	u2050
  2076     0250                     u2051:
  2077     0250  2A4D               	goto	l132
  2078     0251                     u2050:
  2079     0251                     l2467:
  2080                           
  2081                           ;main.c: 177:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2082     0251  3034               	movlw	52
  2083     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2084     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2085     0254  00C0               	movwf	??_main+1
  2086     0255  30F1               	movlw	241
  2087     0256  00BF               	movwf	??_main
  2088     0257                     u2397:
  2089     0257  0BBF               	decfsz	??_main,f
  2090     0258  2A57               	goto	u2397
  2091     0259  0BC0               	decfsz	??_main+1,f
  2092     025A  2A57               	goto	u2397
  2093     025B                     l2469:
  2094                           
  2095                           ;main.c: 178:                     year--;
  2096     025B  30FF               	movlw	255
  2097     025C  1283               	bcf	3,5	;RP0=0, select bank0
  2098     025D  1303               	bcf	3,6	;RP1=0, select bank0
  2099     025E  00BF               	movwf	??_main
  2100     025F  083F               	movf	??_main,w
  2101     0260  07C8               	addwf	_year,f
  2102     0261                     l2471:
  2103                           
  2104                           ;main.c: 179:                     if(year == -1){
  2105     0261  0A48               	incf	_year,w
  2106     0262  1D03               	btfss	3,2
  2107     0263  2A65               	goto	u2061
  2108     0264  2A66               	goto	u2060
  2109     0265                     u2061:
  2110     0265  2C56               	goto	l102
  2111     0266                     u2060:
  2112     0266                     l2473:
  2113                           
  2114                           ;main.c: 180:                         year = 0;
  2115     0266  01C8               	clrf	_year
  2116     0267  2833               	goto	l99
  2117     0268                     l2475:
  2118                           
  2119                           ;main.c: 186:                 LcdALL_Clear();
  2120     0268  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  2121                           
  2122                           ;main.c: 187:                 LcdALL_Set_Cursor(1,1);
  2123     026D  01F9               	clrf	LcdALL_Set_Cursor@b
  2124     026E  0AF9               	incf	LcdALL_Set_Cursor@b,f
  2125     026F  3001               	movlw	1
  2126     0270  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  2127     0275                     l2477:
  2128                           
  2129                           ;main.c: 188:                 sprintf(buffer, "Dia semana: %u", dow);
  2130     0275  3041               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2131     0276  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0277  1303               	bcf	3,6	;RP1=0, select bank0
  2133     0278  00A6               	movwf	sprintf@f
  2134     0279  0847               	movf	_dow,w
  2135     027A  00A7               	movwf	?_sprintf+1
  2136     027B  01A8               	clrf	?_sprintf+2
  2137     027C  1BA7               	btfsc	?_sprintf+1,7
  2138     027D  03A8               	decf	?_sprintf+2,f
  2139     027E  304C               	movlw	(low (_buffer| 0))& (0+255)
  2140     027F  120A  118A  245A  120A  118A  	fcall	_sprintf
  2141     0284                     l2479:
  2142                           
  2143                           ;main.c: 189:                 LcdALL_Write_String(buffer);
  2144     0284  304C               	movlw	(low (_buffer| 0))& (0+255)
  2145     0285  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  2146     028A                     l2481:
  2147                           
  2148                           ;main.c: 190:                 LcdALL_Set_Cursor(2,1);
  2149     028A  01F9               	clrf	LcdALL_Set_Cursor@b
  2150     028B  0AF9               	incf	LcdALL_Set_Cursor@b,f
  2151     028C  3002               	movlw	2
  2152     028D  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  2153     0292                     l2483:
  2154                           
  2155                           ;main.c: 191:                 sprintf(buffer, "%s    ", dw[dow]);
  2156     0292  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2157     0293  1283               	bcf	3,5	;RP0=0, select bank0
  2158     0294  1303               	bcf	3,6	;RP1=0, select bank0
  2159     0295  00A6               	movwf	sprintf@f
  2160     0296  300B               	movlw	11
  2161     0297  00F3               	movwf	___bmul@multiplicand
  2162     0298  0847               	movf	_dow,w
  2163     0299  120A  158A  2385  120A  118A  	fcall	___bmul
  2164     029E  3EA0               	addlw	(low (_dw| 0))& (0+255)
  2165     029F  1283               	bcf	3,5	;RP0=0, select bank0
  2166     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2167     02A1  00A7               	movwf	low ((?_sprintf| 0+1))
  2168     02A2  304C               	movlw	(low (_buffer| 0))& (0+255)
  2169     02A3  120A  118A  245A  120A  118A  	fcall	_sprintf
  2170                           
  2171                           ;main.c: 192:                 LcdALL_Write_String(buffer);
  2172     02A8  304C               	movlw	(low (_buffer| 0))& (0+255)
  2173     02A9  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  2174     02AE                     l2485:
  2175                           
  2176                           ;main.c: 193:                 if(PORTBbits.RB1 == 0)
  2177     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2178     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2179     02B0  1886               	btfsc	6,1	;volatile
  2180     02B1  2AB3               	goto	u2071
  2181     02B2  2AB4               	goto	u2070
  2182     02B3                     u2071:
  2183     02B3  2AD1               	goto	l2497
  2184     02B4                     u2070:
  2185     02B4                     l138:
  2186     02B4  1C86               	btfss	6,1	;volatile
  2187     02B5  2AB7               	goto	u2081
  2188     02B6  2AB8               	goto	u2080
  2189     02B7                     u2081:
  2190     02B7  2AB4               	goto	l138
  2191     02B8                     u2080:
  2192     02B8                     l2489:
  2193                           
  2194                           ;main.c: 196:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2195     02B8  3034               	movlw	52
  2196     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2197     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2198     02BB  00C0               	movwf	??_main+1
  2199     02BC  30F1               	movlw	241
  2200     02BD  00BF               	movwf	??_main
  2201     02BE                     u2407:
  2202     02BE  0BBF               	decfsz	??_main,f
  2203     02BF  2ABE               	goto	u2407
  2204     02C0  0BC0               	decfsz	??_main+1,f
  2205     02C1  2ABE               	goto	u2407
  2206     02C2                     l2491:
  2207                           
  2208                           ;main.c: 197:                     dow++;
  2209     02C2  3001               	movlw	1
  2210     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2211     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2212     02C5  00BF               	movwf	??_main
  2213     02C6  083F               	movf	??_main,w
  2214     02C7  07C7               	addwf	_dow,f
  2215     02C8                     l2493:
  2216                           
  2217                           ;main.c: 198:                     if(dow > 6){
  2218     02C8  0847               	movf	_dow,w
  2219     02C9  3A80               	xorlw	128
  2220     02CA  3E79               	addlw	-135
  2221     02CB  1C03               	skipc
  2222     02CC  2ACE               	goto	u2091
  2223     02CD  2ACF               	goto	u2090
  2224     02CE                     u2091:
  2225     02CE  2AD1               	goto	l2497
  2226     02CF                     u2090:
  2227     02CF                     l2495:
  2228                           
  2229                           ;main.c: 199:                         dow = 6;
  2230     02CF  3006               	movlw	6
  2231     02D0  00C7               	movwf	_dow
  2232     02D1                     l2497:
  2233                           
  2234                           ;main.c: 202:                 if(PORTBbits.RB2 == 0)
  2235     02D1  1906               	btfsc	6,2	;volatile
  2236     02D2  2AD4               	goto	u2101
  2237     02D3  2AD5               	goto	u2100
  2238     02D4                     u2101:
  2239     02D4  2833               	goto	l99
  2240     02D5                     u2100:
  2241     02D5                     l143:
  2242     02D5  1D06               	btfss	6,2	;volatile
  2243     02D6  2AD8               	goto	u2111
  2244     02D7  2AD9               	goto	u2110
  2245     02D8                     u2111:
  2246     02D8  2AD5               	goto	l143
  2247     02D9                     u2110:
  2248     02D9                     l2501:
  2249                           
  2250                           ;main.c: 205:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2251     02D9  3034               	movlw	52
  2252     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2253     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2254     02DC  00C0               	movwf	??_main+1
  2255     02DD  30F1               	movlw	241
  2256     02DE  00BF               	movwf	??_main
  2257     02DF                     u2417:
  2258     02DF  0BBF               	decfsz	??_main,f
  2259     02E0  2ADF               	goto	u2417
  2260     02E1  0BC0               	decfsz	??_main+1,f
  2261     02E2  2ADF               	goto	u2417
  2262     02E3                     l2503:
  2263                           
  2264                           ;main.c: 206:                     dow--;
  2265     02E3  30FF               	movlw	255
  2266     02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2267     02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2268     02E6  00BF               	movwf	??_main
  2269     02E7  083F               	movf	??_main,w
  2270     02E8  07C7               	addwf	_dow,f
  2271     02E9                     l2505:
  2272                           
  2273                           ;main.c: 207:                     if(dow == -1){
  2274     02E9  0A47               	incf	_dow,w
  2275     02EA  1D03               	btfss	3,2
  2276     02EB  2AED               	goto	u2121
  2277     02EC  2AEE               	goto	u2120
  2278     02ED                     u2121:
  2279     02ED  2C56               	goto	l102
  2280     02EE                     u2120:
  2281     02EE                     l2507:
  2282                           
  2283                           ;main.c: 208:                         dow = 0;
  2284     02EE  01C7               	clrf	_dow
  2285     02EF  2833               	goto	l99
  2286     02F0                     l2509:
  2287                           
  2288                           ;main.c: 214:                 LcdALL_Clear();
  2289     02F0  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  2290                           
  2291                           ;main.c: 215:                 LcdALL_Set_Cursor(1,1);
  2292     02F5  01F9               	clrf	LcdALL_Set_Cursor@b
  2293     02F6  0AF9               	incf	LcdALL_Set_Cursor@b,f
  2294     02F7  3001               	movlw	1
  2295     02F8  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  2296     02FD                     l2511:
  2297                           
  2298                           ;main.c: 216:                 sprintf(buffer, "Hora: %02u", hr);
  2299     02FD  306B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2300     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2301     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2302     0300  00A6               	movwf	sprintf@f
  2303     0301  0846               	movf	_hr,w
  2304     0302  00A7               	movwf	?_sprintf+1
  2305     0303  01A8               	clrf	?_sprintf+2
  2306     0304  1BA7               	btfsc	?_sprintf+1,7
  2307     0305  03A8               	decf	?_sprintf+2,f
  2308     0306  304C               	movlw	(low (_buffer| 0))& (0+255)
  2309     0307  120A  118A  245A  120A  118A  	fcall	_sprintf
  2310     030C                     l2513:
  2311                           
  2312                           ;main.c: 217:                 LcdALL_Write_String(buffer);
  2313     030C  304C               	movlw	(low (_buffer| 0))& (0+255)
  2314     030D  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  2315     0312                     l2515:
  2316                           
  2317                           ;main.c: 218:                 if(PORTBbits.RB1 == 0)
  2318     0312  1283               	bcf	3,5	;RP0=0, select bank0
  2319     0313  1303               	bcf	3,6	;RP1=0, select bank0
  2320     0314  1886               	btfsc	6,1	;volatile
  2321     0315  2B17               	goto	u2131
  2322     0316  2B18               	goto	u2130
  2323     0317                     u2131:
  2324     0317  2B35               	goto	l2527
  2325     0318                     u2130:
  2326     0318                     l149:
  2327     0318  1C86               	btfss	6,1	;volatile
  2328     0319  2B1B               	goto	u2141
  2329     031A  2B1C               	goto	u2140
  2330     031B                     u2141:
  2331     031B  2B18               	goto	l149
  2332     031C                     u2140:
  2333     031C                     l2519:
  2334                           
  2335                           ;main.c: 221:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2336     031C  3034               	movlw	52
  2337     031D  1283               	bcf	3,5	;RP0=0, select bank0
  2338     031E  1303               	bcf	3,6	;RP1=0, select bank0
  2339     031F  00C0               	movwf	??_main+1
  2340     0320  30F1               	movlw	241
  2341     0321  00BF               	movwf	??_main
  2342     0322                     u2427:
  2343     0322  0BBF               	decfsz	??_main,f
  2344     0323  2B22               	goto	u2427
  2345     0324  0BC0               	decfsz	??_main+1,f
  2346     0325  2B22               	goto	u2427
  2347     0326                     l2521:
  2348                           
  2349                           ;main.c: 222:                     hr++;
  2350     0326  3001               	movlw	1
  2351     0327  1283               	bcf	3,5	;RP0=0, select bank0
  2352     0328  1303               	bcf	3,6	;RP1=0, select bank0
  2353     0329  00BF               	movwf	??_main
  2354     032A  083F               	movf	??_main,w
  2355     032B  07C6               	addwf	_hr,f
  2356     032C                     l2523:
  2357                           
  2358                           ;main.c: 223:                     if(hr > 23){
  2359     032C  0846               	movf	_hr,w
  2360     032D  3A80               	xorlw	128
  2361     032E  3E68               	addlw	-152
  2362     032F  1C03               	skipc
  2363     0330  2B32               	goto	u2151
  2364     0331  2B33               	goto	u2150
  2365     0332                     u2151:
  2366     0332  2B35               	goto	l2527
  2367     0333                     u2150:
  2368     0333                     l2525:
  2369                           
  2370                           ;main.c: 224:                         hr = 23;
  2371     0333  3017               	movlw	23
  2372     0334  00C6               	movwf	_hr
  2373     0335                     l2527:
  2374                           
  2375                           ;main.c: 227:                 if(PORTBbits.RB2 == 0)
  2376     0335  1906               	btfsc	6,2	;volatile
  2377     0336  2B38               	goto	u2161
  2378     0337  2B39               	goto	u2160
  2379     0338                     u2161:
  2380     0338  2833               	goto	l99
  2381     0339                     u2160:
  2382     0339                     l154:
  2383     0339  1D06               	btfss	6,2	;volatile
  2384     033A  2B3C               	goto	u2171
  2385     033B  2B3D               	goto	u2170
  2386     033C                     u2171:
  2387     033C  2B39               	goto	l154
  2388     033D                     u2170:
  2389     033D                     l2531:
  2390                           
  2391                           ;main.c: 230:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2392     033D  3034               	movlw	52
  2393     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2394     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2395     0340  00C0               	movwf	??_main+1
  2396     0341  30F1               	movlw	241
  2397     0342  00BF               	movwf	??_main
  2398     0343                     u2437:
  2399     0343  0BBF               	decfsz	??_main,f
  2400     0344  2B43               	goto	u2437
  2401     0345  0BC0               	decfsz	??_main+1,f
  2402     0346  2B43               	goto	u2437
  2403     0347                     l2533:
  2404                           
  2405                           ;main.c: 231:                     hr--;
  2406     0347  30FF               	movlw	255
  2407     0348  1283               	bcf	3,5	;RP0=0, select bank0
  2408     0349  1303               	bcf	3,6	;RP1=0, select bank0
  2409     034A  00BF               	movwf	??_main
  2410     034B  083F               	movf	??_main,w
  2411     034C  07C6               	addwf	_hr,f
  2412     034D                     l2535:
  2413                           
  2414                           ;main.c: 232:                     if(hr == -1){
  2415     034D  0A46               	incf	_hr,w
  2416     034E  1D03               	btfss	3,2
  2417     034F  2B51               	goto	u2181
  2418     0350  2B52               	goto	u2180
  2419     0351                     u2181:
  2420     0351  2C56               	goto	l102
  2421     0352                     u2180:
  2422     0352                     l2537:
  2423                           
  2424                           ;main.c: 233:                         hr = 0;
  2425     0352  01C6               	clrf	_hr
  2426     0353  2833               	goto	l99
  2427     0354                     l2539:
  2428                           
  2429                           ;main.c: 239:                 LcdALL_Clear();
  2430     0354  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  2431                           
  2432                           ;main.c: 240:                 LcdALL_Set_Cursor(1,1);
  2433     0359  01F9               	clrf	LcdALL_Set_Cursor@b
  2434     035A  0AF9               	incf	LcdALL_Set_Cursor@b,f
  2435     035B  3001               	movlw	1
  2436     035C  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  2437     0361                     l2541:
  2438                           
  2439                           ;main.c: 241:                 sprintf(buffer, "Minuto: %02u", min);
  2440     0361  305E               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2441     0362  1283               	bcf	3,5	;RP0=0, select bank0
  2442     0363  1303               	bcf	3,6	;RP1=0, select bank0
  2443     0364  00A6               	movwf	sprintf@f
  2444     0365  0845               	movf	_min,w
  2445     0366  00A7               	movwf	?_sprintf+1
  2446     0367  01A8               	clrf	?_sprintf+2
  2447     0368  1BA7               	btfsc	?_sprintf+1,7
  2448     0369  03A8               	decf	?_sprintf+2,f
  2449     036A  304C               	movlw	(low (_buffer| 0))& (0+255)
  2450     036B  120A  118A  245A  120A  118A  	fcall	_sprintf
  2451     0370                     l2543:
  2452                           
  2453                           ;main.c: 242:                 LcdALL_Write_String(buffer);
  2454     0370  304C               	movlw	(low (_buffer| 0))& (0+255)
  2455     0371  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  2456     0376                     l2545:
  2457                           
  2458                           ;main.c: 243:                 if(PORTBbits.RB1 == 0)
  2459     0376  1283               	bcf	3,5	;RP0=0, select bank0
  2460     0377  1303               	bcf	3,6	;RP1=0, select bank0
  2461     0378  1886               	btfsc	6,1	;volatile
  2462     0379  2B7B               	goto	u2191
  2463     037A  2B7C               	goto	u2190
  2464     037B                     u2191:
  2465     037B  2B99               	goto	l2557
  2466     037C                     u2190:
  2467     037C                     l160:
  2468     037C  1C86               	btfss	6,1	;volatile
  2469     037D  2B7F               	goto	u2201
  2470     037E  2B80               	goto	u2200
  2471     037F                     u2201:
  2472     037F  2B7C               	goto	l160
  2473     0380                     u2200:
  2474     0380                     l2549:
  2475                           
  2476                           ;main.c: 246:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2477     0380  3034               	movlw	52
  2478     0381  1283               	bcf	3,5	;RP0=0, select bank0
  2479     0382  1303               	bcf	3,6	;RP1=0, select bank0
  2480     0383  00C0               	movwf	??_main+1
  2481     0384  30F1               	movlw	241
  2482     0385  00BF               	movwf	??_main
  2483     0386                     u2447:
  2484     0386  0BBF               	decfsz	??_main,f
  2485     0387  2B86               	goto	u2447
  2486     0388  0BC0               	decfsz	??_main+1,f
  2487     0389  2B86               	goto	u2447
  2488     038A                     l2551:
  2489                           
  2490                           ;main.c: 247:                     min++;
  2491     038A  3001               	movlw	1
  2492     038B  1283               	bcf	3,5	;RP0=0, select bank0
  2493     038C  1303               	bcf	3,6	;RP1=0, select bank0
  2494     038D  00BF               	movwf	??_main
  2495     038E  083F               	movf	??_main,w
  2496     038F  07C5               	addwf	_min,f
  2497     0390                     l2553:
  2498                           
  2499                           ;main.c: 248:                     if(min > 59){
  2500     0390  0845               	movf	_min,w
  2501     0391  3A80               	xorlw	128
  2502     0392  3E44               	addlw	-188
  2503     0393  1C03               	skipc
  2504     0394  2B96               	goto	u2211
  2505     0395  2B97               	goto	u2210
  2506     0396                     u2211:
  2507     0396  2B99               	goto	l2557
  2508     0397                     u2210:
  2509     0397                     l2555:
  2510                           
  2511                           ;main.c: 249:                         min = 59;
  2512     0397  303B               	movlw	59
  2513     0398  00C5               	movwf	_min
  2514     0399                     l2557:
  2515                           
  2516                           ;main.c: 252:                 if(PORTBbits.RB2 == 0)
  2517     0399  1906               	btfsc	6,2	;volatile
  2518     039A  2B9C               	goto	u2221
  2519     039B  2B9D               	goto	u2220
  2520     039C                     u2221:
  2521     039C  2833               	goto	l99
  2522     039D                     u2220:
  2523     039D                     l165:
  2524     039D  1D06               	btfss	6,2	;volatile
  2525     039E  2BA0               	goto	u2231
  2526     039F  2BA1               	goto	u2230
  2527     03A0                     u2231:
  2528     03A0  2B9D               	goto	l165
  2529     03A1                     u2230:
  2530     03A1                     l2561:
  2531                           
  2532                           ;main.c: 255:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2533     03A1  3034               	movlw	52
  2534     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2535     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2536     03A4  00C0               	movwf	??_main+1
  2537     03A5  30F1               	movlw	241
  2538     03A6  00BF               	movwf	??_main
  2539     03A7                     u2457:
  2540     03A7  0BBF               	decfsz	??_main,f
  2541     03A8  2BA7               	goto	u2457
  2542     03A9  0BC0               	decfsz	??_main+1,f
  2543     03AA  2BA7               	goto	u2457
  2544     03AB                     l2563:
  2545                           
  2546                           ;main.c: 256:                     min--;
  2547     03AB  30FF               	movlw	255
  2548     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2549     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2550     03AE  00BF               	movwf	??_main
  2551     03AF  083F               	movf	??_main,w
  2552     03B0  07C5               	addwf	_min,f
  2553     03B1                     l2565:
  2554                           
  2555                           ;main.c: 257:                     if(min == -1){
  2556     03B1  0A45               	incf	_min,w
  2557     03B2  1D03               	btfss	3,2
  2558     03B3  2BB5               	goto	u2241
  2559     03B4  2BB6               	goto	u2240
  2560     03B5                     u2241:
  2561     03B5  2C56               	goto	l102
  2562     03B6                     u2240:
  2563     03B6                     l2567:
  2564                           
  2565                           ;main.c: 258:                         min = 0;
  2566     03B6  01C5               	clrf	_min
  2567     03B7  2833               	goto	l99
  2568     03B8                     l2569:
  2569                           
  2570                           ;main.c: 264:                 LcdALL_Clear();
  2571     03B8  120A  158A  2350  120A  118A  	fcall	_LcdALL_Clear
  2572                           
  2573                           ;main.c: 265:                 LcdALL_Set_Cursor(1,1);
  2574     03BD  01F9               	clrf	LcdALL_Set_Cursor@b
  2575     03BE  0AF9               	incf	LcdALL_Set_Cursor@b,f
  2576     03BF  3001               	movlw	1
  2577     03C0  120A  158A  2413  120A  118A  	fcall	_LcdALL_Set_Cursor
  2578     03C5                     l2571:
  2579                           
  2580                           ;main.c: 266:                 sprintf(buffer, "Segundo: %02u", sec);
  2581     03C5  3050               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2582     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2583     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2584     03C8  00A6               	movwf	sprintf@f
  2585     03C9  0844               	movf	_sec,w
  2586     03CA  00A7               	movwf	?_sprintf+1
  2587     03CB  01A8               	clrf	?_sprintf+2
  2588     03CC  1BA7               	btfsc	?_sprintf+1,7
  2589     03CD  03A8               	decf	?_sprintf+2,f
  2590     03CE  304C               	movlw	(low (_buffer| 0))& (0+255)
  2591     03CF  120A  118A  245A  120A  118A  	fcall	_sprintf
  2592     03D4                     l2573:
  2593                           
  2594                           ;main.c: 267:                 LcdALL_Write_String(buffer);
  2595     03D4  304C               	movlw	(low (_buffer| 0))& (0+255)
  2596     03D5  120A  158A  2435  120A  118A  	fcall	_LcdALL_Write_String
  2597     03DA                     l2575:
  2598                           
  2599                           ;main.c: 268:                 if(PORTBbits.RB1 == 0)
  2600     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2601     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2602     03DC  1886               	btfsc	6,1	;volatile
  2603     03DD  2BDF               	goto	u2251
  2604     03DE  2BE0               	goto	u2250
  2605     03DF                     u2251:
  2606     03DF  2BFD               	goto	l2587
  2607     03E0                     u2250:
  2608     03E0                     l171:
  2609     03E0  1C86               	btfss	6,1	;volatile
  2610     03E1  2BE3               	goto	u2261
  2611     03E2  2BE4               	goto	u2260
  2612     03E3                     u2261:
  2613     03E3  2BE0               	goto	l171
  2614     03E4                     u2260:
  2615     03E4                     l2579:
  2616                           
  2617                           ;main.c: 271:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2618     03E4  3034               	movlw	52
  2619     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2620     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2621     03E7  00C0               	movwf	??_main+1
  2622     03E8  30F1               	movlw	241
  2623     03E9  00BF               	movwf	??_main
  2624     03EA                     u2467:
  2625     03EA  0BBF               	decfsz	??_main,f
  2626     03EB  2BEA               	goto	u2467
  2627     03EC  0BC0               	decfsz	??_main+1,f
  2628     03ED  2BEA               	goto	u2467
  2629     03EE                     l2581:
  2630                           
  2631                           ;main.c: 272:                     sec++;
  2632     03EE  3001               	movlw	1
  2633     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2634     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2635     03F1  00BF               	movwf	??_main
  2636     03F2  083F               	movf	??_main,w
  2637     03F3  07C4               	addwf	_sec,f
  2638     03F4                     l2583:
  2639                           
  2640                           ;main.c: 273:                     if(sec > 59){
  2641     03F4  0844               	movf	_sec,w
  2642     03F5  3A80               	xorlw	128
  2643     03F6  3E44               	addlw	-188
  2644     03F7  1C03               	skipc
  2645     03F8  2BFA               	goto	u2271
  2646     03F9  2BFB               	goto	u2270
  2647     03FA                     u2271:
  2648     03FA  2BFD               	goto	l2587
  2649     03FB                     u2270:
  2650     03FB                     l2585:
  2651                           
  2652                           ;main.c: 274:                         sec = 59;
  2653     03FB  303B               	movlw	59
  2654     03FC  00C4               	movwf	_sec
  2655     03FD                     l2587:
  2656                           
  2657                           ;main.c: 277:                 if(PORTBbits.RB2 == 0)
  2658     03FD  1906               	btfsc	6,2	;volatile
  2659     03FE  2C00               	goto	u2281
  2660     03FF  2C01               	goto	u2280
  2661     0400                     u2281:
  2662     0400  2833               	goto	l99
  2663     0401                     u2280:
  2664     0401                     l176:
  2665     0401  1D06               	btfss	6,2	;volatile
  2666     0402  2C04               	goto	u2291
  2667     0403  2C05               	goto	u2290
  2668     0404                     u2291:
  2669     0404  2C01               	goto	l176
  2670     0405                     u2290:
  2671     0405                     l2591:
  2672                           
  2673                           ;main.c: 280:                     _delay((unsigned long)((20)*(8000000/4000.0)));
  2674     0405  3034               	movlw	52
  2675     0406  1283               	bcf	3,5	;RP0=0, select bank0
  2676     0407  1303               	bcf	3,6	;RP1=0, select bank0
  2677     0408  00C0               	movwf	??_main+1
  2678     0409  30F1               	movlw	241
  2679     040A  00BF               	movwf	??_main
  2680     040B                     u2477:
  2681     040B  0BBF               	decfsz	??_main,f
  2682     040C  2C0B               	goto	u2477
  2683     040D  0BC0               	decfsz	??_main+1,f
  2684     040E  2C0B               	goto	u2477
  2685     040F                     l2593:
  2686                           
  2687                           ;main.c: 281:                     sec--;
  2688     040F  30FF               	movlw	255
  2689     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2690     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2691     0412  00BF               	movwf	??_main
  2692     0413  083F               	movf	??_main,w
  2693     0414  07C4               	addwf	_sec,f
  2694     0415                     l2595:
  2695                           
  2696                           ;main.c: 282:                     if(sec == -1){
  2697     0415  0A44               	incf	_sec,w
  2698     0416  1D03               	btfss	3,2
  2699     0417  2C19               	goto	u2301
  2700     0418  2C1A               	goto	u2300
  2701     0419                     u2301:
  2702     0419  2C56               	goto	l102
  2703     041A                     u2300:
  2704     041A                     l2597:
  2705                           
  2706                           ;main.c: 283:                         sec = 0;
  2707     041A  01C4               	clrf	_sec
  2708     041B  2833               	goto	l99
  2709     041C                     l2599:
  2710                           
  2711                           ;main.c: 296:                 DS3231_Set_Date_Time(day,mth,year,dow,hr,min,sec);
  2712     041C  0849               	movf	_mth,w
  2713     041D  00A0               	movwf	DS3231_Set_Date_Time@mth
  2714     041E  0848               	movf	_year,w
  2715     041F  00A1               	movwf	DS3231_Set_Date_Time@yr
  2716     0420  0847               	movf	_dow,w
  2717     0421  00A2               	movwf	DS3231_Set_Date_Time@dw
  2718     0422  0846               	movf	_hr,w
  2719     0423  00A3               	movwf	DS3231_Set_Date_Time@hr
  2720     0424  0845               	movf	_min,w
  2721     0425  00A4               	movwf	DS3231_Set_Date_Time@mn
  2722     0426  0844               	movf	_sec,w
  2723     0427  00A5               	movwf	DS3231_Set_Date_Time@sc
  2724     0428  084A               	movf	_day,w
  2725     0429  120A  118A  2666  120A  118A  	fcall	_DS3231_Set_Date_Time
  2726     042E                     l2601:
  2727                           
  2728                           ;main.c: 297:                 estado = 0;
  2729     042E  1283               	bcf	3,5	;RP0=0, select bank0
  2730     042F  1303               	bcf	3,6	;RP1=0, select bank0
  2731     0430  01CB               	clrf	_estado
  2732                           
  2733                           ;main.c: 298:                 break;
  2734     0431  2833               	goto	l99
  2735     0432                     l2605:
  2736     0432  084B               	movf	_estado,w
  2737     0433  00BF               	movwf	??_main
  2738     0434  01C0               	clrf	??_main+1
  2739     0435  1BBF               	btfsc	??_main,7
  2740     0436  03C0               	decf	??_main+1,f
  2741                           
  2742                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2743                           ; Switch size 1, requested type "simple"
  2744                           ; Number of cases is 1, Range of values is 0 to 0
  2745                           ; switch strategies available:
  2746                           ; Name         Instructions Cycles
  2747                           ; simple_byte            4     3 (average)
  2748                           ; direct_byte           11     8 (fixed)
  2749                           ; jumptable            260     6 (fixed)
  2750                           ;	Chosen strategy is simple_byte
  2751     0437  0840               	movf	??_main+1,w
  2752     0438  3A00               	xorlw	0	; case 0
  2753     0439  1903               	skipnz
  2754     043A  2C3C               	goto	l2687
  2755     043B  2C1C               	goto	l2599
  2756     043C                     l2687:
  2757                           
  2758                           ; Switch size 1, requested type "simple"
  2759                           ; Number of cases is 8, Range of values is 0 to 7
  2760                           ; switch strategies available:
  2761                           ; Name         Instructions Cycles
  2762                           ; simple_byte           25    13 (average)
  2763                           ; direct_byte           32     8 (fixed)
  2764                           ; jumptable            260     6 (fixed)
  2765                           ;	Chosen strategy is simple_byte
  2766     043C  083F               	movf	??_main,w
  2767     043D  3A00               	xorlw	0	; case 0
  2768     043E  1903               	skipnz
  2769     043F  289A               	goto	l2371
  2770     0440  3A01               	xorlw	1	; case 1
  2771     0441  1903               	skipnz
  2772     0442  2924               	goto	l2385
  2773     0443  3A03               	xorlw	3	; case 2
  2774     0444  1903               	skipnz
  2775     0445  298B               	goto	l2415
  2776     0446  3A01               	xorlw	1	; case 3
  2777     0447  1903               	skipnz
  2778     0448  29F2               	goto	l2445
  2779     0449  3A07               	xorlw	7	; case 4
  2780     044A  1903               	skipnz
  2781     044B  2A68               	goto	l2475
  2782     044C  3A01               	xorlw	1	; case 5
  2783     044D  1903               	skipnz
  2784     044E  2AF0               	goto	l2509
  2785     044F  3A03               	xorlw	3	; case 6
  2786     0450  1903               	skipnz
  2787     0451  2B54               	goto	l2539
  2788     0452  3A01               	xorlw	1	; case 7
  2789     0453  1903               	skipnz
  2790     0454  2BB8               	goto	l2569
  2791     0455  2C1C               	goto	l2599
  2792     0456                     l102:
  2793     0456  2833               	goto	l99
  2794     0457  120A  118A  280C   	ljmp	start
  2795     045A                     __end_of_main:
  2796                           
  2797                           	psect	text1
  2798     045A                     __ptext1:	
  2799 ;; *************** function _sprintf *****************
  2800 ;; Defined at:
  2801 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  sp              1    wreg     PTR unsigned char 
  2804 ;;		 -> buffer(20), 
  2805 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2806 ;;		 -> STR_11(3), STR_10(14), STR_9(13), STR_8(11), 
  2807 ;;		 -> STR_7(7), STR_6(15), STR_5(7), STR_4(10), 
  2808 ;;		 -> STR_3(10), STR_2(23), STR_1(23), 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  sp              1   30[BANK0 ] PTR unsigned char 
  2811 ;;		 -> buffer(20), 
  2812 ;;  tmpval          4    0        struct .
  2813 ;;  width           2   27[BANK0 ] int 
  2814 ;;  len             2   25[BANK0 ] unsigned int 
  2815 ;;  cp              2   23[BANK0 ] PTR const unsigned char 
  2816 ;;		 -> STR_12(7), ?_sprintf(2), dw(77), 
  2817 ;;  val             2   19[BANK0 ] unsigned int 
  2818 ;;  c               1   29[BANK0 ] unsigned char 
  2819 ;;  ap              1   22[BANK0 ] PTR void [1]
  2820 ;;		 -> ?_sprintf(2), 
  2821 ;;  prec            1   21[BANK0 ] char 
  2822 ;;  flag            1   18[BANK0 ] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2    6[BANK0 ] int 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       9       0       0       0
  2833 ;;      Locals:         0      13       0       0       0
  2834 ;;      Temps:          0       3       0       0       0
  2835 ;;      Totals:         0      25       0       0       0
  2836 ;;Total ram usage:       25 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 2
  2839 ;; This function calls:
  2840 ;;		___lwdiv
  2841 ;;		___lwmod
  2842 ;;		___wmul
  2843 ;;		_isdigit
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;;		_DS3231_Get_DayOfWeek
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850     045A                     _sprintf:	
  2851                           ;psect for function _sprintf
  2852                           
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2856                           ;sprintf@sp stored from wreg
  2857     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2858     045B  1303               	bcf	3,6	;RP1=0, select bank0
  2859     045C  00BE               	movwf	sprintf@sp
  2860     045D                     l2155:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2863     045D  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2864     045E  00B6               	movwf	sprintf@ap
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2867     045F  2E51               	goto	l2273
  2868     0460                     l2157:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2871     0460  3025               	movlw	37
  2872     0461  063D               	xorwf	sprintf@c,w
  2873     0462  1903               	btfsc	3,2
  2874     0463  2C65               	goto	u1631
  2875     0464  2C66               	goto	u1630
  2876     0465                     u1631:
  2877     0465  2C70               	goto	l2163
  2878     0466                     u1630:
  2879     0466                     l2159:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2882     0466  083E               	movf	sprintf@sp,w
  2883     0467  0084               	movwf	4
  2884     0468  083D               	movf	sprintf@c,w
  2885     0469  1383               	bcf	3,7	;select IRP bank0
  2886     046A  0080               	movwf	0
  2887     046B                     l2161:
  2888     046B  3001               	movlw	1
  2889     046C  00AF               	movwf	??_sprintf
  2890     046D  082F               	movf	??_sprintf,w
  2891     046E  07BE               	addwf	sprintf@sp,f
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2894     046F  2E51               	goto	l2273
  2895     0470                     l2163:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2898     0470  01BB               	clrf	sprintf@width
  2899     0471  01BC               	clrf	sprintf@width+1
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2902     0472  01B2               	clrf	sprintf@flag
  2903     0473  2C79               	goto	l2169
  2904     0474                     l463:	
  2905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2906                           
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2909     0474  1532               	bsf	sprintf@flag,2
  2910     0475                     l2165:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  2913     0475  3001               	movlw	1
  2914     0476  00AF               	movwf	??_sprintf
  2915     0477  082F               	movf	??_sprintf,w
  2916     0478  07A6               	addwf	sprintf@f,f
  2917     0479                     l2169:	
  2918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2919                           
  2920     0479  0826               	movf	sprintf@f,w
  2921     047A  0084               	movwf	4
  2922     047B  120A  118A  271C  120A  118A  	fcall	stringdir
  2923     0480  00AF               	movwf	??_sprintf
  2924     0481  01B0               	clrf	??_sprintf+1
  2925                           
  2926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2927                           ; Switch size 1, requested type "simple"
  2928                           ; Number of cases is 1, Range of values is 0 to 0
  2929                           ; switch strategies available:
  2930                           ; Name         Instructions Cycles
  2931                           ; simple_byte            4     3 (average)
  2932                           ; direct_byte           11     8 (fixed)
  2933                           ; jumptable            260     6 (fixed)
  2934                           ;	Chosen strategy is simple_byte
  2935     0482  0830               	movf	??_sprintf+1,w
  2936     0483  3A00               	xorlw	0	; case 0
  2937     0484  1903               	skipnz
  2938     0485  2C87               	goto	l2689
  2939     0486  2C8C               	goto	l2171
  2940     0487                     l2689:
  2941                           
  2942                           ; Switch size 1, requested type "simple"
  2943                           ; Number of cases is 1, Range of values is 48 to 48
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            4     3 (average)
  2947                           ; direct_byte           14    11 (fixed)
  2948                           ; jumptable            263     9 (fixed)
  2949                           ;	Chosen strategy is simple_byte
  2950     0487  082F               	movf	??_sprintf,w
  2951     0488  3A30               	xorlw	48	; case 48
  2952     0489  1903               	skipnz
  2953     048A  2C74               	goto	l463
  2954     048B  2C8C               	goto	l2171
  2955     048C                     l2171:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2958     048C  0826               	movf	sprintf@f,w
  2959     048D  0084               	movwf	4
  2960     048E  120A  118A  271C  120A  118A  	fcall	stringdir
  2961     0493  120A  158A  2360  120A  118A  	fcall	_isdigit
  2962     0498  1C03               	btfss	3,0
  2963     0499  2C9B               	goto	u1641
  2964     049A  2C9C               	goto	u1640
  2965     049B                     u1641:
  2966     049B  2D65               	goto	l2221
  2967     049C                     u1640:
  2968     049C                     l2173:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2971     049C  1283               	bcf	3,5	;RP0=0, select bank0
  2972     049D  1303               	bcf	3,6	;RP1=0, select bank0
  2973     049E  01BB               	clrf	sprintf@width
  2974     049F  01BC               	clrf	sprintf@width+1
  2975     04A0                     l2175:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2978     04A0  300A               	movlw	10
  2979     04A1  00F3               	movwf	___wmul@multiplier
  2980     04A2  3000               	movlw	0
  2981     04A3  00F4               	movwf	___wmul@multiplier+1
  2982     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2983     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2984     04A6  083C               	movf	sprintf@width+1,w
  2985     04A7  00F6               	movwf	___wmul@multiplicand+1
  2986     04A8  083B               	movf	sprintf@width,w
  2987     04A9  00F5               	movwf	___wmul@multiplicand
  2988     04AA  120A  158A  245A  120A  118A  	fcall	___wmul
  2989     04AF  0874               	movf	?___wmul+1,w
  2990     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2991     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2992     04B2  00BC               	movwf	sprintf@width+1
  2993     04B3  0873               	movf	?___wmul,w
  2994     04B4  00BB               	movwf	sprintf@width
  2995     04B5                     l2177:
  2996                           
  2997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2998     04B5  0826               	movf	sprintf@f,w
  2999     04B6  0084               	movwf	4
  3000     04B7  120A  118A  271C  120A  118A  	fcall	stringdir
  3001     04BC  3ED0               	addlw	208
  3002     04BD  00AF               	movwf	??_sprintf
  3003     04BE  30FF               	movlw	255
  3004     04BF  1803               	skipnc
  3005     04C0  3000               	movlw	0
  3006     04C1  00B0               	movwf	??_sprintf+1
  3007     04C2  082F               	movf	??_sprintf,w
  3008     04C3  07BB               	addwf	sprintf@width,f
  3009     04C4  1803               	skipnc
  3010     04C5  0ABC               	incf	sprintf@width+1,f
  3011     04C6  0830               	movf	??_sprintf+1,w
  3012     04C7  07BC               	addwf	sprintf@width+1,f
  3013     04C8                     l2179:
  3014     04C8  3001               	movlw	1
  3015     04C9  00AF               	movwf	??_sprintf
  3016     04CA  082F               	movf	??_sprintf,w
  3017     04CB  07A6               	addwf	sprintf@f,f
  3018     04CC                     l2181:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3021     04CC  0826               	movf	sprintf@f,w
  3022     04CD  0084               	movwf	4
  3023     04CE  120A  118A  271C  120A  118A  	fcall	stringdir
  3024     04D3  120A  158A  2360  120A  118A  	fcall	_isdigit
  3025     04D8  1803               	btfsc	3,0
  3026     04D9  2CDB               	goto	u1651
  3027     04DA  2CDC               	goto	u1650
  3028     04DB                     u1651:
  3029     04DB  2CA0               	goto	l2175
  3030     04DC                     u1650:
  3031     04DC  2D65               	goto	l2221
  3032     04DD                     l2183:
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  3035     04DD  0836               	movf	sprintf@ap,w
  3036     04DE  0084               	movwf	4
  3037     04DF  1383               	bcf	3,7	;select IRP bank0
  3038     04E0  0800               	movf	0,w
  3039     04E1  00B7               	movwf	sprintf@cp
  3040     04E2  3000               	movlw	0
  3041     04E3  00B8               	movwf	sprintf@cp+1
  3042     04E4                     l2185:
  3043     04E4  3001               	movlw	1
  3044     04E5  00AF               	movwf	??_sprintf
  3045     04E6  082F               	movf	??_sprintf,w
  3046     04E7  07B6               	addwf	sprintf@ap,f
  3047     04E8                     l2187:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  3050     04E8  0837               	movf	sprintf@cp,w
  3051     04E9  0438               	iorwf	sprintf@cp+1,w
  3052     04EA  1D03               	btfss	3,2
  3053     04EB  2CED               	goto	u1661
  3054     04EC  2CEE               	goto	u1660
  3055     04ED                     u1661:
  3056     04ED  2CF2               	goto	l2191
  3057     04EE                     u1660:
  3058     04EE                     l2189:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  3061     04EE  308A               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3062     04EF  00B7               	movwf	sprintf@cp
  3063     04F0  3080               	movlw	128
  3064     04F1  00B8               	movwf	sprintf@cp+1
  3065     04F2                     l2191:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  3068     04F2  01B9               	clrf	sprintf@len
  3069     04F3  01BA               	clrf	sprintf@len+1
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  3072     04F4  2CFB               	goto	l2195
  3073     04F5                     l2193:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 773:     len++;
  3076     04F5  3001               	movlw	1
  3077     04F6  07B9               	addwf	sprintf@len,f
  3078     04F7  1803               	skipnc
  3079     04F8  0ABA               	incf	sprintf@len+1,f
  3080     04F9  3000               	movlw	0
  3081     04FA  07BA               	addwf	sprintf@len+1,f
  3082     04FB                     l2195:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  3085     04FB  0839               	movf	sprintf@len,w
  3086     04FC  0737               	addwf	sprintf@cp,w
  3087     04FD  0084               	movwf	4
  3088     04FE  0838               	movf	sprintf@cp+1,w
  3089     04FF  1803               	skipnc
  3090     0500  0A38               	incf	sprintf@cp+1,w
  3091     0501  00FF               	movwf	btemp+1
  3092     0502  120A  118A  2712  120A  118A  	fcall	stringtab
  3093     0507  3A00               	xorlw	0
  3094     0508  1D03               	skipz
  3095     0509  2D0B               	goto	u1671
  3096     050A  2D0C               	goto	u1670
  3097     050B                     u1671:
  3098     050B  2CF5               	goto	l2193
  3099     050C                     u1670:
  3100     050C                     l2197:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  3103     050C  083C               	movf	sprintf@width+1,w
  3104     050D  023A               	subwf	sprintf@len+1,w
  3105     050E  1D03               	skipz
  3106     050F  2D12               	goto	u1685
  3107     0510  083B               	movf	sprintf@width,w
  3108     0511  0239               	subwf	sprintf@len,w
  3109     0512                     u1685:
  3110     0512  1803               	skipnc
  3111     0513  2D15               	goto	u1681
  3112     0514  2D16               	goto	u1680
  3113     0515                     u1681:
  3114     0515  2D1D               	goto	l2201
  3115     0516                     u1680:
  3116     0516                     l2199:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  3119     0516  0839               	movf	sprintf@len,w
  3120     0517  02BB               	subwf	sprintf@width,f
  3121     0518  083A               	movf	sprintf@len+1,w
  3122     0519  1C03               	skipc
  3123     051A  03BC               	decf	sprintf@width+1,f
  3124     051B  02BC               	subwf	sprintf@width+1,f
  3125     051C  2D29               	goto	l2207
  3126     051D                     l2201:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  3129     051D  01BB               	clrf	sprintf@width
  3130     051E  01BC               	clrf	sprintf@width+1
  3131     051F  2D29               	goto	l2207
  3132     0520                     l2203:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  3135     0520  083E               	movf	sprintf@sp,w
  3136     0521  0084               	movwf	4
  3137     0522  3020               	movlw	32
  3138     0523  1383               	bcf	3,7	;select IRP bank0
  3139     0524  0080               	movwf	0
  3140     0525                     l2205:
  3141     0525  3001               	movlw	1
  3142     0526  00AF               	movwf	??_sprintf
  3143     0527  082F               	movf	??_sprintf,w
  3144     0528  07BE               	addwf	sprintf@sp,f
  3145     0529                     l2207:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  3148     0529  30FF               	movlw	255
  3149     052A  07BB               	addwf	sprintf@width,f
  3150     052B  1803               	skipnc
  3151     052C  0ABC               	incf	sprintf@width+1,f
  3152     052D  30FF               	movlw	255
  3153     052E  07BC               	addwf	sprintf@width+1,f
  3154     052F  0A3B               	incf	sprintf@width,w
  3155     0530  1D03               	skipz
  3156     0531  2D36               	goto	u1691
  3157     0532  0A3C               	incf	sprintf@width+1,w
  3158     0533  1D03               	btfss	3,2
  3159     0534  2D36               	goto	u1691
  3160     0535  2D37               	goto	u1690
  3161     0536                     u1691:
  3162     0536  2D20               	goto	l2203
  3163     0537                     u1690:
  3164     0537  2D51               	goto	l2215
  3165     0538                     l2209:
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  3168     0538  0838               	movf	sprintf@cp+1,w
  3169     0539  00FF               	movwf	btemp+1
  3170     053A  0837               	movf	sprintf@cp,w
  3171     053B  0084               	movwf	4
  3172     053C  120A  118A  2712  120A  118A  	fcall	stringtab
  3173     0541  00AF               	movwf	??_sprintf
  3174     0542  083E               	movf	sprintf@sp,w
  3175     0543  0084               	movwf	4
  3176     0544  082F               	movf	??_sprintf,w
  3177     0545  1383               	bcf	3,7	;select IRP bank0
  3178     0546  0080               	movwf	0
  3179     0547                     l2211:
  3180     0547  3001               	movlw	1
  3181     0548  07B7               	addwf	sprintf@cp,f
  3182     0549  1803               	skipnc
  3183     054A  0AB8               	incf	sprintf@cp+1,f
  3184     054B  3000               	movlw	0
  3185     054C  07B8               	addwf	sprintf@cp+1,f
  3186     054D                     l2213:
  3187     054D  3001               	movlw	1
  3188     054E  00AF               	movwf	??_sprintf
  3189     054F  082F               	movf	??_sprintf,w
  3190     0550  07BE               	addwf	sprintf@sp,f
  3191     0551                     l2215:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  3194     0551  3001               	movlw	1
  3195     0552  02B9               	subwf	sprintf@len,f
  3196     0553  3000               	movlw	0
  3197     0554  1C03               	skipc
  3198     0555  03BA               	decf	sprintf@len+1,f
  3199     0556  02BA               	subwf	sprintf@len+1,f
  3200     0557  0A39               	incf	sprintf@len,w
  3201     0558  1D03               	skipz
  3202     0559  2D5E               	goto	u1701
  3203     055A  0A3A               	incf	sprintf@len+1,w
  3204     055B  1D03               	btfss	3,2
  3205     055C  2D5E               	goto	u1701
  3206     055D  2D5F               	goto	u1700
  3207     055E                     u1701:
  3208     055E  2D38               	goto	l2209
  3209     055F                     u1700:
  3210     055F  2E51               	goto	l2273
  3211     0560                     l2217:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  3214     0560  30C0               	movlw	192
  3215     0561  00AF               	movwf	??_sprintf
  3216     0562  082F               	movf	??_sprintf,w
  3217     0563  04B2               	iorwf	sprintf@flag,f
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  3220     0564  2D84               	goto	l2223
  3221     0565                     l2221:
  3222     0565  3001               	movlw	1
  3223     0566  1283               	bcf	3,5	;RP0=0, select bank0
  3224     0567  1303               	bcf	3,6	;RP1=0, select bank0
  3225     0568  07A6               	addwf	sprintf@f,f
  3226     0569  30FF               	movlw	-1
  3227     056A  0726               	addwf	sprintf@f,w
  3228     056B  0084               	movwf	4
  3229     056C  120A  118A  271C  120A  118A  	fcall	stringdir
  3230     0571  00BD               	movwf	sprintf@c
  3231     0572  00AF               	movwf	??_sprintf
  3232     0573  01B0               	clrf	??_sprintf+1
  3233                           
  3234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3235                           ; Switch size 1, requested type "simple"
  3236                           ; Number of cases is 1, Range of values is 0 to 0
  3237                           ; switch strategies available:
  3238                           ; Name         Instructions Cycles
  3239                           ; simple_byte            4     3 (average)
  3240                           ; direct_byte           11     8 (fixed)
  3241                           ; jumptable            260     6 (fixed)
  3242                           ;	Chosen strategy is simple_byte
  3243     0574  0830               	movf	??_sprintf+1,w
  3244     0575  3A00               	xorlw	0	; case 0
  3245     0576  1903               	skipnz
  3246     0577  2D79               	goto	l2691
  3247     0578  2E51               	goto	l2273
  3248     0579                     l2691:
  3249                           
  3250                           ; Switch size 1, requested type "simple"
  3251                           ; Number of cases is 3, Range of values is 0 to 117
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte           10     6 (average)
  3255                           ; jumptable            260     6 (fixed)
  3256                           ;	Chosen strategy is simple_byte
  3257     0579  082F               	movf	??_sprintf,w
  3258     057A  3A00               	xorlw	0	; case 0
  3259     057B  1903               	skipnz
  3260     057C  2E61               	goto	l2275
  3261     057D  3A73               	xorlw	115	; case 115
  3262     057E  1903               	skipnz
  3263     057F  2CDD               	goto	l2183
  3264     0580  3A06               	xorlw	6	; case 117
  3265     0581  1903               	skipnz
  3266     0582  2D60               	goto	l2217
  3267     0583  2E51               	goto	l2273
  3268     0584                     l2223:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3271     0584  0836               	movf	sprintf@ap,w
  3272     0585  0084               	movwf	4
  3273     0586  1383               	bcf	3,7	;select IRP bank0
  3274     0587  0800               	movf	0,w
  3275     0588  00B3               	movwf	sprintf@val
  3276     0589  0A84               	incf	4,f
  3277     058A  0800               	movf	0,w
  3278     058B  00B4               	movwf	sprintf@val+1
  3279     058C                     l2225:
  3280     058C  3002               	movlw	2
  3281     058D  00AF               	movwf	??_sprintf
  3282     058E  082F               	movf	??_sprintf,w
  3283     058F  07B6               	addwf	sprintf@ap,f
  3284     0590                     l2227:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3287     0590  01BD               	clrf	sprintf@c
  3288     0591  0ABD               	incf	sprintf@c,f
  3289     0592                     l2233:
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3292     0592  083D               	movf	sprintf@c,w
  3293     0593  00AF               	movwf	??_sprintf
  3294     0594  072F               	addwf	??_sprintf,w
  3295     0595  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3296     0596  0084               	movwf	4
  3297     0597  120A  118A  271C  120A  118A  	fcall	stringdir
  3298     059C  00B0               	movwf	??_sprintf+1
  3299     059D  120A  118A  271C  120A  118A  	fcall	stringdir
  3300     05A2  00B1               	movwf	??_sprintf+2
  3301     05A3  0831               	movf	??_sprintf+2,w
  3302     05A4  0234               	subwf	sprintf@val+1,w
  3303     05A5  1D03               	skipz
  3304     05A6  2DA9               	goto	u1715
  3305     05A7  0830               	movf	??_sprintf+1,w
  3306     05A8  0233               	subwf	sprintf@val,w
  3307     05A9                     u1715:
  3308     05A9  1803               	skipnc
  3309     05AA  2DAC               	goto	u1711
  3310     05AB  2DAD               	goto	u1710
  3311     05AC                     u1711:
  3312     05AC  2DAE               	goto	l2237
  3313     05AD                     u1710:
  3314     05AD  2DB8               	goto	l2239
  3315     05AE                     l2237:
  3316     05AE  3001               	movlw	1
  3317     05AF  00AF               	movwf	??_sprintf
  3318     05B0  082F               	movf	??_sprintf,w
  3319     05B1  07BD               	addwf	sprintf@c,f
  3320     05B2  3005               	movlw	5
  3321     05B3  063D               	xorwf	sprintf@c,w
  3322     05B4  1D03               	btfss	3,2
  3323     05B5  2DB7               	goto	u1721
  3324     05B6  2DB8               	goto	u1720
  3325     05B7                     u1721:
  3326     05B7  2D92               	goto	l2233
  3327     05B8                     u1720:
  3328     05B8                     l2239:
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3331     05B8  083C               	movf	sprintf@width+1,w
  3332     05B9  3A80               	xorlw	128
  3333     05BA  3C80               	sublw	128
  3334     05BB  1D03               	skipz
  3335     05BC  2DBF               	goto	u1735
  3336     05BD  083B               	movf	sprintf@width,w
  3337     05BE  023D               	subwf	sprintf@c,w
  3338     05BF                     u1735:
  3339     05BF  1803               	skipnc
  3340     05C0  2DC2               	goto	u1731
  3341     05C1  2DC3               	goto	u1730
  3342     05C2                     u1731:
  3343     05C2  2DCF               	goto	l2243
  3344     05C3                     u1730:
  3345     05C3                     l2241:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3348     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3349     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3350     05C5  083D               	movf	sprintf@c,w
  3351     05C6  00AF               	movwf	??_sprintf
  3352     05C7  01B0               	clrf	??_sprintf+1
  3353     05C8  082F               	movf	??_sprintf,w
  3354     05C9  02BB               	subwf	sprintf@width,f
  3355     05CA  0830               	movf	??_sprintf+1,w
  3356     05CB  1C03               	skipc
  3357     05CC  03BC               	decf	sprintf@width+1,f
  3358     05CD  02BC               	subwf	sprintf@width+1,f
  3359     05CE  2DD3               	goto	l2245
  3360     05CF                     l2243:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3363     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3364     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3365     05D1  01BB               	clrf	sprintf@width
  3366     05D2  01BC               	clrf	sprintf@width+1
  3367     05D3                     l2245:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3370     05D3  1D32               	btfss	sprintf@flag,2
  3371     05D4  2DD6               	goto	u1741
  3372     05D5  2DD7               	goto	u1740
  3373     05D6                     u1741:
  3374     05D6  2DF3               	goto	l2255
  3375     05D7                     u1740:
  3376     05D7                     l2247:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3379     05D7  083B               	movf	sprintf@width,w
  3380     05D8  043C               	iorwf	sprintf@width+1,w
  3381     05D9  1903               	btfsc	3,2
  3382     05DA  2DDC               	goto	u1751
  3383     05DB  2DDD               	goto	u1750
  3384     05DC                     u1751:
  3385     05DC  2E0E               	goto	l2263
  3386     05DD                     u1750:
  3387     05DD                     l2249:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3390     05DD  083E               	movf	sprintf@sp,w
  3391     05DE  0084               	movwf	4
  3392     05DF  3030               	movlw	48
  3393     05E0  1383               	bcf	3,7	;select IRP bank0
  3394     05E1  0080               	movwf	0
  3395     05E2                     l2251:
  3396     05E2  3001               	movlw	1
  3397     05E3  00AF               	movwf	??_sprintf
  3398     05E4  082F               	movf	??_sprintf,w
  3399     05E5  07BE               	addwf	sprintf@sp,f
  3400     05E6                     l2253:
  3401     05E6  30FF               	movlw	255
  3402     05E7  07BB               	addwf	sprintf@width,f
  3403     05E8  1803               	skipnc
  3404     05E9  0ABC               	incf	sprintf@width+1,f
  3405     05EA  30FF               	movlw	255
  3406     05EB  07BC               	addwf	sprintf@width+1,f
  3407     05EC  083B               	movf	sprintf@width,w
  3408     05ED  043C               	iorwf	sprintf@width+1,w
  3409     05EE  1D03               	btfss	3,2
  3410     05EF  2DF1               	goto	u1761
  3411     05F0  2DF2               	goto	u1760
  3412     05F1                     u1761:
  3413     05F1  2DDD               	goto	l2249
  3414     05F2                     u1760:
  3415     05F2  2E0E               	goto	l2263
  3416     05F3                     l2255:
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3419     05F3  083B               	movf	sprintf@width,w
  3420     05F4  043C               	iorwf	sprintf@width+1,w
  3421     05F5  1903               	btfsc	3,2
  3422     05F6  2DF8               	goto	u1771
  3423     05F7  2DF9               	goto	u1770
  3424     05F8                     u1771:
  3425     05F8  2E0E               	goto	l2263
  3426     05F9                     u1770:
  3427     05F9                     l2257:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3430     05F9  083E               	movf	sprintf@sp,w
  3431     05FA  0084               	movwf	4
  3432     05FB  3020               	movlw	32
  3433     05FC  1383               	bcf	3,7	;select IRP bank0
  3434     05FD  0080               	movwf	0
  3435     05FE                     l2259:
  3436     05FE  3001               	movlw	1
  3437     05FF  00AF               	movwf	??_sprintf
  3438     0600  082F               	movf	??_sprintf,w
  3439     0601  07BE               	addwf	sprintf@sp,f
  3440     0602                     l2261:
  3441     0602  30FF               	movlw	255
  3442     0603  07BB               	addwf	sprintf@width,f
  3443     0604  1803               	skipnc
  3444     0605  0ABC               	incf	sprintf@width+1,f
  3445     0606  30FF               	movlw	255
  3446     0607  07BC               	addwf	sprintf@width+1,f
  3447     0608  083B               	movf	sprintf@width,w
  3448     0609  043C               	iorwf	sprintf@width+1,w
  3449     060A  1D03               	btfss	3,2
  3450     060B  2E0D               	goto	u1781
  3451     060C  2E0E               	goto	u1780
  3452     060D                     u1781:
  3453     060D  2DF9               	goto	l2257
  3454     060E                     u1780:
  3455     060E                     l2263:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3458     060E  083D               	movf	sprintf@c,w
  3459     060F  00B5               	movwf	sprintf@prec
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3462     0610  2E48               	goto	l2271
  3463     0611                     l2265:
  3464                           
  3465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3466     0611  300A               	movlw	10
  3467     0612  00A0               	movwf	___lwmod@divisor
  3468     0613  3000               	movlw	0
  3469     0614  00A1               	movwf	___lwmod@divisor+1
  3470     0615  0835               	movf	sprintf@prec,w
  3471     0616  00AF               	movwf	??_sprintf
  3472     0617  072F               	addwf	??_sprintf,w
  3473     0618  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3474     0619  0084               	movwf	4
  3475     061A  120A  118A  271C  120A  118A  	fcall	stringdir
  3476     061F  00F3               	movwf	___lwdiv@divisor
  3477     0620  120A  118A  271C  120A  118A  	fcall	stringdir
  3478     0625  00F4               	movwf	___lwdiv@divisor+1
  3479     0626  0834               	movf	sprintf@val+1,w
  3480     0627  00F6               	movwf	___lwdiv@dividend+1
  3481     0628  0833               	movf	sprintf@val,w
  3482     0629  00F5               	movwf	___lwdiv@dividend
  3483     062A  120A  118A  27BC  120A  118A  	fcall	___lwdiv
  3484     062F  0874               	movf	?___lwdiv+1,w
  3485     0630  1283               	bcf	3,5	;RP0=0, select bank0
  3486     0631  1303               	bcf	3,6	;RP1=0, select bank0
  3487     0632  00A3               	movwf	___lwmod@dividend+1
  3488     0633  0873               	movf	?___lwdiv,w
  3489     0634  00A2               	movwf	___lwmod@dividend
  3490     0635  120A  158A  251D  120A  118A  	fcall	___lwmod
  3491     063A  1283               	bcf	3,5	;RP0=0, select bank0
  3492     063B  1303               	bcf	3,6	;RP1=0, select bank0
  3493     063C  0820               	movf	?___lwmod,w
  3494     063D  3E30               	addlw	48
  3495     063E  00BD               	movwf	sprintf@c
  3496     063F                     l2267:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3499     063F  083E               	movf	sprintf@sp,w
  3500     0640  0084               	movwf	4
  3501     0641  083D               	movf	sprintf@c,w
  3502     0642  1383               	bcf	3,7	;select IRP bank0
  3503     0643  0080               	movwf	0
  3504     0644                     l2269:
  3505     0644  3001               	movlw	1
  3506     0645  00AF               	movwf	??_sprintf
  3507     0646  082F               	movf	??_sprintf,w
  3508     0647  07BE               	addwf	sprintf@sp,f
  3509     0648                     l2271:
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3512     0648  30FF               	movlw	255
  3513     0649  00AF               	movwf	??_sprintf
  3514     064A  082F               	movf	??_sprintf,w
  3515     064B  07B5               	addwf	sprintf@prec,f
  3516     064C  0A35               	incf	sprintf@prec,w
  3517     064D  1D03               	btfss	3,2
  3518     064E  2E50               	goto	u1791
  3519     064F  2E51               	goto	u1790
  3520     0650                     u1791:
  3521     0650  2E11               	goto	l2265
  3522     0651                     u1790:
  3523     0651                     l2273:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3526     0651  3001               	movlw	1
  3527     0652  07A6               	addwf	sprintf@f,f
  3528     0653  30FF               	movlw	-1
  3529     0654  0726               	addwf	sprintf@f,w
  3530     0655  0084               	movwf	4
  3531     0656  120A  118A  271C  120A  118A  	fcall	stringdir
  3532     065B  00BD               	movwf	sprintf@c
  3533     065C  083D               	movf	sprintf@c,w
  3534     065D  1D03               	btfss	3,2
  3535     065E  2E60               	goto	u1801
  3536     065F  2E61               	goto	u1800
  3537     0660                     u1801:
  3538     0660  2C60               	goto	l2157
  3539     0661                     u1800:
  3540     0661                     l2275:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3543     0661  083E               	movf	sprintf@sp,w
  3544     0662  0084               	movwf	4
  3545     0663  1383               	bcf	3,7	;select IRP bank0
  3546     0664  0180               	clrf	0
  3547     0665                     l506:
  3548     0665  0008               	return
  3549     0666                     __end_of_sprintf:
  3550                           
  3551                           	psect	text2
  3552     0B60                     __ptext2:	
  3553 ;; *************** function _isdigit *****************
  3554 ;; Defined at:
  3555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  c               1    wreg     unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  c               1    4[COMMON] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;		None               void
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         0       0       0       0       0
  3570 ;;      Locals:         2       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0
  3572 ;;      Totals:         2       0       0       0       0
  3573 ;;Total ram usage:        2 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; Hardware stack levels required when called: 1
  3576 ;; This function calls:
  3577 ;;		Nothing
  3578 ;; This function is called by:
  3579 ;;		_sprintf
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583     0B60                     _isdigit:	
  3584                           ;psect for function _isdigit
  3585                           
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3589                           ;isdigit@c stored from wreg
  3590     0B60  00F4               	movwf	isdigit@c
  3591     0B61                     l2051:
  3592     0B61  01F3               	clrf	_isdigit$1087
  3593     0B62                     l2053:
  3594     0B62  303A               	movlw	58
  3595     0B63  0274               	subwf	isdigit@c,w
  3596     0B64  1803               	skipnc
  3597     0B65  2B67               	goto	u1441
  3598     0B66  2B68               	goto	u1440
  3599     0B67                     u1441:
  3600     0B67  2B70               	goto	l2059
  3601     0B68                     u1440:
  3602     0B68                     l2055:
  3603     0B68  3030               	movlw	48
  3604     0B69  0274               	subwf	isdigit@c,w
  3605     0B6A  1C03               	skipc
  3606     0B6B  2B6D               	goto	u1451
  3607     0B6C  2B6E               	goto	u1450
  3608     0B6D                     u1451:
  3609     0B6D  2B70               	goto	l2059
  3610     0B6E                     u1450:
  3611     0B6E                     l2057:
  3612     0B6E  01F3               	clrf	_isdigit$1087
  3613     0B6F  0AF3               	incf	_isdigit$1087,f
  3614     0B70                     l2059:
  3615     0B70  0C73               	rrf	_isdigit$1087,w
  3616     0B71                     l963:
  3617     0B71  0008               	return
  3618     0B72                     __end_of_isdigit:
  3619                           
  3620                           	psect	text3
  3621     0C5A                     __ptext3:	
  3622 ;; *************** function ___wmul *****************
  3623 ;; Defined at:
  3624 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  multiplier      2    3[COMMON] unsigned int 
  3627 ;;  multiplicand    2    5[COMMON] unsigned int 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  product         2    7[COMMON] unsigned int 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2    3[COMMON] unsigned int 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3639 ;;      Params:         4       0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0
  3642 ;;      Totals:         6       0       0       0       0
  3643 ;;Total ram usage:        6 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_sprintf
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653     0C5A                     ___wmul:	
  3654                           ;psect for function ___wmul
  3655                           
  3656     0C5A                     l2063:	
  3657                           ;incstack = 0
  3658                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3659                           
  3660     0C5A  01F7               	clrf	___wmul@product
  3661     0C5B  01F8               	clrf	___wmul@product+1
  3662     0C5C                     l2065:
  3663     0C5C  1C73               	btfss	___wmul@multiplier,0
  3664     0C5D  2C5F               	goto	u1461
  3665     0C5E  2C60               	goto	u1460
  3666     0C5F                     u1461:
  3667     0C5F  2C66               	goto	l510
  3668     0C60                     u1460:
  3669     0C60                     l2067:
  3670     0C60  0875               	movf	___wmul@multiplicand,w
  3671     0C61  07F7               	addwf	___wmul@product,f
  3672     0C62  1803               	skipnc
  3673     0C63  0AF8               	incf	___wmul@product+1,f
  3674     0C64  0876               	movf	___wmul@multiplicand+1,w
  3675     0C65  07F8               	addwf	___wmul@product+1,f
  3676     0C66                     l510:
  3677     0C66  3001               	movlw	1
  3678     0C67                     u1475:
  3679     0C67  1003               	clrc
  3680     0C68  0DF5               	rlf	___wmul@multiplicand,f
  3681     0C69  0DF6               	rlf	___wmul@multiplicand+1,f
  3682     0C6A  3EFF               	addlw	-1
  3683     0C6B  1D03               	skipz
  3684     0C6C  2C67               	goto	u1475
  3685     0C6D                     l2069:
  3686     0C6D  3001               	movlw	1
  3687     0C6E                     u1485:
  3688     0C6E  1003               	clrc
  3689     0C6F  0CF4               	rrf	___wmul@multiplier+1,f
  3690     0C70  0CF3               	rrf	___wmul@multiplier,f
  3691     0C71  3EFF               	addlw	-1
  3692     0C72  1D03               	skipz
  3693     0C73  2C6E               	goto	u1485
  3694     0C74                     l2071:
  3695     0C74  0873               	movf	___wmul@multiplier,w
  3696     0C75  0474               	iorwf	___wmul@multiplier+1,w
  3697     0C76  1D03               	btfss	3,2
  3698     0C77  2C79               	goto	u1491
  3699     0C78  2C7A               	goto	u1490
  3700     0C79                     u1491:
  3701     0C79  2C5C               	goto	l2065
  3702     0C7A                     u1490:
  3703     0C7A                     l2073:
  3704     0C7A  0878               	movf	___wmul@product+1,w
  3705     0C7B  00F4               	movwf	?___wmul+1
  3706     0C7C  0877               	movf	___wmul@product,w
  3707     0C7D  00F3               	movwf	?___wmul
  3708     0C7E                     l512:
  3709     0C7E  0008               	return
  3710     0C7F                     __end_of___wmul:
  3711                           
  3712                           	psect	text4
  3713     0D1D                     __ptext4:	
  3714 ;; *************** function ___lwmod *****************
  3715 ;; Defined at:
  3716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  divisor         2    0[BANK0 ] unsigned int 
  3719 ;;  dividend        2    2[BANK0 ] unsigned int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  counter         1    5[BANK0 ] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  2    0[BANK0 ] unsigned int 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3731 ;;      Params:         0       4       0       0       0
  3732 ;;      Locals:         0       1       0       0       0
  3733 ;;      Temps:          0       1       0       0       0
  3734 ;;      Totals:         0       6       0       0       0
  3735 ;;Total ram usage:        6 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_sprintf
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745     0D1D                     ___lwmod:	
  3746                           ;psect for function ___lwmod
  3747                           
  3748     0D1D                     l2103:	
  3749                           ;incstack = 0
  3750                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3751                           
  3752     0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  3753     0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  3754     0D1F  0820               	movf	___lwmod@divisor,w
  3755     0D20  0421               	iorwf	___lwmod@divisor+1,w
  3756     0D21  1903               	btfsc	3,2
  3757     0D22  2D24               	goto	u1571
  3758     0D23  2D25               	goto	u1570
  3759     0D24                     u1571:
  3760     0D24  2D54               	goto	l2121
  3761     0D25                     u1570:
  3762     0D25                     l2105:
  3763     0D25  01A5               	clrf	___lwmod@counter
  3764     0D26  0AA5               	incf	___lwmod@counter,f
  3765     0D27  2D33               	goto	l2111
  3766     0D28                     l2107:
  3767     0D28  3001               	movlw	1
  3768     0D29                     u1585:
  3769     0D29  1003               	clrc
  3770     0D2A  0DA0               	rlf	___lwmod@divisor,f
  3771     0D2B  0DA1               	rlf	___lwmod@divisor+1,f
  3772     0D2C  3EFF               	addlw	-1
  3773     0D2D  1D03               	skipz
  3774     0D2E  2D29               	goto	u1585
  3775     0D2F                     l2109:
  3776     0D2F  3001               	movlw	1
  3777     0D30  00A4               	movwf	??___lwmod
  3778     0D31  0824               	movf	??___lwmod,w
  3779     0D32  07A5               	addwf	___lwmod@counter,f
  3780     0D33                     l2111:
  3781     0D33  1FA1               	btfss	___lwmod@divisor+1,7
  3782     0D34  2D36               	goto	u1591
  3783     0D35  2D37               	goto	u1590
  3784     0D36                     u1591:
  3785     0D36  2D28               	goto	l2107
  3786     0D37                     u1590:
  3787     0D37                     l2113:
  3788     0D37  0821               	movf	___lwmod@divisor+1,w
  3789     0D38  0223               	subwf	___lwmod@dividend+1,w
  3790     0D39  1D03               	skipz
  3791     0D3A  2D3D               	goto	u1605
  3792     0D3B  0820               	movf	___lwmod@divisor,w
  3793     0D3C  0222               	subwf	___lwmod@dividend,w
  3794     0D3D                     u1605:
  3795     0D3D  1C03               	skipc
  3796     0D3E  2D40               	goto	u1601
  3797     0D3F  2D41               	goto	u1600
  3798     0D40                     u1601:
  3799     0D40  2D47               	goto	l2117
  3800     0D41                     u1600:
  3801     0D41                     l2115:
  3802     0D41  0820               	movf	___lwmod@divisor,w
  3803     0D42  02A2               	subwf	___lwmod@dividend,f
  3804     0D43  0821               	movf	___lwmod@divisor+1,w
  3805     0D44  1C03               	skipc
  3806     0D45  03A3               	decf	___lwmod@dividend+1,f
  3807     0D46  02A3               	subwf	___lwmod@dividend+1,f
  3808     0D47                     l2117:
  3809     0D47  3001               	movlw	1
  3810     0D48                     u1615:
  3811     0D48  1003               	clrc
  3812     0D49  0CA1               	rrf	___lwmod@divisor+1,f
  3813     0D4A  0CA0               	rrf	___lwmod@divisor,f
  3814     0D4B  3EFF               	addlw	-1
  3815     0D4C  1D03               	skipz
  3816     0D4D  2D48               	goto	u1615
  3817     0D4E                     l2119:
  3818     0D4E  3001               	movlw	1
  3819     0D4F  02A5               	subwf	___lwmod@counter,f
  3820     0D50  1D03               	btfss	3,2
  3821     0D51  2D53               	goto	u1621
  3822     0D52  2D54               	goto	u1620
  3823     0D53                     u1621:
  3824     0D53  2D37               	goto	l2113
  3825     0D54                     u1620:
  3826     0D54                     l2121:
  3827     0D54  0823               	movf	___lwmod@dividend+1,w
  3828     0D55  00A1               	movwf	?___lwmod+1
  3829     0D56  0822               	movf	___lwmod@dividend,w
  3830     0D57  00A0               	movwf	?___lwmod
  3831     0D58                     l792:
  3832     0D58  0008               	return
  3833     0D59                     __end_of___lwmod:
  3834                           
  3835                           	psect	text5
  3836     07BC                     __ptext5:	
  3837 ;; *************** function ___lwdiv *****************
  3838 ;; Defined at:
  3839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  divisor         2    3[COMMON] unsigned int 
  3842 ;;  dividend        2    5[COMMON] unsigned int 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  quotient        2    8[COMMON] unsigned int 
  3845 ;;  counter         1   10[COMMON] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  2    3[COMMON] unsigned int 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         4       0       0       0       0
  3856 ;;      Locals:         3       0       0       0       0
  3857 ;;      Temps:          1       0       0       0       0
  3858 ;;      Totals:         8       0       0       0       0
  3859 ;;Total ram usage:        8 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_sprintf
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     07BC                     ___lwdiv:	
  3870                           ;psect for function ___lwdiv
  3871                           
  3872     07BC                     l2077:	
  3873                           ;incstack = 0
  3874                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3875                           
  3876     07BC  01F8               	clrf	___lwdiv@quotient
  3877     07BD  01F9               	clrf	___lwdiv@quotient+1
  3878     07BE                     l2079:
  3879     07BE  0873               	movf	___lwdiv@divisor,w
  3880     07BF  0474               	iorwf	___lwdiv@divisor+1,w
  3881     07C0  1903               	btfsc	3,2
  3882     07C1  2FC3               	goto	u1501
  3883     07C2  2FC4               	goto	u1500
  3884     07C3                     u1501:
  3885     07C3  2FFB               	goto	l2099
  3886     07C4                     u1500:
  3887     07C4                     l2081:
  3888     07C4  01FA               	clrf	___lwdiv@counter
  3889     07C5  0AFA               	incf	___lwdiv@counter,f
  3890     07C6  2FD2               	goto	l2087
  3891     07C7                     l2083:
  3892     07C7  3001               	movlw	1
  3893     07C8                     u1515:
  3894     07C8  1003               	clrc
  3895     07C9  0DF3               	rlf	___lwdiv@divisor,f
  3896     07CA  0DF4               	rlf	___lwdiv@divisor+1,f
  3897     07CB  3EFF               	addlw	-1
  3898     07CC  1D03               	skipz
  3899     07CD  2FC8               	goto	u1515
  3900     07CE                     l2085:
  3901     07CE  3001               	movlw	1
  3902     07CF  00F7               	movwf	??___lwdiv
  3903     07D0  0877               	movf	??___lwdiv,w
  3904     07D1  07FA               	addwf	___lwdiv@counter,f
  3905     07D2                     l2087:
  3906     07D2  1FF4               	btfss	___lwdiv@divisor+1,7
  3907     07D3  2FD5               	goto	u1521
  3908     07D4  2FD6               	goto	u1520
  3909     07D5                     u1521:
  3910     07D5  2FC7               	goto	l2083
  3911     07D6                     u1520:
  3912     07D6                     l2089:
  3913     07D6  3001               	movlw	1
  3914     07D7                     u1535:
  3915     07D7  1003               	clrc
  3916     07D8  0DF8               	rlf	___lwdiv@quotient,f
  3917     07D9  0DF9               	rlf	___lwdiv@quotient+1,f
  3918     07DA  3EFF               	addlw	-1
  3919     07DB  1D03               	skipz
  3920     07DC  2FD7               	goto	u1535
  3921     07DD  0874               	movf	___lwdiv@divisor+1,w
  3922     07DE  0276               	subwf	___lwdiv@dividend+1,w
  3923     07DF  1D03               	skipz
  3924     07E0  2FE3               	goto	u1545
  3925     07E1  0873               	movf	___lwdiv@divisor,w
  3926     07E2  0275               	subwf	___lwdiv@dividend,w
  3927     07E3                     u1545:
  3928     07E3  1C03               	skipc
  3929     07E4  2FE6               	goto	u1541
  3930     07E5  2FE7               	goto	u1540
  3931     07E6                     u1541:
  3932     07E6  2FEE               	goto	l2095
  3933     07E7                     u1540:
  3934     07E7                     l2091:
  3935     07E7  0873               	movf	___lwdiv@divisor,w
  3936     07E8  02F5               	subwf	___lwdiv@dividend,f
  3937     07E9  0874               	movf	___lwdiv@divisor+1,w
  3938     07EA  1C03               	skipc
  3939     07EB  03F6               	decf	___lwdiv@dividend+1,f
  3940     07EC  02F6               	subwf	___lwdiv@dividend+1,f
  3941     07ED                     l2093:
  3942     07ED  1478               	bsf	___lwdiv@quotient,0
  3943     07EE                     l2095:
  3944     07EE  3001               	movlw	1
  3945     07EF                     u1555:
  3946     07EF  1003               	clrc
  3947     07F0  0CF4               	rrf	___lwdiv@divisor+1,f
  3948     07F1  0CF3               	rrf	___lwdiv@divisor,f
  3949     07F2  3EFF               	addlw	-1
  3950     07F3  1D03               	skipz
  3951     07F4  2FEF               	goto	u1555
  3952     07F5                     l2097:
  3953     07F5  3001               	movlw	1
  3954     07F6  02FA               	subwf	___lwdiv@counter,f
  3955     07F7  1D03               	btfss	3,2
  3956     07F8  2FFA               	goto	u1561
  3957     07F9  2FFB               	goto	u1560
  3958     07FA                     u1561:
  3959     07FA  2FD6               	goto	l2089
  3960     07FB                     u1560:
  3961     07FB                     l2099:
  3962     07FB  0879               	movf	___lwdiv@quotient+1,w
  3963     07FC  00F4               	movwf	?___lwdiv+1
  3964     07FD  0878               	movf	___lwdiv@quotient,w
  3965     07FE  00F3               	movwf	?___lwdiv
  3966     07FF                     l782:
  3967     07FF  0008               	return
  3968     0800                     __end_of___lwdiv:
  3969                           
  3970                           	psect	text6
  3971     0CE5                     __ptext6:	
  3972 ;; *************** function _setup *****************
  3973 ;; Defined at:
  3974 ;;		line 307 in file "main.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3988 ;;      Params:         0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0
  3991 ;;      Totals:         0       0       0       0       0
  3992 ;;Total ram usage:        0 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 3
  3995 ;; This function calls:
  3996 ;;		_I2C_Master_Init
  3997 ;;		_ioc_init
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     0CE5                     _setup:	
  4004                           ;psect for function _setup
  4005                           
  4006     0CE5                     l2125:	
  4007                           ;incstack = 0
  4008                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  4009                           
  4010                           
  4011                           ;main.c: 308:     ANSEL = 0;
  4012     0CE5  1683               	bsf	3,5	;RP0=1, select bank3
  4013     0CE6  1703               	bsf	3,6	;RP1=1, select bank3
  4014     0CE7  0188               	clrf	8	;volatile
  4015                           
  4016                           ;main.c: 309:     ANSELH = 0;
  4017     0CE8  0189               	clrf	9	;volatile
  4018                           
  4019                           ;main.c: 310:     TRISE = 0;
  4020     0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  4021     0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  4022     0CEB  0189               	clrf	9	;volatile
  4023                           
  4024                           ;main.c: 311:     TRISA = 0;
  4025     0CEC  0185               	clrf	5	;volatile
  4026                           
  4027                           ;main.c: 312:     TRISB = 0;
  4028     0CED  0186               	clrf	6	;volatile
  4029                           
  4030                           ;main.c: 313:     TRISD = 0;
  4031     0CEE  0188               	clrf	8	;volatile
  4032                           
  4033                           ;main.c: 314:     PORTB = 0;
  4034     0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  4035     0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  4036     0CF1  0186               	clrf	6	;volatile
  4037                           
  4038                           ;main.c: 315:     PORTD = 0;
  4039     0CF2  0188               	clrf	8	;volatile
  4040                           
  4041                           ;main.c: 316:     PORTA = 0;
  4042     0CF3  0185               	clrf	5	;volatile
  4043                           
  4044                           ;main.c: 317:     PORTE = 0;
  4045     0CF4  0189               	clrf	9	;volatile
  4046     0CF5                     l2127:
  4047                           
  4048                           ;main.c: 319:     ioc_init(0);
  4049     0CF5  3000               	movlw	0
  4050     0CF6  120A  158A  26B7  120A  158A  	fcall	_ioc_init
  4051     0CFB                     l2129:
  4052                           
  4053                           ;main.c: 320:     ioc_init(1);
  4054     0CFB  3001               	movlw	1
  4055     0CFC  120A  158A  26B7  120A  158A  	fcall	_ioc_init
  4056     0D01                     l2131:
  4057                           
  4058                           ;main.c: 321:     ioc_init(2);
  4059     0D01  3002               	movlw	2
  4060     0D02  120A  158A  26B7  120A  158A  	fcall	_ioc_init
  4061     0D07                     l2133:
  4062                           
  4063                           ;main.c: 324:     INTCONbits.GIE = 1;
  4064     0D07  178B               	bsf	11,7	;volatile
  4065     0D08                     l2135:
  4066                           
  4067                           ;main.c: 327:     OSCCONbits.IRCF = 0b111;
  4068     0D08  3070               	movlw	112
  4069     0D09  1683               	bsf	3,5	;RP0=1, select bank1
  4070     0D0A  1303               	bcf	3,6	;RP1=0, select bank1
  4071     0D0B  048F               	iorwf	15,f	;volatile
  4072     0D0C                     l2137:
  4073                           
  4074                           ;main.c: 328:     OSCCONbits.SCS = 1;
  4075     0D0C  140F               	bsf	15,0	;volatile
  4076     0D0D                     l2139:
  4077                           
  4078                           ;main.c: 329:     I2C_Master_Init(100000);
  4079     0D0D  3000               	movlw	0
  4080     0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  4081     0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  4082     0D10  00A9               	movwf	I2C_Master_Init@c+3
  4083     0D11  3001               	movlw	1
  4084     0D12  00A8               	movwf	I2C_Master_Init@c+2
  4085     0D13  3086               	movlw	134
  4086     0D14  00A7               	movwf	I2C_Master_Init@c+1
  4087     0D15  30A0               	movlw	160
  4088     0D16  00A6               	movwf	I2C_Master_Init@c
  4089     0D17  120A  158A  24AD  120A  158A  	fcall	_I2C_Master_Init
  4090     0D1C                     l186:
  4091     0D1C  0008               	return
  4092     0D1D                     __end_of_setup:
  4093                           
  4094                           	psect	text7
  4095     0EB7                     __ptext7:	
  4096 ;; *************** function _ioc_init *****************
  4097 ;; Defined at:
  4098 ;;		line 15 in file "INTERRUPT_Library.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  pin             1    wreg     unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  pin             1    3[COMMON] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         0       0       0       0       0
  4113 ;;      Locals:         1       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0
  4115 ;;      Totals:         1       0       0       0       0
  4116 ;;Total ram usage:        1 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_setup
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126     0EB7                     _ioc_init:	
  4127                           ;psect for function _ioc_init
  4128                           
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _ioc_init: [wreg+status,2+status,0]
  4132                           ;ioc_init@pin stored from wreg
  4133     0EB7  00F3               	movwf	ioc_init@pin
  4134     0EB8                     l1951:
  4135                           
  4136                           ;INTERRUPT_Library.c: 17:     OPTION_REGbits.nRBPU = 0;
  4137     0EB8  1683               	bsf	3,5	;RP0=1, select bank1
  4138     0EB9  1303               	bcf	3,6	;RP1=0, select bank1
  4139     0EBA  1381               	bcf	1,7	;volatile
  4140     0EBB                     l1953:
  4141                           
  4142                           ;INTERRUPT_Library.c: 19:     if (pin == 0){
  4143     0EBB  0873               	movf	ioc_init@pin,w
  4144     0EBC  1D03               	btfss	3,2
  4145     0EBD  2EBF               	goto	u1321
  4146     0EBE  2EC0               	goto	u1320
  4147     0EBF                     u1321:
  4148     0EBF  2EC4               	goto	l1957
  4149     0EC0                     u1320:
  4150     0EC0                     l1955:
  4151                           
  4152                           ;INTERRUPT_Library.c: 20:         TRISBbits.TRISB0 = 1;
  4153     0EC0  1406               	bsf	6,0	;volatile
  4154                           
  4155                           ;INTERRUPT_Library.c: 21:         WPUBbits.WPUB0 = 1;
  4156     0EC1  1415               	bsf	21,0	;volatile
  4157                           
  4158                           ;INTERRUPT_Library.c: 22:         IOCBbits.IOCB0 = 1;
  4159     0EC2  1416               	bsf	22,0	;volatile
  4160                           
  4161                           ;INTERRUPT_Library.c: 23:     }else if (pin == 1){
  4162     0EC3  2F09               	goto	l350
  4163     0EC4                     l1957:
  4164     0EC4  0373               	decf	ioc_init@pin,w
  4165     0EC5  1D03               	btfss	3,2
  4166     0EC6  2EC8               	goto	u1331
  4167     0EC7  2EC9               	goto	u1330
  4168     0EC8                     u1331:
  4169     0EC8  2ECD               	goto	l1961
  4170     0EC9                     u1330:
  4171     0EC9                     l1959:
  4172                           
  4173                           ;INTERRUPT_Library.c: 24:         TRISBbits.TRISB1 = 1;
  4174     0EC9  1486               	bsf	6,1	;volatile
  4175                           
  4176                           ;INTERRUPT_Library.c: 25:         WPUBbits.WPUB1 = 1;
  4177     0ECA  1495               	bsf	21,1	;volatile
  4178                           
  4179                           ;INTERRUPT_Library.c: 26:         IOCBbits.IOCB1 = 1;
  4180     0ECB  1496               	bsf	22,1	;volatile
  4181                           
  4182                           ;INTERRUPT_Library.c: 27:     }else if (pin == 2){
  4183     0ECC  2F09               	goto	l350
  4184     0ECD                     l1961:
  4185     0ECD  3002               	movlw	2
  4186     0ECE  0673               	xorwf	ioc_init@pin,w
  4187     0ECF  1D03               	btfss	3,2
  4188     0ED0  2ED2               	goto	u1341
  4189     0ED1  2ED3               	goto	u1340
  4190     0ED2                     u1341:
  4191     0ED2  2ED7               	goto	l1965
  4192     0ED3                     u1340:
  4193     0ED3                     l1963:
  4194                           
  4195                           ;INTERRUPT_Library.c: 28:         TRISBbits.TRISB2 = 1;
  4196     0ED3  1506               	bsf	6,2	;volatile
  4197                           
  4198                           ;INTERRUPT_Library.c: 29:         WPUBbits.WPUB2 = 1;
  4199     0ED4  1515               	bsf	21,2	;volatile
  4200                           
  4201                           ;INTERRUPT_Library.c: 30:         IOCBbits.IOCB2 = 1;
  4202     0ED5  1516               	bsf	22,2	;volatile
  4203                           
  4204                           ;INTERRUPT_Library.c: 31:     }else if (pin == 3){
  4205     0ED6  2F09               	goto	l350
  4206     0ED7                     l1965:
  4207     0ED7  3003               	movlw	3
  4208     0ED8  0673               	xorwf	ioc_init@pin,w
  4209     0ED9  1D03               	btfss	3,2
  4210     0EDA  2EDC               	goto	u1351
  4211     0EDB  2EDD               	goto	u1350
  4212     0EDC                     u1351:
  4213     0EDC  2EE1               	goto	l1969
  4214     0EDD                     u1350:
  4215     0EDD                     l1967:
  4216                           
  4217                           ;INTERRUPT_Library.c: 32:         TRISBbits.TRISB3 = 1;
  4218     0EDD  1586               	bsf	6,3	;volatile
  4219                           
  4220                           ;INTERRUPT_Library.c: 33:         WPUBbits.WPUB3 = 1;
  4221     0EDE  1595               	bsf	21,3	;volatile
  4222                           
  4223                           ;INTERRUPT_Library.c: 34:         IOCBbits.IOCB3 = 1;
  4224     0EDF  1596               	bsf	22,3	;volatile
  4225                           
  4226                           ;INTERRUPT_Library.c: 35:     }else if (pin == 4){
  4227     0EE0  2F09               	goto	l350
  4228     0EE1                     l1969:
  4229     0EE1  3004               	movlw	4
  4230     0EE2  0673               	xorwf	ioc_init@pin,w
  4231     0EE3  1D03               	btfss	3,2
  4232     0EE4  2EE6               	goto	u1361
  4233     0EE5  2EE7               	goto	u1360
  4234     0EE6                     u1361:
  4235     0EE6  2EEB               	goto	l1973
  4236     0EE7                     u1360:
  4237     0EE7                     l1971:
  4238                           
  4239                           ;INTERRUPT_Library.c: 36:         TRISBbits.TRISB4 = 1;
  4240     0EE7  1606               	bsf	6,4	;volatile
  4241                           
  4242                           ;INTERRUPT_Library.c: 37:         WPUBbits.WPUB4 = 1;
  4243     0EE8  1615               	bsf	21,4	;volatile
  4244                           
  4245                           ;INTERRUPT_Library.c: 38:         IOCBbits.IOCB4 = 1;
  4246     0EE9  1616               	bsf	22,4	;volatile
  4247                           
  4248                           ;INTERRUPT_Library.c: 39:     }else if (pin == 5){
  4249     0EEA  2F09               	goto	l350
  4250     0EEB                     l1973:
  4251     0EEB  3005               	movlw	5
  4252     0EEC  0673               	xorwf	ioc_init@pin,w
  4253     0EED  1D03               	btfss	3,2
  4254     0EEE  2EF0               	goto	u1371
  4255     0EEF  2EF1               	goto	u1370
  4256     0EF0                     u1371:
  4257     0EF0  2EF5               	goto	l1977
  4258     0EF1                     u1370:
  4259     0EF1                     l1975:
  4260                           
  4261                           ;INTERRUPT_Library.c: 40:         TRISBbits.TRISB5 = 1;
  4262     0EF1  1686               	bsf	6,5	;volatile
  4263                           
  4264                           ;INTERRUPT_Library.c: 41:         WPUBbits.WPUB5 = 1;
  4265     0EF2  1695               	bsf	21,5	;volatile
  4266                           
  4267                           ;INTERRUPT_Library.c: 42:         IOCBbits.IOCB5 = 1;
  4268     0EF3  1696               	bsf	22,5	;volatile
  4269                           
  4270                           ;INTERRUPT_Library.c: 43:     }else if (pin == 6){
  4271     0EF4  2F09               	goto	l350
  4272     0EF5                     l1977:
  4273     0EF5  3006               	movlw	6
  4274     0EF6  0673               	xorwf	ioc_init@pin,w
  4275     0EF7  1D03               	btfss	3,2
  4276     0EF8  2EFA               	goto	u1381
  4277     0EF9  2EFB               	goto	u1380
  4278     0EFA                     u1381:
  4279     0EFA  2EFF               	goto	l1981
  4280     0EFB                     u1380:
  4281     0EFB                     l1979:
  4282                           
  4283                           ;INTERRUPT_Library.c: 44:         TRISBbits.TRISB6 = 1;
  4284     0EFB  1706               	bsf	6,6	;volatile
  4285                           
  4286                           ;INTERRUPT_Library.c: 45:         WPUBbits.WPUB6 = 1;
  4287     0EFC  1715               	bsf	21,6	;volatile
  4288                           
  4289                           ;INTERRUPT_Library.c: 46:         IOCBbits.IOCB6 = 1;
  4290     0EFD  1716               	bsf	22,6	;volatile
  4291                           
  4292                           ;INTERRUPT_Library.c: 47:     }else if (pin == 7){
  4293     0EFE  2F09               	goto	l350
  4294     0EFF                     l1981:
  4295     0EFF  3007               	movlw	7
  4296     0F00  0673               	xorwf	ioc_init@pin,w
  4297     0F01  1D03               	btfss	3,2
  4298     0F02  2F04               	goto	u1391
  4299     0F03  2F05               	goto	u1390
  4300     0F04                     u1391:
  4301     0F04  2F09               	goto	l358
  4302     0F05                     u1390:
  4303     0F05                     l1983:
  4304                           
  4305                           ;INTERRUPT_Library.c: 48:         TRISBbits.TRISB7 = 1;
  4306     0F05  1786               	bsf	6,7	;volatile
  4307                           
  4308                           ;INTERRUPT_Library.c: 49:         WPUBbits.WPUB7 = 1;
  4309     0F06  1795               	bsf	21,7	;volatile
  4310                           
  4311                           ;INTERRUPT_Library.c: 50:         IOCBbits.IOCB7 = 1;
  4312     0F07  1796               	bsf	22,7	;volatile
  4313     0F08  2F09               	goto	l350
  4314     0F09                     l358:
  4315     0F09                     l350:
  4316                           
  4317                           ;INTERRUPT_Library.c: 52:     if (RBIE == 0){
  4318     0F09  198B               	btfsc	11,3	;volatile
  4319     0F0A  2F0C               	goto	u1401
  4320     0F0B  2F0D               	goto	u1400
  4321     0F0C                     u1401:
  4322     0F0C  2F0F               	goto	l365
  4323     0F0D                     u1400:
  4324     0F0D                     l1985:
  4325                           
  4326                           ;INTERRUPT_Library.c: 53:         INTCONbits.RBIF = 0;
  4327     0F0D  100B               	bcf	11,0	;volatile
  4328                           
  4329                           ;INTERRUPT_Library.c: 54:         INTCONbits.RBIE = 1;
  4330     0F0E  158B               	bsf	11,3	;volatile
  4331     0F0F                     l365:
  4332     0F0F  0008               	return
  4333     0F10                     __end_of_ioc_init:
  4334                           
  4335                           	psect	text8
  4336     0CAD                     __ptext8:	
  4337 ;; *************** function _I2C_Master_Init *****************
  4338 ;; Defined at:
  4339 ;;		line 16 in file "I2C.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  c               4    6[BANK0 ] const unsigned long 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, pclath, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4353 ;;      Params:         0       4       0       0       0
  4354 ;;      Locals:         0       0       0       0       0
  4355 ;;      Temps:          0       4       0       0       0
  4356 ;;      Totals:         0       8       0       0       0
  4357 ;;Total ram usage:        8 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 2
  4360 ;; This function calls:
  4361 ;;		___lldiv
  4362 ;; This function is called by:
  4363 ;;		_setup
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367     0CAD                     _I2C_Master_Init:	
  4368                           ;psect for function _I2C_Master_Init
  4369                           
  4370     0CAD                     l1987:	
  4371                           ;incstack = 0
  4372                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4373                           
  4374                           
  4375                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  4376     0CAD  3028               	movlw	40
  4377     0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  4378     0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  4379     0CB0  0094               	movwf	20	;volatile
  4380     0CB1                     l1989:
  4381                           
  4382                           ;I2C.c: 19:     SSPCON2 = 0;
  4383     0CB1  1683               	bsf	3,5	;RP0=1, select bank1
  4384     0CB2  1303               	bcf	3,6	;RP1=0, select bank1
  4385     0CB3  0191               	clrf	17	;volatile
  4386     0CB4                     l1991:
  4387                           
  4388                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  4389     0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  4390     0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  4391     0CB6  0826               	movf	I2C_Master_Init@c,w
  4392     0CB7  00AA               	movwf	??_I2C_Master_Init
  4393     0CB8  0827               	movf	I2C_Master_Init@c+1,w
  4394     0CB9  00AB               	movwf	??_I2C_Master_Init+1
  4395     0CBA  0828               	movf	I2C_Master_Init@c+2,w
  4396     0CBB  00AC               	movwf	??_I2C_Master_Init+2
  4397     0CBC  0829               	movf	I2C_Master_Init@c+3,w
  4398     0CBD  00AD               	movwf	??_I2C_Master_Init+3
  4399     0CBE  3002               	movlw	2
  4400     0CBF                     u1415:
  4401     0CBF  1003               	clrc
  4402     0CC0  0DAA               	rlf	??_I2C_Master_Init,f
  4403     0CC1  0DAB               	rlf	??_I2C_Master_Init+1,f
  4404     0CC2  0DAC               	rlf	??_I2C_Master_Init+2,f
  4405     0CC3  0DAD               	rlf	??_I2C_Master_Init+3,f
  4406     0CC4                     u1410:
  4407     0CC4  3EFF               	addlw	-1
  4408     0CC5  1D03               	skipz
  4409     0CC6  2CBF               	goto	u1415
  4410     0CC7  082D               	movf	??_I2C_Master_Init+3,w
  4411     0CC8  00F6               	movwf	___lldiv@divisor+3
  4412     0CC9  082C               	movf	??_I2C_Master_Init+2,w
  4413     0CCA  00F5               	movwf	___lldiv@divisor+2
  4414     0CCB  082B               	movf	??_I2C_Master_Init+1,w
  4415     0CCC  00F4               	movwf	___lldiv@divisor+1
  4416     0CCD  082A               	movf	??_I2C_Master_Init,w
  4417     0CCE  00F3               	movwf	___lldiv@divisor
  4418     0CCF  3000               	movlw	0
  4419     0CD0  00FA               	movwf	___lldiv@dividend+3
  4420     0CD1  307A               	movlw	122
  4421     0CD2  00F9               	movwf	___lldiv@dividend+2
  4422     0CD3  3012               	movlw	18
  4423     0CD4  00F8               	movwf	___lldiv@dividend+1
  4424     0CD5  3000               	movlw	0
  4425     0CD6  00F7               	movwf	___lldiv@dividend
  4426     0CD7  120A  158A  2710  120A  158A  	fcall	___lldiv
  4427     0CDC  0873               	movf	?___lldiv,w
  4428     0CDD  3EFF               	addlw	255
  4429     0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  4430     0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  4431     0CE0  0093               	movwf	19	;volatile
  4432     0CE1                     l1993:
  4433                           
  4434                           ;I2C.c: 21:     SSPSTAT = 0;
  4435     0CE1  0194               	clrf	20	;volatile
  4436     0CE2                     l1995:
  4437                           
  4438                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4439     0CE2  1587               	bsf	7,3	;volatile
  4440     0CE3                     l1997:
  4441                           
  4442                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4443     0CE3  1607               	bsf	7,4	;volatile
  4444     0CE4                     l215:
  4445     0CE4  0008               	return
  4446     0CE5                     __end_of_I2C_Master_Init:
  4447                           
  4448                           	psect	text9
  4449     0F10                     __ptext9:	
  4450 ;; *************** function ___lldiv *****************
  4451 ;; Defined at:
  4452 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  divisor         4    3[COMMON] unsigned long 
  4455 ;;  dividend        4    7[COMMON] unsigned long 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  quotient        4    1[BANK0 ] unsigned long 
  4458 ;;  counter         1    5[BANK0 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  4    3[COMMON] unsigned long 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4468 ;;      Params:         8       0       0       0       0
  4469 ;;      Locals:         0       5       0       0       0
  4470 ;;      Temps:          0       1       0       0       0
  4471 ;;      Totals:         8       6       0       0       0
  4472 ;;Total ram usage:       14 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_I2C_Master_Init
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0F10                     ___lldiv:	
  4483                           ;psect for function ___lldiv
  4484                           
  4485     0F10                     l1917:	
  4486                           ;incstack = 0
  4487                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4488                           
  4489     0F10  3000               	movlw	0
  4490     0F11  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0F12  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0F13  00A4               	movwf	___lldiv@quotient+3
  4493     0F14  3000               	movlw	0
  4494     0F15  00A3               	movwf	___lldiv@quotient+2
  4495     0F16  3000               	movlw	0
  4496     0F17  00A2               	movwf	___lldiv@quotient+1
  4497     0F18  3000               	movlw	0
  4498     0F19  00A1               	movwf	___lldiv@quotient
  4499     0F1A  0876               	movf	___lldiv@divisor+3,w
  4500     0F1B  0475               	iorwf	___lldiv@divisor+2,w
  4501     0F1C  0474               	iorwf	___lldiv@divisor+1,w
  4502     0F1D  0473               	iorwf	___lldiv@divisor,w
  4503     0F1E  1903               	skipnz
  4504     0F1F  2F21               	goto	u1251
  4505     0F20  2F22               	goto	u1250
  4506     0F21                     u1251:
  4507     0F21  2F6F               	goto	l1937
  4508     0F22                     u1250:
  4509     0F22                     l1919:
  4510     0F22  01A5               	clrf	___lldiv@counter
  4511     0F23  0AA5               	incf	___lldiv@counter,f
  4512     0F24  2F32               	goto	l1923
  4513     0F25                     l1921:
  4514     0F25  3001               	movlw	1
  4515     0F26  00A0               	movwf	??___lldiv
  4516     0F27                     u1265:
  4517     0F27  1003               	clrc
  4518     0F28  0DF3               	rlf	___lldiv@divisor,f
  4519     0F29  0DF4               	rlf	___lldiv@divisor+1,f
  4520     0F2A  0DF5               	rlf	___lldiv@divisor+2,f
  4521     0F2B  0DF6               	rlf	___lldiv@divisor+3,f
  4522     0F2C  0BA0               	decfsz	??___lldiv,f
  4523     0F2D  2F27               	goto	u1265
  4524     0F2E  3001               	movlw	1
  4525     0F2F  00A0               	movwf	??___lldiv
  4526     0F30  0820               	movf	??___lldiv,w
  4527     0F31  07A5               	addwf	___lldiv@counter,f
  4528     0F32                     l1923:
  4529     0F32  1FF6               	btfss	___lldiv@divisor+3,7
  4530     0F33  2F35               	goto	u1271
  4531     0F34  2F36               	goto	u1270
  4532     0F35                     u1271:
  4533     0F35  2F25               	goto	l1921
  4534     0F36                     u1270:
  4535     0F36                     l1925:
  4536     0F36  3001               	movlw	1
  4537     0F37  00A0               	movwf	??___lldiv
  4538     0F38                     u1285:
  4539     0F38  1003               	clrc
  4540     0F39  0DA1               	rlf	___lldiv@quotient,f
  4541     0F3A  0DA2               	rlf	___lldiv@quotient+1,f
  4542     0F3B  0DA3               	rlf	___lldiv@quotient+2,f
  4543     0F3C  0DA4               	rlf	___lldiv@quotient+3,f
  4544     0F3D  0BA0               	decfsz	??___lldiv,f
  4545     0F3E  2F38               	goto	u1285
  4546     0F3F                     l1927:
  4547     0F3F  0876               	movf	___lldiv@divisor+3,w
  4548     0F40  027A               	subwf	___lldiv@dividend+3,w
  4549     0F41  1D03               	skipz
  4550     0F42  2F4D               	goto	u1295
  4551     0F43  0875               	movf	___lldiv@divisor+2,w
  4552     0F44  0279               	subwf	___lldiv@dividend+2,w
  4553     0F45  1D03               	skipz
  4554     0F46  2F4D               	goto	u1295
  4555     0F47  0874               	movf	___lldiv@divisor+1,w
  4556     0F48  0278               	subwf	___lldiv@dividend+1,w
  4557     0F49  1D03               	skipz
  4558     0F4A  2F4D               	goto	u1295
  4559     0F4B  0873               	movf	___lldiv@divisor,w
  4560     0F4C  0277               	subwf	___lldiv@dividend,w
  4561     0F4D                     u1295:
  4562     0F4D  1C03               	skipc
  4563     0F4E  2F50               	goto	u1291
  4564     0F4F  2F51               	goto	u1290
  4565     0F50                     u1291:
  4566     0F50  2F60               	goto	l1933
  4567     0F51                     u1290:
  4568     0F51                     l1929:
  4569     0F51  0873               	movf	___lldiv@divisor,w
  4570     0F52  02F7               	subwf	___lldiv@dividend,f
  4571     0F53  0874               	movf	___lldiv@divisor+1,w
  4572     0F54  1C03               	skipc
  4573     0F55  0F74               	incfsz	___lldiv@divisor+1,w
  4574     0F56  02F8               	subwf	___lldiv@dividend+1,f
  4575     0F57  0875               	movf	___lldiv@divisor+2,w
  4576     0F58  1C03               	skipc
  4577     0F59  0F75               	incfsz	___lldiv@divisor+2,w
  4578     0F5A  02F9               	subwf	___lldiv@dividend+2,f
  4579     0F5B  0876               	movf	___lldiv@divisor+3,w
  4580     0F5C  1C03               	skipc
  4581     0F5D  0F76               	incfsz	___lldiv@divisor+3,w
  4582     0F5E  02FA               	subwf	___lldiv@dividend+3,f
  4583     0F5F                     l1931:
  4584     0F5F  1421               	bsf	___lldiv@quotient,0
  4585     0F60                     l1933:
  4586     0F60  3001               	movlw	1
  4587     0F61                     u1305:
  4588     0F61  1003               	clrc
  4589     0F62  0CF6               	rrf	___lldiv@divisor+3,f
  4590     0F63  0CF5               	rrf	___lldiv@divisor+2,f
  4591     0F64  0CF4               	rrf	___lldiv@divisor+1,f
  4592     0F65  0CF3               	rrf	___lldiv@divisor,f
  4593     0F66  3EFF               	addlw	-1
  4594     0F67  1D03               	skipz
  4595     0F68  2F61               	goto	u1305
  4596     0F69                     l1935:
  4597     0F69  3001               	movlw	1
  4598     0F6A  02A5               	subwf	___lldiv@counter,f
  4599     0F6B  1D03               	btfss	3,2
  4600     0F6C  2F6E               	goto	u1311
  4601     0F6D  2F6F               	goto	u1310
  4602     0F6E                     u1311:
  4603     0F6E  2F36               	goto	l1925
  4604     0F6F                     u1310:
  4605     0F6F                     l1937:
  4606     0F6F  0824               	movf	___lldiv@quotient+3,w
  4607     0F70  00F6               	movwf	?___lldiv+3
  4608     0F71  0823               	movf	___lldiv@quotient+2,w
  4609     0F72  00F5               	movwf	?___lldiv+2
  4610     0F73  0822               	movf	___lldiv@quotient+1,w
  4611     0F74  00F4               	movwf	?___lldiv+1
  4612     0F75  0821               	movf	___lldiv@quotient,w
  4613     0F76  00F3               	movwf	?___lldiv
  4614     0F77                     l546:
  4615     0F77  0008               	return
  4616     0F78                     __end_of___lldiv:
  4617                           
  4618                           	psect	text10
  4619     0B85                     __ptext10:	
  4620 ;; *************** function ___bmul *****************
  4621 ;; Defined at:
  4622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  multiplier      1    wreg     unsigned char 
  4625 ;;  multiplicand    1    3[COMMON] unsigned char 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;  multiplier      1    6[COMMON] unsigned char 
  4628 ;;  product         1    5[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      unsigned char 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2, status,0
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4638 ;;      Params:         1       0       0       0       0
  4639 ;;      Locals:         2       0       0       0       0
  4640 ;;      Temps:          1       0       0       0       0
  4641 ;;      Totals:         4       0       0       0       0
  4642 ;;Total ram usage:        4 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_main
  4649 ;;		_DS3231_Get_DayOfWeek
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653     0B85                     ___bmul:	
  4654                           ;psect for function ___bmul
  4655                           
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4659                           ;___bmul@multiplier stored from wreg
  4660     0B85  00F6               	movwf	___bmul@multiplier
  4661     0B86                     l2335:
  4662     0B86  01F5               	clrf	___bmul@product
  4663     0B87                     l2337:
  4664     0B87  1C76               	btfss	___bmul@multiplier,0
  4665     0B88  2B8A               	goto	u1841
  4666     0B89  2B8B               	goto	u1840
  4667     0B8A                     u1841:
  4668     0B8A  2B8F               	goto	l2341
  4669     0B8B                     u1840:
  4670     0B8B                     l2339:
  4671     0B8B  0873               	movf	___bmul@multiplicand,w
  4672     0B8C  00F4               	movwf	??___bmul
  4673     0B8D  0874               	movf	??___bmul,w
  4674     0B8E  07F5               	addwf	___bmul@product,f
  4675     0B8F                     l2341:
  4676     0B8F  1003               	clrc
  4677     0B90  0DF3               	rlf	___bmul@multiplicand,f
  4678     0B91                     l2343:
  4679     0B91  1003               	clrc
  4680     0B92  0CF6               	rrf	___bmul@multiplier,f
  4681     0B93  0876               	movf	___bmul@multiplier,w
  4682     0B94  1D03               	btfss	3,2
  4683     0B95  2B97               	goto	u1851
  4684     0B96  2B98               	goto	u1850
  4685     0B97                     u1851:
  4686     0B97  2B87               	goto	l2337
  4687     0B98                     u1850:
  4688     0B98                     l2345:
  4689     0B98  0875               	movf	___bmul@product,w
  4690     0B99                     l536:
  4691     0B99  0008               	return
  4692     0B9A                     __end_of___bmul:
  4693                           
  4694                           	psect	text11
  4695     0C35                     __ptext11:	
  4696 ;; *************** function _LcdALL_Write_String *****************
  4697 ;; Defined at:
  4698 ;;		line 71 in file "LCD_ALL.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  a               1    wreg     PTR unsigned char 
  4701 ;;		 -> buffer(20), 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  a               1    2[BANK0 ] PTR unsigned char 
  4704 ;;		 -> buffer(20), 
  4705 ;;  i               2    0[BANK0 ] int 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       0       0       0       0
  4716 ;;      Locals:         0       3       0       0       0
  4717 ;;      Temps:          1       0       0       0       0
  4718 ;;      Totals:         1       3       0       0       0
  4719 ;;Total ram usage:        4 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 3
  4722 ;; This function calls:
  4723 ;;		_LcdALL_Write_Char
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729     0C35                     _LcdALL_Write_String:	
  4730                           ;psect for function _LcdALL_Write_String
  4731                           
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _LcdALL_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4735                           ;LcdALL_Write_String@a stored from wreg
  4736     0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4737     0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4738     0C37  00A2               	movwf	LcdALL_Write_String@a
  4739     0C38                     l2299:
  4740                           
  4741                           ;LCD_ALL.c: 72:     int i;;LCD_ALL.c: 73:     for (i = 0; a[i] != '\0'; i++)
  4742     0C38  01A0               	clrf	LcdALL_Write_String@i
  4743     0C39  01A1               	clrf	LcdALL_Write_String@i+1
  4744     0C3A  2C4E               	goto	l2305
  4745     0C3B                     l2301:
  4746                           
  4747                           ;LCD_ALL.c: 74:         LcdALL_Write_Char(a[i]);
  4748     0C3B  0820               	movf	LcdALL_Write_String@i,w
  4749     0C3C  0722               	addwf	LcdALL_Write_String@a,w
  4750     0C3D  00F8               	movwf	??_LcdALL_Write_String
  4751     0C3E  0878               	movf	??_LcdALL_Write_String,w
  4752     0C3F  0084               	movwf	4
  4753     0C40  0800               	movf	0,w
  4754     0C41  120A  158A  239A  120A  158A  	fcall	_LcdALL_Write_Char
  4755     0C46                     l2303:
  4756     0C46  3001               	movlw	1
  4757     0C47  1283               	bcf	3,5	;RP0=0, select bank0
  4758     0C48  1303               	bcf	3,6	;RP1=0, select bank0
  4759     0C49  07A0               	addwf	LcdALL_Write_String@i,f
  4760     0C4A  1803               	skipnc
  4761     0C4B  0AA1               	incf	LcdALL_Write_String@i+1,f
  4762     0C4C  3000               	movlw	0
  4763     0C4D  07A1               	addwf	LcdALL_Write_String@i+1,f
  4764     0C4E                     l2305:
  4765     0C4E  0820               	movf	LcdALL_Write_String@i,w
  4766     0C4F  0722               	addwf	LcdALL_Write_String@a,w
  4767     0C50  00F8               	movwf	??_LcdALL_Write_String
  4768     0C51  0878               	movf	??_LcdALL_Write_String,w
  4769     0C52  0084               	movwf	4
  4770     0C53  1383               	bcf	3,7	;select IRP bank0
  4771     0C54  0800               	movf	0,w
  4772     0C55  1D03               	btfss	3,2
  4773     0C56  2C58               	goto	u1831
  4774     0C57  2C59               	goto	u1830
  4775     0C58                     u1831:
  4776     0C58  2C3B               	goto	l2301
  4777     0C59                     u1830:
  4778     0C59                     l276:
  4779     0C59  0008               	return
  4780     0C5A                     __end_of_LcdALL_Write_String:
  4781                           
  4782                           	psect	text12
  4783     0B9A                     __ptext12:	
  4784 ;; *************** function _LcdALL_Write_Char *****************
  4785 ;; Defined at:
  4786 ;;		line 63 in file "LCD_ALL.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  a               1    wreg     unsigned char 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  a               1    7[COMMON] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0, pclath, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4800 ;;      Params:         0       0       0       0       0
  4801 ;;      Locals:         1       0       0       0       0
  4802 ;;      Temps:          1       0       0       0       0
  4803 ;;      Totals:         2       0       0       0       0
  4804 ;;Total ram usage:        2 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 2
  4807 ;; This function calls:
  4808 ;;		_LcdALL_Port
  4809 ;; This function is called by:
  4810 ;;		_main
  4811 ;;		_LcdALL_Write_String
  4812 ;;		_LcdALL_set_value
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816     0B9A                     _LcdALL_Write_Char:	
  4817                           ;psect for function _LcdALL_Write_Char
  4818                           
  4819                           
  4820                           ;incstack = 0
  4821                           ; Regs used in _LcdALL_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4822                           ;LcdALL_Write_Char@a stored from wreg
  4823     0B9A  00F7               	movwf	LcdALL_Write_Char@a
  4824     0B9B                     l1941:
  4825                           
  4826                           ;LCD_ALL.c: 64:     PORTEbits.RE0 = 1;
  4827     0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  4828     0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  4829     0B9D  1409               	bsf	9,0	;volatile
  4830     0B9E                     l1943:
  4831                           
  4832                           ;LCD_ALL.c: 65:     LcdALL_Port(a);
  4833     0B9E  0877               	movf	LcdALL_Write_Char@a,w
  4834     0B9F  120A  158A  2778  120A  158A  	fcall	_LcdALL_Port
  4835     0BA4                     l1945:
  4836                           
  4837                           ;LCD_ALL.c: 66:     PORTEbits.RE1 = 1;
  4838     0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4839     0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4840     0BA6  1489               	bsf	9,1	;volatile
  4841     0BA7                     l1947:
  4842                           
  4843                           ;LCD_ALL.c: 67:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4844     0BA7  301A               	movlw	26
  4845     0BA8  00F6               	movwf	??_LcdALL_Write_Char
  4846     0BA9                     u2487:
  4847     0BA9  0BF6               	decfsz	??_LcdALL_Write_Char,f
  4848     0BAA  2BA9               	goto	u2487
  4849     0BAB  0000               	nop
  4850     0BAC                     l1949:
  4851                           
  4852                           ;LCD_ALL.c: 68:     PORTEbits.RE1 = 0;
  4853     0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  4854     0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  4855     0BAE  1089               	bcf	9,1	;volatile
  4856     0BAF                     l270:
  4857     0BAF  0008               	return
  4858     0BB0                     __end_of_LcdALL_Write_Char:
  4859                           
  4860                           	psect	text13
  4861     0C13                     __ptext13:	
  4862 ;; *************** function _LcdALL_Set_Cursor *****************
  4863 ;; Defined at:
  4864 ;;		line 38 in file "LCD_ALL.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  a               1    wreg     unsigned char 
  4867 ;;  b               1    9[COMMON] unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  a               1    0[BANK0 ] unsigned char 
  4870 ;;  temp            1    1[BANK0 ] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         1       0       0       0       0
  4881 ;;      Locals:         0       2       0       0       0
  4882 ;;      Temps:          0       0       0       0       0
  4883 ;;      Totals:         1       2       0       0       0
  4884 ;;Total ram usage:        3 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 3
  4887 ;; This function calls:
  4888 ;;		_LcdALL_Cmd
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894     0C13                     _LcdALL_Set_Cursor:	
  4895                           ;psect for function _LcdALL_Set_Cursor
  4896                           
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _LcdALL_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4900                           ;LcdALL_Set_Cursor@a stored from wreg
  4901     0C13  1283               	bcf	3,5	;RP0=0, select bank0
  4902     0C14  1303               	bcf	3,6	;RP1=0, select bank0
  4903     0C15  00A0               	movwf	LcdALL_Set_Cursor@a
  4904     0C16                     l2287:
  4905                           
  4906                           ;LCD_ALL.c: 39:     char temp;;LCD_ALL.c: 40:     if (a == 1) {
  4907     0C16  0320               	decf	LcdALL_Set_Cursor@a,w
  4908     0C17  1D03               	btfss	3,2
  4909     0C18  2C1A               	goto	u1811
  4910     0C19  2C1B               	goto	u1810
  4911     0C1A                     u1811:
  4912     0C1A  2C25               	goto	l2293
  4913     0C1B                     u1810:
  4914     0C1B                     l2289:
  4915                           
  4916                           ;LCD_ALL.c: 41:         temp = 0x80 + b - 1;
  4917     0C1B  0879               	movf	LcdALL_Set_Cursor@b,w
  4918     0C1C  3E7F               	addlw	127
  4919     0C1D  00A1               	movwf	LcdALL_Set_Cursor@temp
  4920     0C1E                     l2291:
  4921                           
  4922                           ;LCD_ALL.c: 42:         LcdALL_Cmd(temp);
  4923     0C1E  0821               	movf	LcdALL_Set_Cursor@temp,w
  4924     0C1F  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  4925                           
  4926                           ;LCD_ALL.c: 43:     } else if (a == 2) {
  4927     0C24  2C34               	goto	l264
  4928     0C25                     l2293:
  4929     0C25  3002               	movlw	2
  4930     0C26  0620               	xorwf	LcdALL_Set_Cursor@a,w
  4931     0C27  1D03               	btfss	3,2
  4932     0C28  2C2A               	goto	u1821
  4933     0C29  2C2B               	goto	u1820
  4934     0C2A                     u1821:
  4935     0C2A  2C34               	goto	l264
  4936     0C2B                     u1820:
  4937     0C2B                     l2295:
  4938                           
  4939                           ;LCD_ALL.c: 44:         temp = 0xC0 + b - 1;
  4940     0C2B  0879               	movf	LcdALL_Set_Cursor@b,w
  4941     0C2C  3EBF               	addlw	191
  4942     0C2D  00A1               	movwf	LcdALL_Set_Cursor@temp
  4943     0C2E                     l2297:
  4944                           
  4945                           ;LCD_ALL.c: 45:         LcdALL_Cmd(temp);
  4946     0C2E  0821               	movf	LcdALL_Set_Cursor@temp,w
  4947     0C2F  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  4948     0C34                     l264:
  4949     0C34  0008               	return
  4950     0C35                     __end_of_LcdALL_Set_Cursor:
  4951                           
  4952                           	psect	text14
  4953     0DD8                     __ptext14:	
  4954 ;; *************** function _LcdALL_Init *****************
  4955 ;; Defined at:
  4956 ;;		line 49 in file "LCD_ALL.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, pclath, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4970 ;;      Params:         0       0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0
  4972 ;;      Temps:          2       0       0       0       0
  4973 ;;      Totals:         2       0       0       0       0
  4974 ;;Total ram usage:        2 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 3
  4977 ;; This function calls:
  4978 ;;		_LcdALL_Cmd
  4979 ;;		_LcdALL_Port
  4980 ;; This function is called by:
  4981 ;;		_main
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985     0DD8                     _LcdALL_Init:	
  4986                           ;psect for function _LcdALL_Init
  4987                           
  4988     0DD8                     l2141:	
  4989                           ;incstack = 0
  4990                           ; Regs used in _LcdALL_Init: [wreg+status,2+status,0+pclath+cstack]
  4991                           
  4992                           
  4993                           ;LCD_ALL.c: 50:     LcdALL_Port(0x00);
  4994     0DD8  3000               	movlw	0
  4995     0DD9  120A  158A  2778  120A  158A  	fcall	_LcdALL_Port
  4996     0DDE                     l2143:
  4997                           
  4998                           ;LCD_ALL.c: 51:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4999     0DDE  3034               	movlw	52
  5000     0DDF  00FA               	movwf	??_LcdALL_Init+1
  5001     0DE0  30F1               	movlw	241
  5002     0DE1  00F9               	movwf	??_LcdALL_Init
  5003     0DE2                     u2497:
  5004     0DE2  0BF9               	decfsz	??_LcdALL_Init,f
  5005     0DE3  2DE2               	goto	u2497
  5006     0DE4  0BFA               	decfsz	??_LcdALL_Init+1,f
  5007     0DE5  2DE2               	goto	u2497
  5008     0DE6  2DE7               	nop2
  5009     0DE7                     l2145:
  5010                           
  5011                           ;LCD_ALL.c: 52:     LcdALL_Cmd(0x30);
  5012     0DE7  3030               	movlw	48
  5013     0DE8  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5014                           
  5015                           ;LCD_ALL.c: 53:     _delay((unsigned long)((5)*(8000000/4000.0)));
  5016     0DED  300D               	movlw	13
  5017     0DEE  00FA               	movwf	??_LcdALL_Init+1
  5018     0DEF  30FB               	movlw	251
  5019     0DF0  00F9               	movwf	??_LcdALL_Init
  5020     0DF1                     u2507:
  5021     0DF1  0BF9               	decfsz	??_LcdALL_Init,f
  5022     0DF2  2DF1               	goto	u2507
  5023     0DF3  0BFA               	decfsz	??_LcdALL_Init+1,f
  5024     0DF4  2DF1               	goto	u2507
  5025     0DF5  2DF6               	nop2
  5026     0DF6                     l2147:
  5027                           
  5028                           ;LCD_ALL.c: 54:     LcdALL_Cmd(0x30);
  5029     0DF6  3030               	movlw	48
  5030     0DF7  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5031     0DFC                     l2149:
  5032                           
  5033                           ;LCD_ALL.c: 55:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  5034     0DFC  3042               	movlw	66
  5035     0DFD  00F9               	movwf	??_LcdALL_Init
  5036     0DFE                     u2517:
  5037     0DFE  0BF9               	decfsz	??_LcdALL_Init,f
  5038     0DFF  2DFE               	goto	u2517
  5039     0E00  0000               	nop
  5040                           
  5041                           ;LCD_ALL.c: 57:     LcdALL_Cmd(0x38);
  5042     0E01  3038               	movlw	56
  5043     0E02  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5044                           
  5045                           ;LCD_ALL.c: 58:     LcdALL_Cmd(0x0C);
  5046     0E07  300C               	movlw	12
  5047     0E08  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5048                           
  5049                           ;LCD_ALL.c: 59:     LcdALL_Cmd(0x01);
  5050     0E0D  3001               	movlw	1
  5051     0E0E  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5052                           
  5053                           ;LCD_ALL.c: 60:     LcdALL_Cmd(0x06);
  5054     0E13  3006               	movlw	6
  5055     0E14  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5056     0E19                     l267:
  5057     0E19  0008               	return
  5058     0E1A                     __end_of_LcdALL_Init:
  5059                           
  5060                           	psect	text15
  5061     0B50                     __ptext15:	
  5062 ;; *************** function _LcdALL_Clear *****************
  5063 ;; Defined at:
  5064 ;;		line 33 in file "LCD_ALL.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;		None
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;		None
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5078 ;;      Params:         0       0       0       0       0
  5079 ;;      Locals:         0       0       0       0       0
  5080 ;;      Temps:          2       0       0       0       0
  5081 ;;      Totals:         2       0       0       0       0
  5082 ;;Total ram usage:        2 bytes
  5083 ;; Hardware stack levels used: 1
  5084 ;; Hardware stack levels required when called: 3
  5085 ;; This function calls:
  5086 ;;		_LcdALL_Cmd
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092     0B50                     _LcdALL_Clear:	
  5093                           ;psect for function _LcdALL_Clear
  5094                           
  5095     0B50                     l2307:	
  5096                           ;incstack = 0
  5097                           ; Regs used in _LcdALL_Clear: [wreg+status,2+status,0+pclath+cstack]
  5098                           
  5099                           
  5100                           ;LCD_ALL.c: 34:     LcdALL_Cmd(0x01);
  5101     0B50  3001               	movlw	1
  5102     0B51  120A  158A  23F9  120A  158A  	fcall	_LcdALL_Cmd
  5103     0B56                     l2309:
  5104                           
  5105                           ;LCD_ALL.c: 35:     _delay((unsigned long)((2)*(8000000/4000.0)));
  5106     0B56  3006               	movlw	6
  5107     0B57  00FA               	movwf	??_LcdALL_Clear+1
  5108     0B58  3030               	movlw	48
  5109     0B59  00F9               	movwf	??_LcdALL_Clear
  5110     0B5A                     u2527:
  5111     0B5A  0BF9               	decfsz	??_LcdALL_Clear,f
  5112     0B5B  2B5A               	goto	u2527
  5113     0B5C  0BFA               	decfsz	??_LcdALL_Clear+1,f
  5114     0B5D  2B5A               	goto	u2527
  5115     0B5E  0000               	nop
  5116     0B5F                     l258:
  5117     0B5F  0008               	return
  5118     0B60                     __end_of_LcdALL_Clear:
  5119                           
  5120                           	psect	text16
  5121     0BF9                     __ptext16:	
  5122 ;; *************** function _LcdALL_Cmd *****************
  5123 ;; Defined at:
  5124 ;;		line 25 in file "LCD_ALL.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  a               1    wreg     unsigned char 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  a               1    8[COMMON] unsigned char 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5138 ;;      Params:         0       0       0       0       0
  5139 ;;      Locals:         1       0       0       0       0
  5140 ;;      Temps:          2       0       0       0       0
  5141 ;;      Totals:         3       0       0       0       0
  5142 ;;Total ram usage:        3 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 2
  5145 ;; This function calls:
  5146 ;;		_LcdALL_Port
  5147 ;; This function is called by:
  5148 ;;		_LcdALL_Clear
  5149 ;;		_LcdALL_Set_Cursor
  5150 ;;		_LcdALL_Init
  5151 ;;		_LcdALL_Shift_Right
  5152 ;;		_LcdALL_Shift_Left
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156     0BF9                     _LcdALL_Cmd:	
  5157                           ;psect for function _LcdALL_Cmd
  5158                           
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _LcdALL_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5162                           ;LcdALL_Cmd@a stored from wreg
  5163     0BF9  00F8               	movwf	LcdALL_Cmd@a
  5164     0BFA                     l1999:
  5165                           
  5166                           ;LCD_ALL.c: 26:     PORTEbits.RE0 = 0;
  5167     0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  5168     0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  5169     0BFC  1009               	bcf	9,0	;volatile
  5170     0BFD                     l2001:
  5171                           
  5172                           ;LCD_ALL.c: 27:     LcdALL_Port(a);
  5173     0BFD  0878               	movf	LcdALL_Cmd@a,w
  5174     0BFE  120A  158A  2778  120A  158A  	fcall	_LcdALL_Port
  5175     0C03                     l2003:
  5176                           
  5177                           ;LCD_ALL.c: 28:     PORTEbits.RE1 = 1;
  5178     0C03  1283               	bcf	3,5	;RP0=0, select bank0
  5179     0C04  1303               	bcf	3,6	;RP1=0, select bank0
  5180     0C05  1489               	bsf	9,1	;volatile
  5181     0C06                     l2005:
  5182                           
  5183                           ;LCD_ALL.c: 29:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5184     0C06  300B               	movlw	11
  5185     0C07  00F7               	movwf	??_LcdALL_Cmd+1
  5186     0C08  3062               	movlw	98
  5187     0C09  00F6               	movwf	??_LcdALL_Cmd
  5188     0C0A                     u2537:
  5189     0C0A  0BF6               	decfsz	??_LcdALL_Cmd,f
  5190     0C0B  2C0A               	goto	u2537
  5191     0C0C  0BF7               	decfsz	??_LcdALL_Cmd+1,f
  5192     0C0D  2C0A               	goto	u2537
  5193     0C0E  0000               	nop
  5194     0C0F                     l2007:
  5195                           
  5196                           ;LCD_ALL.c: 30:     PORTEbits.RE1 = 0;
  5197     0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  5198     0C10  1303               	bcf	3,6	;RP1=0, select bank0
  5199     0C11  1089               	bcf	9,1	;volatile
  5200     0C12                     l255:
  5201     0C12  0008               	return
  5202     0C13                     __end_of_LcdALL_Cmd:
  5203                           
  5204                           	psect	text17
  5205     0F78                     __ptext17:	
  5206 ;; *************** function _LcdALL_Port *****************
  5207 ;; Defined at:
  5208 ;;		line 9 in file "LCD_ALL.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  a               1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  a               1    5[COMMON] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5222 ;;      Params:         0       0       0       0       0
  5223 ;;      Locals:         1       0       0       0       0
  5224 ;;      Temps:          2       0       0       0       0
  5225 ;;      Totals:         3       0       0       0       0
  5226 ;;Total ram usage:        3 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_LcdALL_Cmd
  5233 ;;		_LcdALL_Init
  5234 ;;		_LcdALL_Write_Char
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238     0F78                     _LcdALL_Port:	
  5239                           ;psect for function _LcdALL_Port
  5240                           
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _LcdALL_Port: [wreg+status,2+status,0]
  5244                           ;LcdALL_Port@a stored from wreg
  5245     0F78  00F5               	movwf	LcdALL_Port@a
  5246     0F79                     l1899:
  5247                           
  5248                           ;LCD_ALL.c: 11:     TRISA &= 0x00;
  5249     0F79  1683               	bsf	3,5	;RP0=1, select bank1
  5250     0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  5251     0F7B  0185               	clrf	5	;volatile
  5252     0F7C                     l1901:
  5253                           
  5254                           ;LCD_ALL.c: 15:     PORTAbits.RA0 = (a & 1);
  5255     0F7C  3001               	movlw	1
  5256     0F7D  0575               	andwf	LcdALL_Port@a,w
  5257     0F7E  00F3               	movwf	??_LcdALL_Port
  5258     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  5259     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  5260     0F81  0805               	movf	5,w	;volatile
  5261     0F82  0673               	xorwf	??_LcdALL_Port,w
  5262     0F83  39FE               	andlw	-2
  5263     0F84  0673               	xorwf	??_LcdALL_Port,w
  5264     0F85  0085               	movwf	5	;volatile
  5265     0F86                     l1903:
  5266                           
  5267                           ;LCD_ALL.c: 16:     PORTAbits.RA1 = (a & 2) >> 1;
  5268     0F86  0875               	movf	LcdALL_Port@a,w
  5269     0F87  00F3               	movwf	??_LcdALL_Port
  5270     0F88  1003               	clrc
  5271     0F89  0C73               	rrf	??_LcdALL_Port,w
  5272     0F8A  3901               	andlw	1
  5273     0F8B  00F4               	movwf	??_LcdALL_Port+1
  5274     0F8C  0DF4               	rlf	??_LcdALL_Port+1,f
  5275     0F8D  0805               	movf	5,w	;volatile
  5276     0F8E  0674               	xorwf	??_LcdALL_Port+1,w
  5277     0F8F  39FD               	andlw	-3
  5278     0F90  0674               	xorwf	??_LcdALL_Port+1,w
  5279     0F91  0085               	movwf	5	;volatile
  5280     0F92                     l1905:
  5281                           
  5282                           ;LCD_ALL.c: 17:     PORTAbits.RA2 = (a & 4) >> 2;
  5283     0F92  0875               	movf	LcdALL_Port@a,w
  5284     0F93  00F3               	movwf	??_LcdALL_Port
  5285     0F94  3002               	movlw	2
  5286     0F95                     u1195:
  5287     0F95  1003               	clrc
  5288     0F96  0CF3               	rrf	??_LcdALL_Port,f
  5289     0F97  3EFF               	addlw	-1
  5290     0F98  1D03               	skipz
  5291     0F99  2F95               	goto	u1195
  5292     0F9A  0873               	movf	??_LcdALL_Port,w
  5293     0F9B  3901               	andlw	1
  5294     0F9C  00F4               	movwf	??_LcdALL_Port+1
  5295     0F9D  0DF4               	rlf	??_LcdALL_Port+1,f
  5296     0F9E  0DF4               	rlf	??_LcdALL_Port+1,f
  5297     0F9F  0805               	movf	5,w	;volatile
  5298     0FA0  0674               	xorwf	??_LcdALL_Port+1,w
  5299     0FA1  39FB               	andlw	-5
  5300     0FA2  0674               	xorwf	??_LcdALL_Port+1,w
  5301     0FA3  0085               	movwf	5	;volatile
  5302     0FA4                     l1907:
  5303                           
  5304                           ;LCD_ALL.c: 18:     PORTAbits.RA3 = (a & 8) >> 3;
  5305     0FA4  0875               	movf	LcdALL_Port@a,w
  5306     0FA5  00F3               	movwf	??_LcdALL_Port
  5307     0FA6  3003               	movlw	3
  5308     0FA7                     u1205:
  5309     0FA7  1003               	clrc
  5310     0FA8  0CF3               	rrf	??_LcdALL_Port,f
  5311     0FA9  3EFF               	addlw	-1
  5312     0FAA  1D03               	skipz
  5313     0FAB  2FA7               	goto	u1205
  5314     0FAC  0873               	movf	??_LcdALL_Port,w
  5315     0FAD  3901               	andlw	1
  5316     0FAE  00F4               	movwf	??_LcdALL_Port+1
  5317     0FAF  0DF4               	rlf	??_LcdALL_Port+1,f
  5318     0FB0  0DF4               	rlf	??_LcdALL_Port+1,f
  5319     0FB1  0DF4               	rlf	??_LcdALL_Port+1,f
  5320     0FB2  0805               	movf	5,w	;volatile
  5321     0FB3  0674               	xorwf	??_LcdALL_Port+1,w
  5322     0FB4  39F7               	andlw	-9
  5323     0FB5  0674               	xorwf	??_LcdALL_Port+1,w
  5324     0FB6  0085               	movwf	5	;volatile
  5325     0FB7                     l1909:
  5326                           
  5327                           ;LCD_ALL.c: 19:     PORTAbits.RA4 = (a & 16) >> 4;
  5328     0FB7  0875               	movf	LcdALL_Port@a,w
  5329     0FB8  00F3               	movwf	??_LcdALL_Port
  5330     0FB9  3004               	movlw	4
  5331     0FBA                     u1215:
  5332     0FBA  1003               	clrc
  5333     0FBB  0CF3               	rrf	??_LcdALL_Port,f
  5334     0FBC  3EFF               	addlw	-1
  5335     0FBD  1D03               	skipz
  5336     0FBE  2FBA               	goto	u1215
  5337     0FBF  0873               	movf	??_LcdALL_Port,w
  5338     0FC0  3901               	andlw	1
  5339     0FC1  00F4               	movwf	??_LcdALL_Port+1
  5340     0FC2  0EF4               	swapf	??_LcdALL_Port+1,f
  5341     0FC3  0805               	movf	5,w	;volatile
  5342     0FC4  0674               	xorwf	??_LcdALL_Port+1,w
  5343     0FC5  39EF               	andlw	-17
  5344     0FC6  0674               	xorwf	??_LcdALL_Port+1,w
  5345     0FC7  0085               	movwf	5	;volatile
  5346     0FC8                     l1911:
  5347                           
  5348                           ;LCD_ALL.c: 20:     PORTAbits.RA5 = (a & 32) >> 5;
  5349     0FC8  0875               	movf	LcdALL_Port@a,w
  5350     0FC9  00F3               	movwf	??_LcdALL_Port
  5351     0FCA  3005               	movlw	5
  5352     0FCB                     u1225:
  5353     0FCB  1003               	clrc
  5354     0FCC  0CF3               	rrf	??_LcdALL_Port,f
  5355     0FCD  3EFF               	addlw	-1
  5356     0FCE  1D03               	skipz
  5357     0FCF  2FCB               	goto	u1225
  5358     0FD0  0873               	movf	??_LcdALL_Port,w
  5359     0FD1  3901               	andlw	1
  5360     0FD2  00F4               	movwf	??_LcdALL_Port+1
  5361     0FD3  0EF4               	swapf	??_LcdALL_Port+1,f
  5362     0FD4  0DF4               	rlf	??_LcdALL_Port+1,f
  5363     0FD5  0805               	movf	5,w	;volatile
  5364     0FD6  0674               	xorwf	??_LcdALL_Port+1,w
  5365     0FD7  39DF               	andlw	-33
  5366     0FD8  0674               	xorwf	??_LcdALL_Port+1,w
  5367     0FD9  0085               	movwf	5	;volatile
  5368     0FDA                     l1913:
  5369                           
  5370                           ;LCD_ALL.c: 21:     PORTAbits.RA6 = (a & 64) >> 6;
  5371     0FDA  0875               	movf	LcdALL_Port@a,w
  5372     0FDB  00F3               	movwf	??_LcdALL_Port
  5373     0FDC  3006               	movlw	6
  5374     0FDD                     u1235:
  5375     0FDD  1003               	clrc
  5376     0FDE  0CF3               	rrf	??_LcdALL_Port,f
  5377     0FDF  3EFF               	addlw	-1
  5378     0FE0  1D03               	skipz
  5379     0FE1  2FDD               	goto	u1235
  5380     0FE2  0873               	movf	??_LcdALL_Port,w
  5381     0FE3  3901               	andlw	1
  5382     0FE4  00F4               	movwf	??_LcdALL_Port+1
  5383     0FE5  0EF4               	swapf	??_LcdALL_Port+1,f
  5384     0FE6  0DF4               	rlf	??_LcdALL_Port+1,f
  5385     0FE7  0DF4               	rlf	??_LcdALL_Port+1,f
  5386     0FE8  0805               	movf	5,w	;volatile
  5387     0FE9  0674               	xorwf	??_LcdALL_Port+1,w
  5388     0FEA  39BF               	andlw	-65
  5389     0FEB  0674               	xorwf	??_LcdALL_Port+1,w
  5390     0FEC  0085               	movwf	5	;volatile
  5391     0FED                     l1915:
  5392                           
  5393                           ;LCD_ALL.c: 22:     PORTAbits.RA7 = (a & 128) >> 7;
  5394     0FED  0875               	movf	LcdALL_Port@a,w
  5395     0FEE  00F3               	movwf	??_LcdALL_Port
  5396     0FEF  3007               	movlw	7
  5397     0FF0                     u1245:
  5398     0FF0  1003               	clrc
  5399     0FF1  0CF3               	rrf	??_LcdALL_Port,f
  5400     0FF2  3EFF               	addlw	-1
  5401     0FF3  1D03               	skipz
  5402     0FF4  2FF0               	goto	u1245
  5403     0FF5  0873               	movf	??_LcdALL_Port,w
  5404     0FF6  3901               	andlw	1
  5405     0FF7  00F4               	movwf	??_LcdALL_Port+1
  5406     0FF8  0CF4               	rrf	??_LcdALL_Port+1,f
  5407     0FF9  0CF4               	rrf	??_LcdALL_Port+1,f
  5408     0FFA  0805               	movf	5,w	;volatile
  5409     0FFB  0674               	xorwf	??_LcdALL_Port+1,w
  5410     0FFC  397F               	andlw	-129
  5411     0FFD  0674               	xorwf	??_LcdALL_Port+1,w
  5412     0FFE  0085               	movwf	5	;volatile
  5413     0FFF                     l252:
  5414     0FFF  0008               	return
  5415     1000                     __end_of_LcdALL_Port:
  5416                           
  5417                           	psect	text18
  5418     0666                     __ptext18:	
  5419 ;; *************** function _DS3231_Set_Date_Time *****************
  5420 ;; Defined at:
  5421 ;;		line 13 in file "REAL_CLOCK.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  dy              1    wreg     unsigned char 
  5424 ;;  mth             1    0[BANK0 ] unsigned char 
  5425 ;;  yr              1    1[BANK0 ] unsigned char 
  5426 ;;  dw              1    2[BANK0 ] unsigned char 
  5427 ;;  hr              1    3[BANK0 ] unsigned char 
  5428 ;;  mn              1    4[BANK0 ] unsigned char 
  5429 ;;  sc              1    5[BANK0 ] unsigned char 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  dy              1    6[BANK0 ] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  1    wreg      void 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5441 ;;      Params:         0       6       0       0       0
  5442 ;;      Locals:         0       1       0       0       0
  5443 ;;      Temps:          2       0       0       0       0
  5444 ;;      Totals:         2       7       0       0       0
  5445 ;;Total ram usage:        9 bytes
  5446 ;; Hardware stack levels used: 1
  5447 ;; Hardware stack levels required when called: 3
  5448 ;; This function calls:
  5449 ;;		_DS3231_Bin_Bcd
  5450 ;;		_I2C_Master_Start
  5451 ;;		_I2C_Master_Stop
  5452 ;;		_I2C_Master_Write
  5453 ;; This function is called by:
  5454 ;;		_main
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458     0666                     _DS3231_Set_Date_Time:	
  5459                           ;psect for function _DS3231_Set_Date_Time
  5460                           
  5461                           
  5462                           ;incstack = 0
  5463                           ; Regs used in _DS3231_Set_Date_Time: [wreg+status,2+status,0+pclath+cstack]
  5464                           ;DS3231_Set_Date_Time@dy stored from wreg
  5465     0666  1283               	bcf	3,5	;RP0=0, select bank0
  5466     0667  1303               	bcf	3,6	;RP1=0, select bank0
  5467     0668  00A6               	movwf	DS3231_Set_Date_Time@dy
  5468     0669                     l2311:
  5469                           
  5470                           ;REAL_CLOCK.c: 13: void DS3231_Set_Date_Time(uint8_t dy, uint8_t mth, uint8_t yr, uint8_
      +                          t dw, uint8_t hr, uint8_t mn, uint8_t sc);REAL_CLOCK.c: 14: {;REAL_CLOCK.c: 15:     sc &
      +                          = 0x7F;
  5471     0669  307F               	movlw	127
  5472     066A  00F9               	movwf	??_DS3231_Set_Date_Time
  5473     066B  0879               	movf	??_DS3231_Set_Date_Time,w
  5474     066C  05A5               	andwf	DS3231_Set_Date_Time@sc,f
  5475                           
  5476                           ;REAL_CLOCK.c: 16:     hr &= 0x3F;
  5477     066D  303F               	movlw	63
  5478     066E  00F9               	movwf	??_DS3231_Set_Date_Time
  5479     066F  0879               	movf	??_DS3231_Set_Date_Time,w
  5480     0670  05A3               	andwf	DS3231_Set_Date_Time@hr,f
  5481     0671                     l2313:
  5482                           
  5483                           ;REAL_CLOCK.c: 17:     I2C_Master_Start();
  5484     0671  120A  158A  2327  120A  118A  	fcall	_I2C_Master_Start
  5485     0676                     l2315:
  5486                           
  5487                           ;REAL_CLOCK.c: 18:     I2C_Master_Write(0xD0);
  5488     0676  30D0               	movlw	208
  5489     0677  00F7               	movwf	I2C_Master_Write@d
  5490     0678  3000               	movlw	0
  5491     0679  00F8               	movwf	I2C_Master_Write@d+1
  5492     067A  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5493     067F                     l2317:
  5494                           
  5495                           ;REAL_CLOCK.c: 19:     I2C_Master_Write(0x00);
  5496     067F  3000               	movlw	0
  5497     0680  00F7               	movwf	I2C_Master_Write@d
  5498     0681  00F8               	movwf	I2C_Master_Write@d+1
  5499     0682  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5500     0687                     l2319:
  5501                           
  5502                           ;REAL_CLOCK.c: 20:     I2C_Master_Write(DS3231_Bin_Bcd(sc));
  5503     0687  1283               	bcf	3,5	;RP0=0, select bank0
  5504     0688  1303               	bcf	3,6	;RP1=0, select bank0
  5505     0689  0825               	movf	DS3231_Set_Date_Time@sc,w
  5506     068A  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5507     068F  00F9               	movwf	??_DS3231_Set_Date_Time
  5508     0690  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5509     0691  0879               	movf	??_DS3231_Set_Date_Time,w
  5510     0692  00F7               	movwf	I2C_Master_Write@d
  5511     0693  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5512     0694  00F8               	movwf	I2C_Master_Write@d+1
  5513     0695  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5514     069A                     l2321:
  5515                           
  5516                           ;REAL_CLOCK.c: 21:     I2C_Master_Write(DS3231_Bin_Bcd(mn));
  5517     069A  1283               	bcf	3,5	;RP0=0, select bank0
  5518     069B  1303               	bcf	3,6	;RP1=0, select bank0
  5519     069C  0824               	movf	DS3231_Set_Date_Time@mn,w
  5520     069D  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5521     06A2  00F9               	movwf	??_DS3231_Set_Date_Time
  5522     06A3  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5523     06A4  0879               	movf	??_DS3231_Set_Date_Time,w
  5524     06A5  00F7               	movwf	I2C_Master_Write@d
  5525     06A6  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5526     06A7  00F8               	movwf	I2C_Master_Write@d+1
  5527     06A8  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5528     06AD                     l2323:
  5529                           
  5530                           ;REAL_CLOCK.c: 22:     I2C_Master_Write(DS3231_Bin_Bcd(hr));
  5531     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  5532     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  5533     06AF  0823               	movf	DS3231_Set_Date_Time@hr,w
  5534     06B0  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5535     06B5  00F9               	movwf	??_DS3231_Set_Date_Time
  5536     06B6  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5537     06B7  0879               	movf	??_DS3231_Set_Date_Time,w
  5538     06B8  00F7               	movwf	I2C_Master_Write@d
  5539     06B9  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5540     06BA  00F8               	movwf	I2C_Master_Write@d+1
  5541     06BB  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5542     06C0                     l2325:
  5543                           
  5544                           ;REAL_CLOCK.c: 23:     I2C_Master_Write(DS3231_Bin_Bcd(dw));
  5545     06C0  1283               	bcf	3,5	;RP0=0, select bank0
  5546     06C1  1303               	bcf	3,6	;RP1=0, select bank0
  5547     06C2  0822               	movf	DS3231_Set_Date_Time@dw,w
  5548     06C3  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5549     06C8  00F9               	movwf	??_DS3231_Set_Date_Time
  5550     06C9  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5551     06CA  0879               	movf	??_DS3231_Set_Date_Time,w
  5552     06CB  00F7               	movwf	I2C_Master_Write@d
  5553     06CC  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5554     06CD  00F8               	movwf	I2C_Master_Write@d+1
  5555     06CE  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5556     06D3                     l2327:
  5557                           
  5558                           ;REAL_CLOCK.c: 24:     I2C_Master_Write(DS3231_Bin_Bcd(dy));
  5559     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  5560     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  5561     06D5  0826               	movf	DS3231_Set_Date_Time@dy,w
  5562     06D6  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5563     06DB  00F9               	movwf	??_DS3231_Set_Date_Time
  5564     06DC  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5565     06DD  0879               	movf	??_DS3231_Set_Date_Time,w
  5566     06DE  00F7               	movwf	I2C_Master_Write@d
  5567     06DF  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5568     06E0  00F8               	movwf	I2C_Master_Write@d+1
  5569     06E1  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5570     06E6                     l2329:
  5571                           
  5572                           ;REAL_CLOCK.c: 25:     I2C_Master_Write(DS3231_Bin_Bcd(mth));
  5573     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  5574     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  5575     06E8  0820               	movf	DS3231_Set_Date_Time@mth,w
  5576     06E9  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5577     06EE  00F9               	movwf	??_DS3231_Set_Date_Time
  5578     06EF  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5579     06F0  0879               	movf	??_DS3231_Set_Date_Time,w
  5580     06F1  00F7               	movwf	I2C_Master_Write@d
  5581     06F2  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5582     06F3  00F8               	movwf	I2C_Master_Write@d+1
  5583     06F4  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5584     06F9                     l2331:
  5585                           
  5586                           ;REAL_CLOCK.c: 26:     I2C_Master_Write(DS3231_Bin_Bcd(yr));
  5587     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  5588     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  5589     06FB  0821               	movf	DS3231_Set_Date_Time@yr,w
  5590     06FC  120A  158A  23B0  120A  118A  	fcall	_DS3231_Bin_Bcd
  5591     0701  00F9               	movwf	??_DS3231_Set_Date_Time
  5592     0702  01FA               	clrf	??_DS3231_Set_Date_Time+1
  5593     0703  0879               	movf	??_DS3231_Set_Date_Time,w
  5594     0704  00F7               	movwf	I2C_Master_Write@d
  5595     0705  087A               	movf	??_DS3231_Set_Date_Time+1,w
  5596     0706  00F8               	movwf	I2C_Master_Write@d+1
  5597     0707  120A  158A  2339  120A  118A  	fcall	_I2C_Master_Write
  5598     070C                     l2333:
  5599                           
  5600                           ;REAL_CLOCK.c: 27:     I2C_Master_Stop();
  5601     070C  120A  158A  2330  120A  118A  	fcall	_I2C_Master_Stop
  5602     0711                     l311:
  5603     0711  0008               	return
  5604     0712                     __end_of_DS3231_Set_Date_Time:
  5605                           
  5606                           	psect	text19
  5607     0BB0                     __ptext19:	
  5608 ;; *************** function _DS3231_Bin_Bcd *****************
  5609 ;; Defined at:
  5610 ;;		line 69 in file "REAL_CLOCK.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  binary_value    1    wreg     unsigned char 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  binary_value    1    4[COMMON] unsigned char 
  5615 ;;  temp            1    6[COMMON] unsigned char 
  5616 ;;  retval          1    5[COMMON] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5626 ;;      Params:         0       0       0       0       0
  5627 ;;      Locals:         3       0       0       0       0
  5628 ;;      Temps:          1       0       0       0       0
  5629 ;;      Totals:         4       0       0       0       0
  5630 ;;Total ram usage:        4 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_DS3231_Set_Date_Time
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640     0BB0                     _DS3231_Bin_Bcd:	
  5641                           ;psect for function _DS3231_Bin_Bcd
  5642                           
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _DS3231_Bin_Bcd: [wreg+status,2+status,0]
  5646                           ;DS3231_Bin_Bcd@binary_value stored from wreg
  5647     0BB0  00F4               	movwf	DS3231_Bin_Bcd@binary_value
  5648     0BB1                     l2009:
  5649                           
  5650                           ;REAL_CLOCK.c: 69: uint8_t DS3231_Bin_Bcd(uint8_t binary_value);REAL_CLOCK.c: 70: {;REAL
      +                          _CLOCK.c: 71:     uint8_t temp;;REAL_CLOCK.c: 72:     uint8_t retval;;REAL_CLOCK.c: 73: 
      +                              temp = binary_value;
  5651     0BB1  0874               	movf	DS3231_Bin_Bcd@binary_value,w
  5652     0BB2  00F6               	movwf	DS3231_Bin_Bcd@temp
  5653     0BB3                     l2011:
  5654                           
  5655                           ;REAL_CLOCK.c: 74:     retval = 0;
  5656     0BB3  01F5               	clrf	DS3231_Bin_Bcd@retval
  5657     0BB4                     l2013:
  5658                           
  5659                           ;REAL_CLOCK.c: 76:     {;REAL_CLOCK.c: 77:         if(temp >= 10){
  5660     0BB4  300A               	movlw	10
  5661     0BB5  0276               	subwf	DS3231_Bin_Bcd@temp,w
  5662     0BB6  1C03               	skipc
  5663     0BB7  2BB9               	goto	u1421
  5664     0BB8  2BBA               	goto	u1420
  5665     0BB9                     u1421:
  5666     0BB9  2BC1               	goto	l2017
  5667     0BBA                     u1420:
  5668     0BBA                     l2015:
  5669                           
  5670                           ;REAL_CLOCK.c: 78:             temp -= 10;
  5671     0BBA  300A               	movlw	10
  5672     0BBB  02F6               	subwf	DS3231_Bin_Bcd@temp,f
  5673                           
  5674                           ;REAL_CLOCK.c: 79:             retval += 0x10;
  5675     0BBC  3010               	movlw	16
  5676     0BBD  00F3               	movwf	??_DS3231_Bin_Bcd
  5677     0BBE  0873               	movf	??_DS3231_Bin_Bcd,w
  5678     0BBF  07F5               	addwf	DS3231_Bin_Bcd@retval,f
  5679                           
  5680                           ;REAL_CLOCK.c: 80:         }else{
  5681     0BC0  2BB4               	goto	l2013
  5682     0BC1                     l2017:
  5683                           
  5684                           ;REAL_CLOCK.c: 81:             retval += temp;
  5685     0BC1  0876               	movf	DS3231_Bin_Bcd@temp,w
  5686     0BC2  00F3               	movwf	??_DS3231_Bin_Bcd
  5687     0BC3  0873               	movf	??_DS3231_Bin_Bcd,w
  5688     0BC4  07F5               	addwf	DS3231_Bin_Bcd@retval,f
  5689     0BC5                     l2019:	
  5690                           ;REAL_CLOCK.c: 82:             break;
  5691                           
  5692                           
  5693                           ;REAL_CLOCK.c: 85:     return(retval);
  5694     0BC5  0875               	movf	DS3231_Bin_Bcd@retval,w
  5695     0BC6                     l331:
  5696     0BC6  0008               	return
  5697     0BC7                     __end_of_DS3231_Bin_Bcd:
  5698                           
  5699                           	psect	text20
  5700     0D59                     __ptext20:	
  5701 ;; *************** function _DS3231_Get_Time *****************
  5702 ;; Defined at:
  5703 ;;		line 38 in file "REAL_CLOCK.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  hr              2    2[BANK0 ] PTR unsigned char 
  5706 ;;		 -> RAM(512), 
  5707 ;;  min             2    4[BANK0 ] PTR unsigned char 
  5708 ;;		 -> RAM(512), 
  5709 ;;  sec             2    6[BANK0 ] PTR unsigned char 
  5710 ;;		 -> RAM(512), 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5722 ;;      Params:         0       6       0       0       0
  5723 ;;      Locals:         0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0
  5725 ;;      Totals:         0       6       0       0       0
  5726 ;;Total ram usage:        6 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; Hardware stack levels required when called: 4
  5729 ;; This function calls:
  5730 ;;		_DS3231_Bcd_Bin
  5731 ;;		_DS3231_Read
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737     0D59                     _DS3231_Get_Time:	
  5738                           ;psect for function _DS3231_Get_Time
  5739                           
  5740     0D59                     l2153:	
  5741                           ;incstack = 0
  5742                           ; Regs used in _DS3231_Get_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5743                           
  5744                           
  5745                           ;REAL_CLOCK.c: 38: void DS3231_Get_Time(uint8_t *hr, uint8_t *min, uint8_t *sec);REAL_CL
      +                          OCK.c: 39: {;REAL_CLOCK.c: 40:     *sec = DS3231_Bcd_Bin(DS3231_Read(0x00) & 0x7F);
  5746     0D59  1283               	bcf	3,5	;RP0=0, select bank0
  5747     0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  5748     0D5B  0826               	movf	DS3231_Get_Time@sec,w
  5749     0D5C  0084               	movwf	4
  5750     0D5D  1783               	bsf	3,7
  5751     0D5E  1C27               	btfss	DS3231_Get_Time@sec+1,0
  5752     0D5F  1383               	bcf	3,7
  5753     0D60  3000               	movlw	0
  5754     0D61  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5755     0D66  397F               	andlw	127
  5756     0D67  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5757     0D6C  0080               	movwf	0
  5758                           
  5759                           ;REAL_CLOCK.c: 41:     *min = DS3231_Bcd_Bin(DS3231_Read(0x01) & 0x7F);
  5760     0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5761     0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  5762     0D6F  0824               	movf	DS3231_Get_Time@min,w
  5763     0D70  0084               	movwf	4
  5764     0D71  1783               	bsf	3,7
  5765     0D72  1C25               	btfss	DS3231_Get_Time@min+1,0
  5766     0D73  1383               	bcf	3,7
  5767     0D74  3001               	movlw	1
  5768     0D75  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5769     0D7A  397F               	andlw	127
  5770     0D7B  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5771     0D80  0080               	movwf	0
  5772                           
  5773                           ;REAL_CLOCK.c: 42:     *hr = DS3231_Bcd_Bin(DS3231_Read(0x02) & 0x3F);
  5774     0D81  1283               	bcf	3,5	;RP0=0, select bank0
  5775     0D82  1303               	bcf	3,6	;RP1=0, select bank0
  5776     0D83  0822               	movf	DS3231_Get_Time@hr,w
  5777     0D84  0084               	movwf	4
  5778     0D85  1783               	bsf	3,7
  5779     0D86  1C23               	btfss	DS3231_Get_Time@hr+1,0
  5780     0D87  1383               	bcf	3,7
  5781     0D88  3002               	movlw	2
  5782     0D89  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5783     0D8E  393F               	andlw	63
  5784     0D8F  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5785     0D94  0080               	movwf	0
  5786     0D95                     l317:
  5787     0D95  0008               	return
  5788     0D96                     __end_of_DS3231_Get_Time:
  5789                           
  5790                           	psect	text21
  5791     0E67                     __ptext21:	
  5792 ;; *************** function _DS3231_Get_Date *****************
  5793 ;; Defined at:
  5794 ;;		line 30 in file "REAL_CLOCK.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  day             2    2[BANK0 ] PTR unsigned char 
  5797 ;;		 -> DS3231_Get_DayOfWeek@lday(1), RAM(512), 
  5798 ;;  mth             2    4[BANK0 ] PTR unsigned char 
  5799 ;;		 -> DS3231_Get_DayOfWeek@lmonth(1), RAM(512), 
  5800 ;;  year            2    6[BANK0 ] PTR unsigned char 
  5801 ;;		 -> DS3231_Get_DayOfWeek@lyr(1), RAM(512), 
  5802 ;;  dow             2    8[BANK0 ] PTR unsigned char 
  5803 ;;		 -> DS3231_Get_DayOfWeek@ldow(1), RAM(512), 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5815 ;;      Params:         0       8       0       0       0
  5816 ;;      Locals:         0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0
  5818 ;;      Totals:         0       8       0       0       0
  5819 ;;Total ram usage:        8 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 4
  5822 ;; This function calls:
  5823 ;;		_DS3231_Bcd_Bin
  5824 ;;		_DS3231_Read
  5825 ;; This function is called by:
  5826 ;;		_main
  5827 ;;		_DS3231_Get_DayOfWeek
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831     0E67                     _DS3231_Get_Date:	
  5832                           ;psect for function _DS3231_Get_Date
  5833                           
  5834     0E67                     l2151:	
  5835                           ;incstack = 0
  5836                           ; Regs used in _DS3231_Get_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5837                           
  5838                           
  5839                           ;REAL_CLOCK.c: 30: void DS3231_Get_Date(uint8_t *day, uint8_t *mth, uint8_t *year, uint8
      +                          _t *dow);REAL_CLOCK.c: 31: {;REAL_CLOCK.c: 32:     *dow = DS3231_Bcd_Bin(DS3231_Read(0x0
      +                          3) & 0x7F);
  5840     0E67  1283               	bcf	3,5	;RP0=0, select bank0
  5841     0E68  1303               	bcf	3,6	;RP1=0, select bank0
  5842     0E69  0828               	movf	DS3231_Get_Date@dow,w
  5843     0E6A  0084               	movwf	4
  5844     0E6B  1783               	bsf	3,7
  5845     0E6C  1C29               	btfss	DS3231_Get_Date@dow+1,0
  5846     0E6D  1383               	bcf	3,7
  5847     0E6E  3003               	movlw	3
  5848     0E6F  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5849     0E74  397F               	andlw	127
  5850     0E75  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5851     0E7A  0080               	movwf	0
  5852                           
  5853                           ;REAL_CLOCK.c: 33:     *day = DS3231_Bcd_Bin(DS3231_Read(0x04) & 0x3F);
  5854     0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  5855     0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  5856     0E7D  0822               	movf	DS3231_Get_Date@day,w
  5857     0E7E  0084               	movwf	4
  5858     0E7F  1783               	bsf	3,7
  5859     0E80  1C23               	btfss	DS3231_Get_Date@day+1,0
  5860     0E81  1383               	bcf	3,7
  5861     0E82  3004               	movlw	4
  5862     0E83  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5863     0E88  393F               	andlw	63
  5864     0E89  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5865     0E8E  0080               	movwf	0
  5866                           
  5867                           ;REAL_CLOCK.c: 34:     *mth = DS3231_Bcd_Bin(DS3231_Read(0x05) & 0x1F);
  5868     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  5869     0E90  1303               	bcf	3,6	;RP1=0, select bank0
  5870     0E91  0824               	movf	DS3231_Get_Date@mth,w
  5871     0E92  0084               	movwf	4
  5872     0E93  1783               	bsf	3,7
  5873     0E94  1C25               	btfss	DS3231_Get_Date@mth+1,0
  5874     0E95  1383               	bcf	3,7
  5875     0E96  3005               	movlw	5
  5876     0E97  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5877     0E9C  391F               	andlw	31
  5878     0E9D  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5879     0EA2  0080               	movwf	0
  5880                           
  5881                           ;REAL_CLOCK.c: 35:     *year = DS3231_Bcd_Bin(DS3231_Read(0x06));
  5882     0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  5883     0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  5884     0EA5  0826               	movf	DS3231_Get_Date@year,w
  5885     0EA6  0084               	movwf	4
  5886     0EA7  1783               	bsf	3,7
  5887     0EA8  1C27               	btfss	DS3231_Get_Date@year+1,0
  5888     0EA9  1383               	bcf	3,7
  5889     0EAA  3006               	movlw	6
  5890     0EAB  120A  158A  2596  120A  158A  	fcall	_DS3231_Read
  5891     0EB0  120A  158A  23C7  120A  158A  	fcall	_DS3231_Bcd_Bin
  5892     0EB5  0080               	movwf	0
  5893     0EB6                     l314:
  5894     0EB6  0008               	return
  5895     0EB7                     __end_of_DS3231_Get_Date:
  5896                           
  5897                           	psect	text22
  5898     0D96                     __ptext22:	
  5899 ;; *************** function _DS3231_Read *****************
  5900 ;; Defined at:
  5901 ;;		line 55 in file "REAL_CLOCK.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  reg             1    wreg     unsigned char 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  reg             1    0[BANK0 ] unsigned char 
  5906 ;;  data            1    1[BANK0 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      unsigned char 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2, status,0, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5916 ;;      Params:         0       0       0       0       0
  5917 ;;      Locals:         0       2       0       0       0
  5918 ;;      Temps:          2       0       0       0       0
  5919 ;;      Totals:         2       2       0       0       0
  5920 ;;Total ram usage:        4 bytes
  5921 ;; Hardware stack levels used: 1
  5922 ;; Hardware stack levels required when called: 3
  5923 ;; This function calls:
  5924 ;;		_I2C_Master_Read
  5925 ;;		_I2C_Master_RepeatedStart
  5926 ;;		_I2C_Master_Start
  5927 ;;		_I2C_Master_Stop
  5928 ;;		_I2C_Master_Write
  5929 ;; This function is called by:
  5930 ;;		_DS3231_Get_Date
  5931 ;;		_DS3231_Get_Time
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935     0D96                     _DS3231_Read:	
  5936                           ;psect for function _DS3231_Read
  5937                           
  5938                           
  5939                           ;incstack = 0
  5940                           ; Regs used in _DS3231_Read: [wreg+status,2+status,0+pclath+cstack]
  5941                           ;DS3231_Read@reg stored from wreg
  5942     0D96  1283               	bcf	3,5	;RP0=0, select bank0
  5943     0D97  1303               	bcf	3,6	;RP1=0, select bank0
  5944     0D98  00A0               	movwf	DS3231_Read@reg
  5945     0D99                     l2023:
  5946     0D99                     l2025:
  5947                           
  5948                           ;REAL_CLOCK.c: 58:     I2C_Master_Start();
  5949     0D99  120A  158A  2327  120A  158A  	fcall	_I2C_Master_Start
  5950     0D9E                     l2027:
  5951                           
  5952                           ;REAL_CLOCK.c: 59:     I2C_Master_Write(0xD0);
  5953     0D9E  30D0               	movlw	208
  5954     0D9F  00F7               	movwf	I2C_Master_Write@d
  5955     0DA0  3000               	movlw	0
  5956     0DA1  00F8               	movwf	I2C_Master_Write@d+1
  5957     0DA2  120A  158A  2339  120A  158A  	fcall	_I2C_Master_Write
  5958     0DA7                     l2029:
  5959                           
  5960                           ;REAL_CLOCK.c: 60:     I2C_Master_Write(reg);
  5961     0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  5962     0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  5963     0DA9  0820               	movf	DS3231_Read@reg,w
  5964     0DAA  00F9               	movwf	??_DS3231_Read
  5965     0DAB  01FA               	clrf	??_DS3231_Read+1
  5966     0DAC  0879               	movf	??_DS3231_Read,w
  5967     0DAD  00F7               	movwf	I2C_Master_Write@d
  5968     0DAE  087A               	movf	??_DS3231_Read+1,w
  5969     0DAF  00F8               	movwf	I2C_Master_Write@d+1
  5970     0DB0  120A  158A  2339  120A  158A  	fcall	_I2C_Master_Write
  5971     0DB5                     l2031:
  5972                           
  5973                           ;REAL_CLOCK.c: 61:     I2C_Master_RepeatedStart();
  5974     0DB5  120A  158A  231E  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5975     0DBA                     l2033:
  5976                           
  5977                           ;REAL_CLOCK.c: 62:     I2C_Master_Write(0xD0 | 0x01);
  5978     0DBA  30D1               	movlw	209
  5979     0DBB  00F7               	movwf	I2C_Master_Write@d
  5980     0DBC  3000               	movlw	0
  5981     0DBD  00F8               	movwf	I2C_Master_Write@d+1
  5982     0DBE  120A  158A  2339  120A  158A  	fcall	_I2C_Master_Write
  5983     0DC3                     l2035:
  5984                           
  5985                           ;REAL_CLOCK.c: 63:     data = I2C_Master_Read(0);
  5986     0DC3  3000               	movlw	0
  5987     0DC4  00F3               	movwf	I2C_Master_Read@a
  5988     0DC5  00F4               	movwf	I2C_Master_Read@a+1
  5989     0DC6  120A  158A  247F  120A  158A  	fcall	_I2C_Master_Read
  5990     0DCB  0873               	movf	?_I2C_Master_Read,w
  5991     0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  5992     0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  5993     0DCE  00A1               	movwf	DS3231_Read@data
  5994     0DCF                     l2037:
  5995                           
  5996                           ;REAL_CLOCK.c: 65:     I2C_Master_Stop();
  5997     0DCF  120A  158A  2330  120A  158A  	fcall	_I2C_Master_Stop
  5998     0DD4                     l2039:
  5999                           
  6000                           ;REAL_CLOCK.c: 66:     return data;
  6001     0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  6002     0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  6003     0DD6  0821               	movf	DS3231_Read@data,w
  6004     0DD7                     l323:
  6005     0DD7  0008               	return
  6006     0DD8                     __end_of_DS3231_Read:
  6007                           
  6008                           	psect	text23
  6009     0B39                     __ptext23:	
  6010 ;; *************** function _I2C_Master_Write *****************
  6011 ;; Defined at:
  6012 ;;		line 65 in file "I2C.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  d               2    7[COMMON] unsigned int 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6026 ;;      Params:         2       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0
  6029 ;;      Totals:         2       0       0       0       0
  6030 ;;Total ram usage:        2 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 2
  6033 ;; This function calls:
  6034 ;;		_I2C_Master_Wait
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;;		_DS3231_Set_Date_Time
  6038 ;;		_DS3231_Read
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042     0B39                     _I2C_Master_Write:	
  6043                           ;psect for function _I2C_Master_Write
  6044                           
  6045     0B39                     l1871:	
  6046                           ;incstack = 0
  6047                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6048                           
  6049                           
  6050                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6051     0B39  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6052     0B3E                     l1873:
  6053                           
  6054                           ;I2C.c: 68:     SSPBUF = d;
  6055     0B3E  0877               	movf	I2C_Master_Write@d,w
  6056     0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  6057     0B40  1303               	bcf	3,6	;RP1=0, select bank0
  6058     0B41  0093               	movwf	19	;volatile
  6059     0B42                     l233:
  6060     0B42  0008               	return
  6061     0B43                     __end_of_I2C_Master_Write:
  6062                           
  6063                           	psect	text24
  6064     0B30                     __ptext24:	
  6065 ;; *************** function _I2C_Master_Stop *****************
  6066 ;; Defined at:
  6067 ;;		line 55 in file "I2C.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, pclath, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6081 ;;      Params:         0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 2
  6088 ;; This function calls:
  6089 ;;		_I2C_Master_Wait
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;;		_DS3231_Set_Date_Time
  6093 ;;		_DS3231_Read
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097     0B30                     _I2C_Master_Stop:	
  6098                           ;psect for function _I2C_Master_Stop
  6099                           
  6100     0B30                     l1875:	
  6101                           ;incstack = 0
  6102                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6103                           
  6104                           
  6105                           ;I2C.c: 57:     I2C_Master_Wait();
  6106     0B30  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6107     0B35                     l1877:
  6108                           
  6109                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6110     0B35  1683               	bsf	3,5	;RP0=1, select bank1
  6111     0B36  1303               	bcf	3,6	;RP1=0, select bank1
  6112     0B37  1511               	bsf	17,2	;volatile
  6113     0B38                     l230:
  6114     0B38  0008               	return
  6115     0B39                     __end_of_I2C_Master_Stop:
  6116                           
  6117                           	psect	text25
  6118     0B27                     __ptext25:	
  6119 ;; *************** function _I2C_Master_Start *****************
  6120 ;; Defined at:
  6121 ;;		line 39 in file "I2C.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0, pclath, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6135 ;;      Params:         0       0       0       0       0
  6136 ;;      Locals:         0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0
  6138 ;;      Totals:         0       0       0       0       0
  6139 ;;Total ram usage:        0 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 2
  6142 ;; This function calls:
  6143 ;;		_I2C_Master_Wait
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;;		_DS3231_Set_Date_Time
  6147 ;;		_DS3231_Read
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151     0B27                     _I2C_Master_Start:	
  6152                           ;psect for function _I2C_Master_Start
  6153                           
  6154     0B27                     l1867:	
  6155                           ;incstack = 0
  6156                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6157                           
  6158                           
  6159                           ;I2C.c: 41:     I2C_Master_Wait();
  6160     0B27  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6161     0B2C                     l1869:
  6162                           
  6163                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6164     0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  6165     0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  6166     0B2E  1411               	bsf	17,0	;volatile
  6167     0B2F                     l224:
  6168     0B2F  0008               	return
  6169     0B30                     __end_of_I2C_Master_Start:
  6170                           
  6171                           	psect	text26
  6172     0B1E                     __ptext26:	
  6173 ;; *************** function _I2C_Master_RepeatedStart *****************
  6174 ;; Defined at:
  6175 ;;		line 47 in file "I2C.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6189 ;;      Params:         0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0
  6192 ;;      Totals:         0       0       0       0       0
  6193 ;;Total ram usage:        0 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 2
  6196 ;; This function calls:
  6197 ;;		_I2C_Master_Wait
  6198 ;; This function is called by:
  6199 ;;		_DS3231_Read
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203     0B1E                     _I2C_Master_RepeatedStart:	
  6204                           ;psect for function _I2C_Master_RepeatedStart
  6205                           
  6206     0B1E                     l1895:	
  6207                           ;incstack = 0
  6208                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6209                           
  6210                           
  6211                           ;I2C.c: 49:     I2C_Master_Wait();
  6212     0B1E  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6213     0B23                     l1897:
  6214                           
  6215                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  6216     0B23  1683               	bsf	3,5	;RP0=1, select bank1
  6217     0B24  1303               	bcf	3,6	;RP1=0, select bank1
  6218     0B25  1491               	bsf	17,1	;volatile
  6219     0B26                     l227:
  6220     0B26  0008               	return
  6221     0B27                     __end_of_I2C_Master_RepeatedStart:
  6222                           
  6223                           	psect	text27
  6224     0C7F                     __ptext27:	
  6225 ;; *************** function _I2C_Master_Read *****************
  6226 ;; Defined at:
  6227 ;;		line 74 in file "I2C.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  a               2    3[COMMON] unsigned short 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  temp            2    7[COMMON] unsigned short 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  2    3[COMMON] unsigned short 
  6234 ;; Registers used:
  6235 ;;		wreg, status,2, status,0, pclath, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6241 ;;      Params:         2       0       0       0       0
  6242 ;;      Locals:         2       0       0       0       0
  6243 ;;      Temps:          2       0       0       0       0
  6244 ;;      Totals:         6       0       0       0       0
  6245 ;;Total ram usage:        6 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 2
  6248 ;; This function calls:
  6249 ;;		_I2C_Master_Wait
  6250 ;; This function is called by:
  6251 ;;		_main
  6252 ;;		_DS3231_Read
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256     0C7F                     _I2C_Master_Read:	
  6257                           ;psect for function _I2C_Master_Read
  6258                           
  6259     0C7F                     l1879:	
  6260                           ;incstack = 0
  6261                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6262                           
  6263                           
  6264                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  6265     0C7F  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6266     0C84                     l1881:
  6267                           
  6268                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  6269     0C84  1683               	bsf	3,5	;RP0=1, select bank1
  6270     0C85  1303               	bcf	3,6	;RP1=0, select bank1
  6271     0C86  1591               	bsf	17,3	;volatile
  6272                           
  6273                           ;I2C.c: 79:     I2C_Master_Wait();
  6274     0C87  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6275     0C8C                     l1883:
  6276                           
  6277                           ;I2C.c: 80:     temp = SSPBUF;
  6278     0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  6279     0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  6280     0C8E  0813               	movf	19,w	;volatile
  6281     0C8F  00F5               	movwf	??_I2C_Master_Read
  6282     0C90  01F6               	clrf	??_I2C_Master_Read+1
  6283     0C91  0875               	movf	??_I2C_Master_Read,w
  6284     0C92  00F7               	movwf	I2C_Master_Read@temp
  6285     0C93  0876               	movf	??_I2C_Master_Read+1,w
  6286     0C94  00F8               	movwf	I2C_Master_Read@temp+1
  6287     0C95                     l1885:
  6288                           
  6289                           ;I2C.c: 81:     I2C_Master_Wait();
  6290     0C95  120A  158A  2343  120A  158A  	fcall	_I2C_Master_Wait
  6291     0C9A                     l1887:
  6292                           
  6293                           ;I2C.c: 82:     if(a == 1){
  6294     0C9A  0373               	decf	I2C_Master_Read@a,w
  6295     0C9B  0474               	iorwf	I2C_Master_Read@a+1,w
  6296     0C9C  1D03               	btfss	3,2
  6297     0C9D  2C9F               	goto	u1181
  6298     0C9E  2CA0               	goto	u1180
  6299     0C9F                     u1181:
  6300     0C9F  2CA4               	goto	l236
  6301     0CA0                     u1180:
  6302     0CA0                     l1889:
  6303                           
  6304                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  6305     0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  6306     0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  6307     0CA2  1291               	bcf	17,5	;volatile
  6308                           
  6309                           ;I2C.c: 84:     }else{
  6310     0CA3  2CA7               	goto	l237
  6311     0CA4                     l236:
  6312                           
  6313                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  6314     0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  6315     0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  6316     0CA6  1691               	bsf	17,5	;volatile
  6317     0CA7                     l237:	
  6318                           ;I2C.c: 86:     }
  6319                           
  6320                           
  6321                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  6322     0CA7  1611               	bsf	17,4	;volatile
  6323     0CA8                     l1891:
  6324                           
  6325                           ;I2C.c: 88:     return temp;
  6326     0CA8  0878               	movf	I2C_Master_Read@temp+1,w
  6327     0CA9  00F4               	movwf	?_I2C_Master_Read+1
  6328     0CAA  0877               	movf	I2C_Master_Read@temp,w
  6329     0CAB  00F3               	movwf	?_I2C_Master_Read
  6330     0CAC                     l238:
  6331     0CAC  0008               	return
  6332     0CAD                     __end_of_I2C_Master_Read:
  6333                           
  6334                           	psect	text28
  6335     0B43                     __ptext28:	
  6336 ;; *************** function _I2C_Master_Wait *****************
  6337 ;; Defined at:
  6338 ;;		line 32 in file "I2C.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;		None
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;		None
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6352 ;;      Params:         0       0       0       0       0
  6353 ;;      Locals:         0       0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0
  6355 ;;      Totals:         0       0       0       0       0
  6356 ;;Total ram usage:        0 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; Hardware stack levels required when called: 1
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_I2C_Master_Start
  6363 ;;		_I2C_Master_RepeatedStart
  6364 ;;		_I2C_Master_Stop
  6365 ;;		_I2C_Master_Write
  6366 ;;		_I2C_Master_Read
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370     0B43                     _I2C_Master_Wait:	
  6371                           ;psect for function _I2C_Master_Wait
  6372                           
  6373     0B43                     l1863:	
  6374                           ;incstack = 0
  6375                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6376                           
  6377     0B43                     l218:	
  6378                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6379                           
  6380     0B43  1683               	bsf	3,5	;RP0=1, select bank1
  6381     0B44  1303               	bcf	3,6	;RP1=0, select bank1
  6382     0B45  1914               	btfsc	20,2	;volatile
  6383     0B46  2B48               	goto	u1161
  6384     0B47  2B49               	goto	u1160
  6385     0B48                     u1161:
  6386     0B48  2B43               	goto	l218
  6387     0B49                     u1160:
  6388     0B49                     l1865:
  6389     0B49  0811               	movf	17,w	;volatile
  6390     0B4A  391F               	andlw	31
  6391     0B4B  1D03               	btfss	3,2
  6392     0B4C  2B4E               	goto	u1171
  6393     0B4D  2B4F               	goto	u1170
  6394     0B4E                     u1171:
  6395     0B4E  2B43               	goto	l218
  6396     0B4F                     u1170:
  6397     0B4F                     l221:
  6398     0B4F  0008               	return
  6399     0B50                     __end_of_I2C_Master_Wait:
  6400                           
  6401                           	psect	text29
  6402     0BC7                     __ptext29:	
  6403 ;; *************** function _DS3231_Bcd_Bin *****************
  6404 ;; Defined at:
  6405 ;;		line 88 in file "REAL_CLOCK.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  bcd_value       1    wreg     unsigned char 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  bcd_value       1    5[COMMON] unsigned char 
  6410 ;;  temp            1    6[COMMON] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      unsigned char 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6420 ;;      Params:         0       0       0       0       0
  6421 ;;      Locals:         2       0       0       0       0
  6422 ;;      Temps:          2       0       0       0       0
  6423 ;;      Totals:         4       0       0       0       0
  6424 ;;Total ram usage:        4 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_DS3231_Get_Date
  6431 ;;		_DS3231_Get_Time
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435     0BC7                     _DS3231_Bcd_Bin:	
  6436                           ;psect for function _DS3231_Bcd_Bin
  6437                           
  6438                           
  6439                           ;incstack = 0
  6440                           ; Regs used in _DS3231_Bcd_Bin: [wreg+status,2+status,0]
  6441                           ;DS3231_Bcd_Bin@bcd_value stored from wreg
  6442     0BC7  00F5               	movwf	DS3231_Bcd_Bin@bcd_value
  6443     0BC8                     l2043:
  6444                           
  6445                           ;REAL_CLOCK.c: 88: uint8_t DS3231_Bcd_Bin(uint8_t bcd_value);REAL_CLOCK.c: 89: {;REAL_CL
      +                          OCK.c: 90:     uint8_t temp;;REAL_CLOCK.c: 91:     temp = bcd_value;
  6446     0BC8  0875               	movf	DS3231_Bcd_Bin@bcd_value,w
  6447     0BC9  00F6               	movwf	DS3231_Bcd_Bin@temp
  6448                           
  6449                           ;REAL_CLOCK.c: 92:     temp >>= 1;
  6450     0BCA  1003               	clrc
  6451     0BCB  0CF6               	rrf	DS3231_Bcd_Bin@temp,f
  6452     0BCC                     l2045:
  6453                           
  6454                           ;REAL_CLOCK.c: 93:     temp &= 0x78;
  6455     0BCC  3078               	movlw	120
  6456     0BCD  00F3               	movwf	??_DS3231_Bcd_Bin
  6457     0BCE  0873               	movf	??_DS3231_Bcd_Bin,w
  6458     0BCF  05F6               	andwf	DS3231_Bcd_Bin@temp,f
  6459     0BD0                     l2047:
  6460                           
  6461                           ;REAL_CLOCK.c: 94:     return(temp + (temp >> 2) + (bcd_value & 0x0f));
  6462     0BD0  0876               	movf	DS3231_Bcd_Bin@temp,w
  6463     0BD1  00F3               	movwf	??_DS3231_Bcd_Bin
  6464     0BD2  3002               	movlw	2
  6465     0BD3                     u1435:
  6466     0BD3  1003               	clrc
  6467     0BD4  0CF3               	rrf	??_DS3231_Bcd_Bin,f
  6468     0BD5  3EFF               	addlw	-1
  6469     0BD6  1D03               	skipz
  6470     0BD7  2BD3               	goto	u1435
  6471     0BD8  0875               	movf	DS3231_Bcd_Bin@bcd_value,w
  6472     0BD9  390F               	andlw	15
  6473     0BDA  0773               	addwf	??_DS3231_Bcd_Bin,w
  6474     0BDB  00F4               	movwf	??_DS3231_Bcd_Bin+1
  6475     0BDC  0876               	movf	DS3231_Bcd_Bin@temp,w
  6476     0BDD  0774               	addwf	??_DS3231_Bcd_Bin+1,w
  6477     0BDE                     l334:
  6478     0BDE  0008               	return
  6479     0BDF                     __end_of_DS3231_Bcd_Bin:
  6480                           
  6481                           	psect	text30
  6482     0BDF                     __ptext30:	
  6483 ;; *************** function _isr *****************
  6484 ;; Defined at:
  6485 ;;		line 57 in file "main.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6499 ;;      Params:         0       0       0       0       0
  6500 ;;      Locals:         0       0       0       0       0
  6501 ;;      Temps:          3       0       0       0       0
  6502 ;;      Totals:         3       0       0       0       0
  6503 ;;Total ram usage:        3 bytes
  6504 ;; Hardware stack levels used: 1
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		Interrupt level 1
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512     0BDF                     _isr:	
  6513                           ;psect for function _isr
  6514                           
  6515     0BDF                     i1l2349:
  6516                           
  6517                           ;main.c: 59:     if (INTCONbits.RBIF){
  6518     0BDF  1C0B               	btfss	11,0	;volatile
  6519     0BE0  2BE2               	goto	u186_21
  6520     0BE1  2BE3               	goto	u186_20
  6521     0BE2                     u186_21:
  6522     0BE2  2BF2               	goto	i1l94
  6523     0BE3                     u186_20:
  6524     0BE3                     i1l2351:
  6525                           
  6526                           ;main.c: 60:         if (PORTBbits.RB0 == 0) {
  6527     0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  6528     0BE4  1303               	bcf	3,6	;RP1=0, select bank0
  6529     0BE5  1806               	btfsc	6,0	;volatile
  6530     0BE6  2BE8               	goto	u187_21
  6531     0BE7  2BE9               	goto	u187_20
  6532     0BE8                     u187_21:
  6533     0BE8  2BF1               	goto	i1l90
  6534     0BE9                     u187_20:
  6535     0BE9                     i1l2353:
  6536                           
  6537                           ;main.c: 61:             estado++;
  6538     0BE9  3001               	movlw	1
  6539     0BEA  00F0               	movwf	??_isr
  6540     0BEB  0870               	movf	??_isr,w
  6541     0BEC  07CB               	addwf	_estado,f
  6542     0BED                     i1l91:	
  6543                           ;main.c: 64:             }
  6544                           
  6545                           
  6546                           ;main.c: 62:             while (PORTBbits.RB0 == 0) {
  6547     0BED  1C06               	btfss	6,0	;volatile
  6548     0BEE  2BF0               	goto	u188_21
  6549     0BEF  2BF1               	goto	u188_20
  6550     0BF0                     u188_21:
  6551     0BF0  2BED               	goto	i1l91
  6552     0BF1                     u188_20:
  6553     0BF1                     i1l90:	
  6554                           ;main.c: 65:         }
  6555                           
  6556                           
  6557                           ;main.c: 66:         INTCONbits.RBIF = 0;
  6558     0BF1  100B               	bcf	11,0	;volatile
  6559     0BF2                     i1l94:
  6560     0BF2  0872               	movf	??_isr+2,w
  6561     0BF3  008A               	movwf	10
  6562     0BF4  0E71               	swapf	??_isr+1,w
  6563     0BF5  0083               	movwf	3
  6564     0BF6  0EFE               	swapf	btemp,f
  6565     0BF7  0E7E               	swapf	btemp,w
  6566     0BF8  0009               	retfie
  6567     0BF9                     __end_of_isr:
  6568     007E                     btemp	set	126	;btemp
  6569     007E                     wtemp0	set	126
  6570                           
  6571                           	psect	intentry
  6572     0004                     __pintentry:	
  6573                           ;incstack = 0
  6574                           ; Regs used in _isr: [wreg+status,2+status,0]
  6575                           
  6576     0004                     interrupt_function:
  6577     007E                     saved_w	set	btemp
  6578     0004  00FE               	movwf	btemp
  6579     0005  0E03               	swapf	3,w
  6580     0006  00F1               	movwf	??_isr+1
  6581     0007  080A               	movf	10,w
  6582     0008  00F2               	movwf	??_isr+2
  6583     0009  120A  158A  2BDF   	ljmp	_isr
  6584                           
  6585                           	psect	idloc
  6586                           
  6587                           ;Config register IDLOC0 @ 0x2000
  6588                           ;	unspecified, using default values
  6589     2000                     	org	8192
  6590     2000  3FFF               	dw	16383
  6591                           
  6592                           ;Config register IDLOC1 @ 0x2001
  6593                           ;	unspecified, using default values
  6594     2001                     	org	8193
  6595     2001  3FFF               	dw	16383
  6596                           
  6597                           ;Config register IDLOC2 @ 0x2002
  6598                           ;	unspecified, using default values
  6599     2002                     	org	8194
  6600     2002  3FFF               	dw	16383
  6601                           
  6602                           ;Config register IDLOC3 @ 0x2003
  6603                           ;	unspecified, using default values
  6604     2003                     	org	8195
  6605     2003  3FFF               	dw	16383
  6606                           
  6607                           	psect	config
  6608                           
  6609                           ;Config register CONFIG1 @ 0x2007
  6610                           ;	Oscillator Selection bits
  6611                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6612                           ;	Watchdog Timer Enable bit
  6613                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6614                           ;	Power-up Timer Enable bit
  6615                           ;	PWRTE = OFF, PWRT disabled
  6616                           ;	RE3/MCLR pin function select bit
  6617                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6618                           ;	Code Protection bit
  6619                           ;	CP = OFF, Program memory code protection is disabled
  6620                           ;	Data Code Protection bit
  6621                           ;	CPD = OFF, Data memory code protection is disabled
  6622                           ;	Brown Out Reset Selection bits
  6623                           ;	BOREN = OFF, BOR disabled
  6624                           ;	Internal External Switchover bit
  6625                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6626                           ;	Fail-Safe Clock Monitor Enabled bit
  6627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6628                           ;	Low Voltage Programming Enable bit
  6629                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6630                           ;	In-Circuit Debugger Mode bit
  6631                           ;	DEBUG = 0x1, unprogramme  6632     2007                     	org	8199
  6633     2007  20D4               	dw	8404
  6634                           
  6635                           ;Config register CONFIG2 @ 0x2008
  6636                           ;	Brown-out Reset Selection bit
  6637                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6638                           ;	Flash Program Memory Self Write Enable bits
  6639                           ;	WRT = OFF, Write protection off
  6640     2008                     	org	8200
  6641     2008  3FFF               	dw	16383

Data Sizes:
    Strings     136
    Constant    18
    Data        77
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     34      64
    BANK1            80      0      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main$1276	PTR unsigned char  size(1) Largest target is 77
		 -> dw(BANK1[77]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 77
		 -> STR_12(CODE[7]), ?_sprintf(BANK0[2]), dw(BANK1[77]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[3]), STR_10(CODE[14]), STR_9(CODE[13]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[7]), STR_4(CODE[10]), 
		 -> STR_3(CODE[10]), STR_2(CODE[23]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    DS3231_Get_Time@hr	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Time@min	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Time@sec	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    DS3231_Get_Date@year	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lyr(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@mth	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lmonth(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@day	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@lday(COMMON[1]), RAM(DATA[512]), 

    DS3231_Get_Date@dow	PTR unsigned char  size(2) Largest target is 512
		 -> DS3231_Get_DayOfWeek@ldow(COMMON[1]), RAM(DATA[512]), 

    LcdALL_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_DS3231_Set_Date_Time
    _main->_LcdALL_Clear
    _main->_LcdALL_Init
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    _LcdALL_Write_String->_LcdALL_Write_Char
    _LcdALL_Write_Char->_LcdALL_Port
    _LcdALL_Set_Cursor->_LcdALL_Cmd
    _LcdALL_Init->_LcdALL_Cmd
    _LcdALL_Clear->_LcdALL_Cmd
    _LcdALL_Cmd->_LcdALL_Port
    _DS3231_Set_Date_Time->_I2C_Master_Write
    _DS3231_Get_Time->_DS3231_Read
    _DS3231_Get_Date->_DS3231_Read
    _DS3231_Read->_I2C_Master_Read
    _DS3231_Read->_I2C_Master_Write
    _I2C_Master_Write->_DS3231_Bin_Bcd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _DS3231_Get_Time->_DS3231_Read
    _DS3231_Get_Date->_DS3231_Read

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13758
                                             31 BANK0      3     3      0
                    _DS3231_Get_Date
                    _DS3231_Get_Time
               _DS3231_Set_Date_Time
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                       _LcdALL_Clear
                        _LcdALL_Init
                  _LcdALL_Set_Cursor
                  _LcdALL_Write_Char
                _LcdALL_Write_String
                             ___bmul
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    20      9    3338
                                              6 BANK0     25    16      9
                             ___bmul (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     444
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              3 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     588
                    _I2C_Master_Init
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0     176
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     144
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Write_String                                  4     4      0     618
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                  _LcdALL_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LcdALL_Write_Char                                    2     2      0     198
                                              6 COMMON     2     2      0
                        _LcdALL_Port
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Set_Cursor                                    3     2      1    1092
                                              9 COMMON     1     0      1
                                              0 BANK0      2     2      0
                         _LcdALL_Cmd
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Init                                          2     2      0     374
                                              9 COMMON     2     2      0
                         _LcdALL_Cmd
                        _LcdALL_Port
 ---------------------------------------------------------------------------------
 (1) _LcdALL_Clear                                         2     2      0     198
                                              9 COMMON     2     2      0
                         _LcdALL_Cmd
 ---------------------------------------------------------------------------------
 (2) _LcdALL_Cmd                                           3     3      0     198
                                              6 COMMON     3     3      0
                        _LcdALL_Port
 ---------------------------------------------------------------------------------
 (3) _LcdALL_Port                                          3     3      0     176
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DS3231_Set_Date_Time                                 9     3      6    1867
                                              9 COMMON     2     2      0
                                              0 BANK0      7     1      6
                     _DS3231_Bin_Bcd
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _DS3231_Bin_Bcd                                       4     4      0      93
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DS3231_Get_Time                                      6     0      6    1790
                                              2 BANK0      6     0      6
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (1) _DS3231_Get_Date                                      8     0      8    2192
                                              2 BANK0      8     0      8
                     _DS3231_Bcd_Bin
                        _DS3231_Read
 ---------------------------------------------------------------------------------
 (2) _DS3231_Read                                          4     4      0    1405
                                              9 COMMON     2     2      0
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1162
                                              7 COMMON     2     0      2
                     _DS3231_Bin_Bcd (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DS3231_Bcd_Bin                                       4     4      0      91
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS3231_Get_Date
     _DS3231_Bcd_Bin
     _DS3231_Read
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _DS3231_Bin_Bcd (ARG)
         _I2C_Master_Wait (ARG)
   _DS3231_Get_Time
     _DS3231_Bcd_Bin
     _DS3231_Read
   _DS3231_Set_Date_Time
     _DS3231_Bin_Bcd
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _I2C_Master_Read
   _I2C_Master_Start
   _I2C_Master_Stop
   _I2C_Master_Write
   _LcdALL_Clear
     _LcdALL_Cmd
       _LcdALL_Port
   _LcdALL_Init
     _LcdALL_Cmd
     _LcdALL_Port
   _LcdALL_Set_Cursor
     _LcdALL_Cmd
   _LcdALL_Write_Char
     _LcdALL_Port
   _LcdALL_Write_String
     _LcdALL_Write_Char
   ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _ioc_init
   _sprintf
     ___bmul (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4D       7       96.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      98      12        0.0%
ABS                  0      0      98       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 08 01:03:54 2023

                               pc 0002                    ___bmul@product 0075                                l99 0033  
                              _dw 00A0                                _hr 0046                                fsr 0004  
             ___wmul@multiplicand 0075                               l102 0456                               l110 016D  
                             l121 01D4                               l105 014C                               l132 024D  
                             l116 01B3                               l221 0B4F                               l230 0B38  
                             l311 0711                               l215 0CE4                               l143 02D5  
                             l127 022C                               l224 0B2F                               l160 037C  
                             l233 0B42                               l218 0B43                               l314 0EB6  
                             l154 0339                               l138 02B4                               l227 0B26  
                             l323 0DD7                               l331 0BC6                               l171 03E0  
                             l236 0CA4                               l252 0FFF                               l237 0CA7  
                             l317 0D95                               l165 039D                               l149 0318  
                             l334 0BDE                               l238 0CAC                               l270 0BAF  
                             l350 0F09                               l510 0C66                               l255 0C12  
                             _ADC 0042                               l264 0C34                               l512 0C7E  
                             l176 0401                               l258 0B5F                               l186 0D1C  
                             l506 0665                               l267 0E19                               l276 0C59  
                             l365 0F0F                               l358 0F09                               l463 0474  
                             l536 0B99                               l546 0F77                               l782 07FF  
                             l792 0D58                               l963 0B71                               _GIE 005F  
                             _day 004A                               _dow 0047                               _min 0045  
                             _sec 0044                               _isr 0BDF                               _mth 0049  
                             fsr0 0004                               indf 0000                        _LcdALL_Cmd 0BF9  
                            l2001 0BFD                              l2011 0BB3                              l2003 0C03  
                            l2013 0BB4                              l2005 0C06                              l2031 0DB5  
                            l2023 0D99                              l2015 0BBA                              l2007 0C0F  
                            l2111 0D33                              l2103 0D1D                              l2033 0DBA  
                            l2025 0D99                              l2017 0BC1                              l2009 0BB1  
                            l2113 0D37                              l2105 0D25                              l2121 0D54  
                            l2201 051D                              l2043 0BC8                              l2035 0DC3  
                            l2027 0D9E                              l2019 0BC5                              l2131 0D01  
                            l2115 0D41                              l2107 0D28                              l2051 0B61  
                            l2211 0547                              l2203 0520                              l2045 0BCC  
                            l2037 0DCF                              l2029 0DA7                              l2141 0DD8  
                            l2301 0C3B                              l2133 0D07                              l2125 0CE5  
                            l2117 0D47                              l2109 0D2F                              l2053 0B62  
                            l2213 054D                              l2205 0525                              l2221 0565  
                            l2047 0BD0                              l2039 0DD4                              l2151 0E67  
                            l2311 0669                              l2143 0DDE                              l2303 0C46  
                            l2135 0D08                              l2127 0CF5                              l2119 0D4E  
                            l2071 0C74                              l2063 0C5A                              l2055 0B68  
                            l2223 0584                              l2215 0551                              l2207 0529  
                            l2153 0D59                              l2321 069A                              l2313 0671  
                            l2145 0DE7                              l2305 0C4E                              l2137 0D0C  
                            l2129 0CFB                              l2081 07C4                              l2073 0C7A  
                            l2065 0C5C                              l2057 0B6E                              l2241 05C3  
                            l2233 0592                              l2225 058C                              l2217 0560  
                            l2209 0538                              l2161 046B                              l2401 0167  
                            l2331 06F9                              l2323 06AD                              l2315 0676  
                            l2307 0B50                              l2147 0DF6                              l2139 0D0D  
                            l2091 07E7                              l2083 07C7                              l2067 0C60  
                            l2059 0B70                              l2251 05E2                              l2243 05CF  
                            l2227 0590                              l2171 048C                              l2163 0470  
                            l2155 045D                              l2411 0181                              l2403 0169  
                            l2333 070C                              l2325 06C0                              l2317 067F  
                            l2309 0B56                              l2149 0DFC                              l2341 0B8F  
                            l2093 07ED                              l2085 07CE                              l2077 07BC  
                            l2069 0C6D                              l2261 0602                              l2253 05E6  
                            l2245 05D3                              l2237 05AE                              l2181 04CC  
                            l2173 049C                              l2165 0475                              l2157 0460  
                            l2501 02D9                              l2421 01AD                              l2413 0188  
                            l2327 06D3                              l2319 0687                              l2343 0B91  
                            l2335 0B86                              l2095 07EE                              l2087 07D2  
                            l2079 07BE                              l2271 0648                              l2263 060E  
                            l2247 05D7                              l2255 05F3                              l2239 05B8  
                            l2191 04F2                              l2183 04DD                              l2175 04A0  
                            l2159 0466                              l2511 02FD                              l2503 02E3  
                            l2431 01CE                              l2415 018B                              l2407 0171  
                            l2329 06E6                              l2345 0B98                              l2337 0B87  
                            l2097 07F5                              l2089 07D6                              l2265 0611  
                            l2257 05F9                              l2249 05DD                              l2193 04F5  
                            l2185 04E4                              l2177 04B5                              l2169 0479  
                            l2273 0651                              l2601 042E                              l2521 0326  
                            l2513 030C                              l2505 02E9                              l2441 01E8  
                            l2425 01B7                              l2433 01D0                              l2417 0198  
                            l2409 017B                              l2361 0068                              l2291 0C1E  
                            l2339 0B8B                              l2099 07FB                              l2267 063F  
                            l2259 05FE                              l2275 0661                              l2195 04FB  
                            l2187 04E8                              l2179 04C8                              l2531 033D  
                            l2523 032C                              l2515 0312                              l2507 02EE  
                            l2451 0226                              l2443 01EF                              l2427 01C1  
                            l2419 01A7                              l2371 009A                              l2363 0071  
                            l2355 0029                              l1901 0F7C                              l2293 0C25  
                            l2269 0644                              l2197 050C                              l2189 04EE  
                            l2541 0361                              l2533 0347                              l2525 0333  
                            l2509 02F0                              l2461 0247                              l2445 01F2  
                            l2437 01D8                              l2429 01C7                              l2381 010E  
                            l2373 00C2                              l2605 0432                              l2365 007F  
                            l2357 0054                              l1911 0FC8                              l1903 0F86  
                            l2295 0C2B                              l2287 0C16                              l2199 0516  
                            l2551 038A                              l2543 0370                              l2535 034D  
                            l2519 031C                              l2527 0335                              l2471 0261  
                            l2455 0230                              l2463 0249                              l2447 0211  
                            l2439 01E2                              l2391 0146                              l2383 0114  
                            l2375 00DB                              l2367 0084                              l2359 0063  
                            l1913 0FDA                              l1905 0F92                              l2297 0C2E  
                            l2289 0C1B                              l1921 0F25                              l2561 03A1  
                            l2553 0390                              l2545 0376                              l2537 0352  
                            l2481 028A                              l2473 0266                              l2457 023A  
                            l2449 0220                              l2385 0124                              l2377 00E3  
                            l2369 0093                              l1915 0FED                              l1907 0FA4  
                            l2299 0C38                              l1931 0F5F                              l1923 0F32  
                            l2571 03C5                              l2563 03AB                              l2555 0397  
                            l2539 0354                              l2491 02C2                              l2483 0292  
                            l2475 0268                              l2467 0251                              l2459 0240  
                            l2395 0150                              l2387 0131                              l2379 00E9  
                            l1909 0FB7                              l1941 0B9B                              l1933 0F60  
                            l1925 0F36                              l1917 0F10                              l2581 03EE  
                            l2573 03D4                              l2565 03B1                              l2549 0380  
                            l2557 0399                              l2493 02C8                              l2485 02AE  
                            l2477 0275                              l2469 025B                              l2397 015A  
                            l2389 0140                              l1863 0B43                              l1871 0B39  
                            l1943 0B9E                              l1935 0F69                              l1927 0F3F  
                            l1919 0F22                              l1951 0EB8                              l2591 0405  
                            l2583 03F4                              l2575 03DA                              l2567 03B6  
                            l2495 02CF                              l2479 0284                              l2399 0160  
                            l1865 0B49                              l1881 0C84                              l1873 0B3E  
                            l1945 0BA4                              l1929 0F51                              l1937 0F6F  
                            l1961 0ECD                              l1953 0EBB                              l2593 040F  
                            l2585 03FB                              l2569 03B8                              l2489 02B8  
                            l2497 02D1                              l1891 0CA8                              l1883 0C8C  
                            l1867 0B27                              l1875 0B30                              l1947 0BA7  
                            l1971 0EE7                              l1963 0ED3                              l1955 0EC0  
                            l2691 0579                              l2595 0415                              l2579 03E4  
                            l2587 03FD                              l1885 0C95                              l1869 0B2C  
                            l1877 0B35                              l1949 0BAC                              l1981 0EFF  
                            l1973 0EEB                              l1965 0ED7                              l1957 0EC4  
                            l2597 041A                              l1887 0C9A                              l1879 0C7F  
                            l1895 0B1E                              l1991 0CB4                              l1983 0F05  
                            l1975 0EF1                              l1967 0EDD                              l1959 0EC9  
                            l2687 043C                              l2599 041C                              l1889 0CA0  
                            l1897 0B23                              l1993 0CE1                              l1985 0F0D  
                            l1977 0EF5                              l1969 0EE1                              l2689 0487  
                            l1899 0F79                              l1995 0CE2                              l1987 0CAD  
                            l1979 0EFB                              l1997 0CE3                              l1989 0CB1  
                            l1999 0BFA                              ?_isr 0070                              STR_1 0734  
                            STR_2 074B                              STR_3 0797                              STR_4 07A1  
                            STR_5 079A                              STR_6 0762                              STR_7 07B2  
                            STR_8 078C                              STR_9 077F                              u2000 01EF  
                            u2001 01EE                              u2010 022C                              u2011 022B  
                            u2100 02D5                              u2020 0230                              u1205 0FA7  
                            u2101 02D4                              u2021 022F                              u1310 0F6F  
                            u2110 02D9                              u2030 0247                              u1215 0FBA  
                            u1311 0F6E                              u2111 02D8                              u2031 0246  
                            u1160 0B49                              u1400 0F0D                              u1320 0EC0  
                            u2200 0380                              u2120 02EE                              u2040 024D  
                            u1161 0B48                              u1225 0FCB                              u1305 0F61  
                            u1401 0F0C                              u1321 0EBF                              u2201 037F  
                            u2121 02ED                              u2041 024C                              u1170 0B4F  
                            u1250 0F22                              u1410 0CC4                              u1330 0EC9  
                            u2210 0397                              u2130 0318                              u2050 0251  
                            u1171 0B4E                              u1235 0FDD                              u1251 0F21  
                            u1331 0EC8                              u2211 0396                              u2131 0317  
                            u2051 0250                              u1180 0CA0                              u1420 0BBA  
                            u1340 0ED3                              u1500 07C4                              u2300 041A  
                            u2220 039D                              u2140 031C                              u2060 0266  
                            u1181 0C9F                              u1421 0BB9                              u1245 0FF0  
                            u1341 0ED2                              u1501 07C3                              u2301 0419  
                            u2221 039C                              u2141 031B                              u2061 0265  
                            u1270 0F36                              u1350 0EDD                              u2230 03A1  
                            u2150 0333                              u2070 02B4                              u1271 0F35  
                            u1415 0CBF                              u1351 0EDC                              u2231 03A0  
                            u2151 0332                              u2071 02B3                              u1360 0EE7  
                            u1520 07D6                              u1600 0D41                              u1440 0B68  
                            u2240 03B6                              u2160 0339                              u2080 02B8  
                            u1265 0F27                              u1361 0EE6                              u1521 07D5  
                            u1601 0D40                              u1441 0B67                              u2241 03B5  
                            u2161 0338                              u2081 02B7                              u1290 0F51  
                            u1370 0EF1                              u1450 0B6E                              u2250 03E0  
                            u2170 033D                              u2090 02CF                              u1435 0BD3  
                            u1195 0F95                              u1291 0F50                              u1371 0EF0  
                            u1515 07C8                              u1451 0B6D                              u2251 03DF  
                            u2171 033C                              u2091 02CE                              u1380 0EFB  
                            u1540 07E7                              u1620 0D54                              u1460 0C60  
                            u1700 055F                              u2260 03E4                              u2180 0352  
                            u1285 0F38                              u1381 0EFA                              u1541 07E6  
                            u1621 0D53                              u1605 0D3D                              u1461 0C5F  
                            u1701 055E                              u2261 03E3                              u2181 0351  
                            u2317 005C                              u1390 0F05                              u1710 05AD  
                            u1630 0466                              u2270 03FB                              u2190 037C  
                            u1295 0F4D                              u1391 0F04                              u1535 07D7  
                            u1615 0D48                              u1711 05AC                              u1631 0465  
                            u2271 03FA                              u2191 037B                              u2407 02BE  
                            u2327 008C                              u1560 07FB                              u1800 0661  
                            u1720 05B8                              u1640 049C                              u2280 0401  
                            u1561 07FA                              u1545 07E3                              u1801 0660  
                            u1721 05B7                              u1641 049B                              u2281 0400  
                            u2417 02DF                              u2337 011C                              u1810 0C1B  
                            u1570 0D25                              u1490 0C7A                              u1730 05C3  
                            u1650 04DC                              u2290 0405                              u2507 0DF1  
                            u1811 0C1A                              u1555 07EF                              u1571 0D24  
                            u1491 0C79                              u1475 0C67                              u1731 05C2  
                            u1715 05A9                              u1651 04DB                              u2291 0404  
                            u2427 0322                              u2347 0156                              u1820 0C2B  
                            u1740 05D7                              u1660 04EE                              u1900 0150  
                            u2517 0DFE                              u1821 0C2A                              u1485 0C6E  
                            u1741 05D6                              u1661 04ED                              u2437 0343  
                            u2357 0177                              u1901 014F                              u1830 0C59  
                            u1590 0D37                              u1750 05DD                              u1670 050C  
                            u1910 0167                              u2527 0B5A                              u1831 0C58  
                            u1591 0D36                              u1751 05DC                              u1735 05BF  
                            u1671 050B                              u2447 0386                              u2367 01BD  
                            u1911 0166                              u1840 0B8B                              u1760 05F2  
                            u1680 0516                              u1920 016D                              u2537 0C0A  
                            u1841 0B8A                              u1585 0D29                              u1761 05F1  
                            u1681 0515                              u2457 03A7                              u2377 01DE  
                            u1921 016C                              u1850 0B98                              u1770 05F9  
                            u1690 0537                              u1930 0171                              u1851 0B97  
                            u1771 05F8                              u1691 0536                              u2467 03EA  
                            u2387 0236                              u1931 0170                              u1780 060E  
                            u1940 0188                              u1781 060D                              u1685 0512  
                            u2477 040B                              u2397 0257                              u1941 0187  
                            u1790 0651                              u1950 01B3                              u2487 0BA9  
                            u1791 0650                              u1951 01B2                              u1960 01B7  
                            u2497 0DE2                              u1961 01B6                              u1970 01CE  
                            u1890 014C                              u1971 01CD                              u1891 014B  
                            _PEIE 005E                              u1980 01D4                              u1981 01D3  
                            u1990 01D8                              u1991 01D7                              _RBIE 005B  
                            i1l90 0BF1                              i1l91 0BED                              i1l94 0BF2  
__end_of_I2C_Master_RepeatedStart 0B27                              _main 0029                              _year 0048  
                            btemp 007E                              start 000C                 ??_DS3231_Get_Date 007B  
               ___bmul@multiplier 0076                 ??_DS3231_Get_Time 007B                       _LcdALL_Init 0DD8  
                     _LcdALL_Port 0F78                             ??_isr 0070                  ?_I2C_Master_Init 0026  
                ?_I2C_Master_Read 0073                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                             STR_10 0771                             STR_11 07B9  
                           STR_12 07AB                             _ANSEL 0188                   __end_of___lldiv 0F78  
                 __end_of___lwdiv 0800                   __end_of___lwmod 0D59                             _PORTA 0005  
                           _PORTB 0006                             _PORTD 0008                             _PORTE 0009  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _SSPIE 0463                             _TRISE 0089                             _SSPIF 0063  
                 __end_of_dpowers 072C                             _letra 072C                   __end_of_isdigit 0B72  
                           _setup 0CE5                             pclath 000A                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 0666                       ioc_init@pin 0073  
                 __initialization 000F                      __end_of_main 045A                      _LcdALL_Clear 0B50  
                  _DS3231_Bcd_Bin 0BC7       __end_of_LcdALL_Write_String 0C5A                    _DS3231_Bin_Bcd 0BB0  
                          ??_main 003F                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0077  
                     ?_LcdALL_Cmd 0070                ??_I2C_Master_Start 0073               DS3231_Get_Date@year 0026  
              ??_I2C_Master_Write 0079                            ?_setup 0070                            _ANSELH 0189  
                          i1l2351 0BE3                            i1l2353 0BE9                            i1l2349 0BDF  
                          u186_20 0BE3                            u186_21 0BE2                            u187_20 0BE9  
                          u187_21 0BE8                            u188_20 0BF1                            u188_21 0BF0  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0B1E  
          __end_of_DS3231_Bcd_Bin 0BDF                            ___bmul 0B85                            ___wmul 0C5A  
                __end_of_ioc_init 0F10            __end_of_DS3231_Bin_Bcd 0BC7                         ??___lldiv 0020  
                       ??___lwdiv 0077                         ??___lwmod 0024                            _buffer 004C  
                          _estado 004B                         ??_isdigit 0073                            saved_w 007E  
                       ??_sprintf 002F                DS3231_Bcd_Bin@temp 0076           __end_of__initialization 0025  
             ___bmul@multiplicand 0073                    __pcstackCOMMON 0070                   ?_DS3231_Bcd_Bin 0070  
                    __pidataBANK1 0E1A                   ?_DS3231_Bin_Bcd 0070                     __end_of_letra 0734  
                   __end_of_setup 0D1D                    _OPTION_REGbits 0081                      sprintf@width 003B  
                         ??_setup 007B                   _DS3231_Get_Date 0E67                   _DS3231_Get_Time 0D59  
                      __pbssBANK0 0042                     ??_DS3231_Read 0079                        __pmaintext 0029  
                         ?___bmul 0073                      ?_LcdALL_Init 0070                      ?_LcdALL_Port 0070  
                         ?___wmul 0073                        __pintentry 0004                LcdALL_Write_Char@a 0077  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0712  
                       ?_ioc_init 0070               __end_of_DS3231_Read 0DD8                           ___lldiv 0F10  
                         ___lwdiv 07BC                           ___lwmod 0D1D                DS3231_Bin_Bcd@temp 0076  
                         __ptext1 045A                           __ptext2 0B60                           __ptext3 0C5A  
                         __ptext4 0D1D                           __ptext5 07BC                           __ptext6 0CE5  
                         __ptext7 0EB7                           __ptext8 0CAD                           __ptext9 0F10  
                    LcdALL_Port@a 0075                           _dpowers 0722           __end_of_DS3231_Get_Date 0EB7  
                         _isdigit 0B60           __end_of_DS3231_Get_Time 0D96                      ??_LcdALL_Cmd 0076  
                         _sprintf 045A                           clrloop0 0B17              end_of_initialization 0025  
      ??_I2C_Master_RepeatedStart 0073                        ??_ioc_init 0073                   ___lldiv@divisor 0073  
                 ___lldiv@counter 0025                  I2C_Master_Init@c 0026                  I2C_Master_Read@a 0073  
              __end_of_LcdALL_Cmd 0C13                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTEbits 0009                         _TRISBbits 0086                         _TRISCbits 0087  
            LcdALL_Write_String@a 0022              LcdALL_Write_String@i 0020                       _DS3231_Read 0D96  
                ??_DS3231_Bcd_Bin 0073                  ??_DS3231_Bin_Bcd 0073      __end_of_DS3231_Set_Date_Time 0712  
                  __end_of___bmul 0B9A                    __end_of___wmul 0C7F                  ?_DS3231_Get_Date 0022  
             start_initialization 000F                  ?_DS3231_Get_Time 0022                       __end_of_isr 0BF9  
               ??_I2C_Master_Init 002A                 ??_I2C_Master_Read 0075                DS3231_Get_Date@day 0022  
              DS3231_Get_Date@dow 0028                 ??_I2C_Master_Wait 0073                DS3231_Get_Date@mth 0024  
               ??_I2C_Master_Stop 0073                 _LcdALL_Set_Cursor 0C13                ?_LcdALL_Set_Cursor 0079  
                        ??___bmul 0074                          ??___wmul 0077                        init_fetch0 0B72  
                     __pdataBANK1 00A0               ??_LcdALL_Set_Cursor 007A                DS3231_Get_Time@min 0024  
              DS3231_Get_Time@sec 0026                         ___latbits 0002                     __pcstackBANK0 0020  
                    _isdigit$1087 0073         __end_of_LcdALL_Set_Cursor 0C35                       sprintf@flag 0032  
                     sprintf@prec 0035                  _I2C_Master_Start 0B27                  _I2C_Master_Write 0B39  
                ___lwdiv@dividend 0075                     ?_LcdALL_Clear 0070                          ?___lldiv 0073  
            DS3231_Bin_Bcd@retval 0075                          ?___lwdiv 0073                          ?___lwmod 0020  
               _LcdALL_Write_Char 0B9A                         __pstrings 0712                ?_LcdALL_Write_Char 0070  
                        ?_isdigit 0070              _DS3231_Set_Date_Time 0666               ??_LcdALL_Write_Char 0076  
                ___lwdiv@quotient 0078                       LcdALL_Cmd@a 0078                          ?_sprintf 0026  
               interrupt_function 0004                    ___wmul@product 0077                          _IOCBbits 0096  
         DS3231_Bcd_Bin@bcd_value 0075                         clear_ram0 0B16                   DS3231_Read@data 0021  
             _LcdALL_Write_String 0C35                    ??_LcdALL_Clear 0079         __end_of_LcdALL_Write_Char 0BB0  
                     __stringbase 0721                 ___wmul@multiplier 0073                          _WPUBbits 0095  
            ?_LcdALL_Write_String 0070             ?_DS3231_Set_Date_Time 0020               I2C_Master_Read@temp 0077  
                    ?_DS3231_Read 0070           DS3231_Set_Date_Time@mth 0020                 DS3231_Get_Time@hr 0022  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0722                        sprintf@len 0039  
                      sprintf@val 0033                   _I2C_Master_Init 0CAD                   _I2C_Master_Read 0C7F  
                 _I2C_Master_Wait 0B43             ??_LcdALL_Write_String 0078                   _I2C_Master_Stop 0B30  
                 ___lwdiv@divisor 0073                   ___lwdiv@counter 007A                          __ptext10 0B85  
                        __ptext11 0C35                          __ptext20 0D59                          __ptext12 0B9A  
                        __ptext21 0E67                          __ptext13 0C13                          __ptext30 0BDF  
                        __ptext22 0D96                          __ptext14 0DD8                          __ptext23 0B39  
                        __ptext15 0B50                          __ptext24 0B30                          __ptext16 0BF9  
                        __ptext25 0B27                          __ptext17 0F78                          __ptext26 0B1E  
                        __ptext18 0666                          __ptext27 0C7F                          __ptext19 0BB0  
                        __ptext28 0B43                          __ptext29 0BC7                          _ioc_init 0EB7  
      DS3231_Bin_Bcd@binary_value 0074                    DS3231_Read@reg 0020                     ??_LcdALL_Init 0079  
                   ??_LcdALL_Port 0073          __end_of_I2C_Master_Start 0B30            ??_DS3231_Set_Date_Time 0079  
        __end_of_I2C_Master_Write 0B43                        _INTCONbits 000B            DS3231_Set_Date_Time@dw 0022  
          DS3231_Set_Date_Time@dy 0026            DS3231_Set_Date_Time@hr 0023            DS3231_Set_Date_Time@mn 0024  
          DS3231_Set_Date_Time@sc 0025            DS3231_Set_Date_Time@yr 0021                          init_ram0 0B76  
                        isdigit@c 0074              __end_of_LcdALL_Clear 0B60                          intlevel1 0000  
                       sprintf@ap 0036                         sprintf@cp 0037                         sprintf@sp 003E  
                ___lwmod@dividend 0022                  ___lldiv@dividend 0077                         stringcode 071C  
           LcdALL_Set_Cursor@temp 0021                        _OSCCONbits 008F           __end_of_I2C_Master_Init 0CE5  
         __end_of_I2C_Master_Read 0CAD           __end_of_I2C_Master_Wait 0B50           __end_of_I2C_Master_Stop 0B39  
             __end_of_LcdALL_Init 0E1A               __end_of_LcdALL_Port 1000                          sprintf@c 003D  
                        sprintf@f 0026                  ___lldiv@quotient 0021                 I2C_Master_Write@d 0077  
                 ___lwmod@divisor 0020                   ___lwmod@counter 0025                          stringdir 071C  
                        stringtab 0712                       _SSPCON2bits 0091                LcdALL_Set_Cursor@a 0020  
              LcdALL_Set_Cursor@b 0079  
